{
    "name": "/opt/bitcoin-24.0.1/bin/bitcoind",
    "description": "Bitcoin Core daemon",
    "usage": "bitcoind [options] Start Bitcoin Core",
    "options": [
        {
            "option": "-?",
            "description": "Print this help message and exit"
        },
        {
            "option": "-addnode=<ip>",
            "description": "Add a node to connect to and attempt to keep the connection open. This option can be specified multiple times to add multiple nodes; connections are limited to 8 at a time and are counted separately from the -maxconnections limit."
        },
        {
            "option": "-addresstype",
            "description": "What type of addresses to use ('legacy', 'p2sh-segwit', 'bech32', or 'bech32m', default: 'bech32')"
        },
        {
            "option": "-alertnotify=<cmd>",
            "description": "Execute command when an alert is raised (%s in cmd is replaced by message)"
        },
        {
            "option": "-allowip=<ip>",
            "description": "Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP, a network/netmask or a network/CIDR. This option can be specified multiple times."
        },
        {
            "option": "-asmap=<file>",
            "description": "Specify asn mapping used for bucketing of the peers (default: ip_asn.map). Relative paths will be prefixed by the net-specific datadir location."
        },
        {
            "option": "-assumevalid=<hex>",
            "description": "If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification. Default mainnet/testnet/signet values provided."
        },
        {
            "option": "-avoidpartialspends",
            "description": "Group outputs by address, selecting many (possibly all) or none, instead of selecting on a per-output basis. Privacy is improved as addresses are mostly swept with fewer transactions and outputs are aggregated in clean change addresses. Always enabled for wallets with 'avoid_reuse' enabled, otherwise default: 0."
        },
        {
            "option": "-bantime=<n>",
            "description": "Default duration (in seconds) of manually configured bans (default: 86400)"
        },
        {
            "option": "-bind=<addr>[:<port>][=onion]",
            "description": "Bind to given address and always listen on it. Use [host]:port notation for IPv6. Append =onion to tag any incoming connections to that address and port as incoming Tor connections."
        },
        {
            "option": "-blockfilterindex=<type>",
            "description": "Maintain an index of compact filters by block (default: 0, values: basic). If <type> is not supplied or if <type> = 1, indexes for all known types are enabled."
        },
        {
            "option": "-blockmaxweight=<n>",
            "description": "Set maximum BIP141 block weight (default: 3996000)"
        },
        {
            "option": "-blockmintxfee=<amt>",
            "description": "Set lowest fee rate (in BTC/kvB) for transactions to be included in block creation. (default: 0.00001)"
        },
        {
            "option": "-blocknotify=<cmd>",
            "description": "Execute command when the best block changes (%s in cmd is replaced by block hash)"
        },
        {
            "option": "-blockreconstructionextratxn=<n>",
            "description": "Extra transactions to keep in memory for compact block reconstructions (default: 100)"
        },
        {
            "option": "-blocksdir=<dir>",
            "description": "Specify directory to hold blocks subdirectory for *.dat files (default: <datadir>)"
        },
        {
            "option": "-blocksonly",
            "description": "Whether to reject transactions from network peers. Automatic broadcast and rebroadcast of any transactions from inbound peers is disabled, unless the peer has the 'forcerelay' permission. RPC transactions are not affected. (default: 0)"
        },
        {
            "option": "-bytespersigop",
            "description": "Equivalent bytes per sigop in transactions for relay and mining (default: 20)"
        },
        {
            "option": "-cjdnsreachable",
            "description": "If set, then this host is configured for CJDNS (connecting to fc00::/8 addresses would lead us to the CJDNS network, see doc/cjdns.md) (default: 0)"
        },
        {
            "option": "-changetype",
            "description": "What type of change to use ('legacy', 'p2sh-segwit', 'bech32', or 'bech32m'). Default is 'legacy' when -addresstype=legacy, else it is an implementation detail."
        },
        {
            "option": "-chain=<chain>",
            "description": "Use the chain <chain> (default: main). Allowed values: main, test, signet, regtest"
        },
        {
            "option": "-coinstatsindex",
            "description": "Maintain coinstats index used by the gettxoutsetinfo RPC (default: 0)"
        },
        {
            "option": "-conf=<file>",
            "description": "Specify path to read-only configuration file. Relative paths will be prefixed by datadir location (only useable from command line, not configuration file) (default: bitcoin.conf)"
        },
        {
            "option": "-consolidatefeerate=<amt>",
            "description": "The maximum feerate (in BTC/kvB) at which transaction building may use more inputs than strictly necessary so that the wallet's UTXO pool can be reduced (default: 0.0001)."
        },
        {
            "option": "-connect=<ip>",
            "description": "Connect only to the specified node; -noconnect disables automatic connections. This option can be specified multiple times to connect to multiple nodes."
        },
        {
            "option": "-datacarrier",
            "description": "Relay and mine data carrier transactions (default: 1)"
        },
        {
            "option": "-datacarriersize",
            "description": "Maximum size of data in data carrier transactions we relay and mine (default: 83)"
        },
        {
            "option": "-datadir=<dir>",
            "description": "Specify data directory"
        },
        {
            "option": "-dbcache=<n>",
            "description": "Maximum database cache size <n> MiB (4 to 16384, default: 450). In addition, unused mempool memory is shared for this cache (see -maxmempool)."
        },
        {
            "option": "-debug=<category>",
            "description": "Output debug and trace logging (default: -nodebug, supplying <category> is optional). If <category> is not supplied or if <category> = 1, output all debug and trace logging."
        },
        {
            "option": "-debugexclude=<category>",
            "description": "Exclude debug and trace logging for a category. Can be used in conjunction with -debug=1 to output debug and trace logging for all categories except the specified category."
        },
        {
            "option": "-debuglogfile=<file>",
            "description": "Specify location of debug log file. Relative paths will be prefixed by a net-specific datadir location. (-nodebuglogfile to disable; default: debug.log)"
        },
        {
            "option": "-disablewallet",
            "description": "Do not load the wallet and disable wallet RPC calls"
        },
        {
            "option": "-discover",
            "description": "Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)"
        },
        {
            "option": "-discardfee=<amt>",
            "description": "The fee rate (in BTC/kvB) that indicates your tolerance for discarding change by adding it to the fee (default: 0.0001)."
        },
        {
            "option": "-dns",
            "description": "Allow DNS lookups for -addnode, -seednode and -connect (default: 1)"
        },
        {
            "option": "-dnsseed",
            "description": "Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect used)"
        },
        {
            "option": "-dandelion",
            "description": "Enable dandelion mode (default: 1)"
        },
        {
            "option": "-daemon",
            "description": "Run in the background as a daemon and accept commands (default: 0)"
        },
        {
            "option": "-daemonwait",
            "description": "Wait for initialization to be finished before exiting. This implies -daemon (default: 0)"
        },
        {
            "option": "-externalip=<ip>",
            "description": "Specify your own public address"
        },
        {
            "option": "-fallbackfee=<amt>",
            "description": "A fee rate (in BTC/kvB) that will be used when fee estimation has insufficient data. 0 to entirely disable the fallbackfee feature. (default: 0.00)"
        },
        {
            "option": "-forcednsseed",
            "description": "Always query for peer addresses via DNS lookup (default: 0)"
        },
        {
            "option": "-help-debug",
            "description": "Print help message with debugging options and exit"
        },
        {
            "option": "-i2pacceptincoming",
            "description": "If set and -i2psam is also set then incoming I2P connections are accepted via the SAM proxy."
        },
        {
            "option": "-i2psam=<ip:port>",
            "description": "I2P SAM proxy to reach I2P peers and accept I2P connections (default: none)"
        },
        {
            "option": "-includeconf=<file>",
            "description": "Specify additional configuration file, relative to the -datadir path (only usable from configuration file, not command line)"
        },
        {
            "option": "-keypool=<n>",
            "description": "Set key pool size to <n> (default: 1000)."
        },
        {
            "option": "-loadblock=<file>",
            "description": "Imports blocks from external file on startup"
        },
        {
            "option": "-logips",
            "description": "Include IP addresses in debug output (default: 0)"
        },
        {
            "option": "-logsourcelocations",
            "description": "Prepend debug output with name of the originating source location (source file, line number and function name) (default: 0)"
        },
        {
            "option": "-logthreadnames",
            "description": "Prepend debug output with name of the originating thread (only available on platforms supporting thread_local) (default: 0)"
        },
        {
            "option": "-logtimestamps",
            "description": "Prepend debug output with timestamp (default: 1)"
        },
        {
            "option": "-listen",
            "description": "Accept connections from outside (default: 1 if no -proxy or -connect)"
        },
        {
            "option": "-listenonion",
            "description": "Automatically create Tor onion service (default: 1)"
        },
        {
            "option": "-maxapsfee=<n>",
            "description": "Spend up to this amount in additional (absolute) fees (in BTC) if it allows the use of partial spend avoidance (default: 0.00)"
        },
        {
            "option": "-maxconnections=<n>",
            "description": "Maintain at most <n> connections to peers (default: 125)."
        },
        {
            "option": "-maxmempool=<n>",
            "description": "Keep the transaction memory pool below <n> megabytes (default: 300)"
        },
        {
            "option": "-maxorphantx=<n>",
            "description": "Keep at most <n> unconnectable transactions in memory (default: 100)"
        },
        {
            "option": "-maxreceivebuffer=<n>",
            "description": "Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)"
        },
        {
            "option": "-maxsendbuffer=<n>",
            "description": "Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)"
        },
        {
            "option": "-maxtimeadjustment",
            "description": "Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by outbound peers forward or backward by this amount (default: 4200 seconds)."
        },
        {
            "option": "-maxuploadtarget=<n>",
            "description": "Tries to keep outbound traffic under the given target per 24h. Limit does not apply to peers with 'download' permission or blocks created within past week. 0 = no limit (default: 0M). Optional suffix units [k|K|m|M|g|G|t|T] (default: M)."
        },
        {
            "option": "-maxtxfee=<amt>",
            "description": "Maximum total fees (in BTC) to use in a single wallet transaction; setting this too low may abort large transactions (default: 0.10)"
        },
        {
            "option": "-mempoolexpiry=<n>",
            "description": "Do not keep transactions in the mempool longer than <n> hours (default: 336)"
        },
        {
            "option": "-mempoolfullrbf",
            "description": "Accept transaction replace-by-fee without requiring replaceability signaling (default: 0)"
        },
        {
            "option": "-minrelaytxfee=<amt>",
            "description": "Fees (in BTC/kvB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: 0.00001)"
        },
        {
            "option": "-mintxfee=<amt>",
            "description": "Fee rates (in BTC/kvB) smaller than this are considered zero fee for transaction creation (default: 0.00001)"
        },
        {
            "option": "-networkactive",
            "description": "Enable all P2P network activity (default: 1). Can be changed by the setnetworkactive RPC command"
        },
        {
            "option": "-onion=<ip:port>",
            "description": "Use separate SOCKS5 proxy to reach peers via Tor onion services, set -noonion to disable (default: -proxy)"
        },
        {
            "option": "-onlynet=<net>",
            "description": "Make automatic outbound connections only to network <net> (ipv4, ipv6, onion, i2p, cjdns). Inbound and manual connections are not affected by this option. It can be specified multiple times to allow multiple networks."
        },
        {
            "option": "-par=<n>",
            "description": "Set the number of script verification threads (-12 to 15, 0 = auto, <0 = leave that many cores free, default: 0)"
        },
        {
            "option": "-paytxfee=<amt>",
            "description": "Fee rate (in BTC/kvB) to add to transactions you send (default: 0.00)"
        },
        {
            "option": "-peerblockfilters",
            "description": "Serve compact block filters to peers per BIP 157 (default: 0)"
        },
        {
            "option": "-peerbloomfilters",
            "description": "Support filtering of blocks and transaction with bloom filters (default: 0)"
        },
        {
            "option": "-permitbaremultisig",
            "description": "Relay non-P2SH multisig (default: 1)"
        },
        {
            "option": "-persistmempool",
            "description": "Whether to save the mempool on shutdown and load on restart (default: 1)"
        },
        {
            "option": "-pid=<file>",
            "description": "Specify pid file. Relative paths will be prefixed by a net-specific datadir location. (default: bitcoind.pid)"
        },
        {
            "option": "-port=<port>",
            "description": "Listen for connections on <port>. Nodes not using the default ports are unlikely to get incoming connections. Not relevant for I2P."
        },
        {
            "option": "-printtoconsole",
            "description": "Send trace/debug info to console (default: 1 when no -daemon. To disable logging to file, set -nodebuglogfile)"
        },
        {
            "option": "-prune=<n>",
            "description": "Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks and enables automatic pruning of old blocks if a target size in MiB is provided."
        },
        {
            "option": "-proxyrandomize",
            "description": "Randomize credentials for every proxy connection. This enables Tor stream isolation (default: 1)"
        },
        {
            "option": "-proxy=<ip:port>",
            "description": "Connect through SOCKS5 proxy, set -noproxy to disable (default: disabled)"
        },
        {
            "option": "-reindex",
            "description": "Rebuild chain state and block index from the blk*.dat files on disk. This will also rebuild active optional indexes."
        },
        {
            "option": "-reindex-chainstate",
            "description": "Rebuild chain state from the currently indexed blocks. When in pruning mode or if blocks on disk might be corrupted, use full -reindex instead. Deactivate all optional indexes before running this."
        },
        {
            "option": "-rest",
            "description": "Accept public REST requests (default: 0)"
        },
        {
            "option": "-rpcallowip=<ip>",
            "description": "Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP, a network/netmask or a network/CIDR. This option can be specified multiple times"
        },
        {
            "option": "-rpcauth=<userpw>",
            "description": "Username and HMAC-SHA-256 hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. This option can be specified multiple times"
        },
        {
            "option": "-rpcbind=<addr>[:port]",
            "description": "Bind to given address to listen for JSON-RPC connections. Do not expose the RPC server to untrusted networks such as the public internet! This option is ignored unless -rpcallowip is also passed."
        },
        {
            "option": "-rpccookiefile=<loc>",
            "description": "Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)"
        },
        {
            "option": "-rpcpassword=<pw>",
            "description": "Password for JSON-RPC connections"
        },
        {
            "option": "-rpcport=<port>",
            "description": "Listen for JSON-RPC connections on <port> (default: 8332, testnet: 18332, signet: 38332, regtest: 18443)"
        },
        {
            "option": "-rpcserialversion",
            "description": "Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: 1)"
        },
        {
            "option": "-rpcthreads=<n>",
            "description": "Set the number of threads to service RPC calls (default: 4)"
        },
        {
            "option": "-rpcuser=<user>",
            "description": "Username for JSON-RPC connections"
        },
        {
            "option": "-rpcwhitelist=<whitelist>",
            "description": "Set a whitelist to filter incoming RPC calls for a specific user. The field <whitelist> comes in the format: <USERNAME>:<rpc 1>,<rpc 2>,...,<rpc n>."
        },
        {
            "option": "-rpcwhitelistdefault",
            "description": "Sets default behavior for rpc whitelisting. Unless rpcwhitelistdefault is set to 0, if any -rpcwhitelist is set, the rpc server acts as if all rpc users are subject to empty-unless-otherwise-specified whitelists."
        },
        {
            "option": "-sandbox=<mode>",
            "description": "Use the experimental syscall sandbox in the specified mode (-sandbox=log-and-abort or -sandbox=abort)."
        },
        {
            "option": "-seednode=<ip>",
            "description": "Connect to a node to retrieve peer addresses, and disconnect. This option can be specified multiple times to connect to multiple nodes."
        },
        {
            "option": "-server",
            "description": "Accept command line and JSON-RPC commands"
        },
        {
            "option": "-settings=<file>",
            "description": "Specify path to dynamic settings data file. Can be disabled with -nosettings. File is written at runtime and not meant to be edited by users (use bitcoin.conf instead for custom settings)."
        },
        {
            "option": "-shrinkdebugfile",
            "description": "Shrink debug.log file on client startup (default: 1 when no -debug)"
        },
        {
            "option": "-signer=<cmd>",
            "description": "External signing tool, see doc/external-signer.md"
        },
        {
            "option": "-signet",
            "description": "Use the signet chain. Equivalent to -chain=signet. Note that the network is defined by the -signetchallenge parameter"
        },
        {
            "option": "-signetchallenge",
            "description": "Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)"
        },
        {
            "option": "-signetseednode",
            "description": "Specify a seed node for the signet network, in the hostname[:port] format."
        },
        {
            "option": "-spendzeroconfchange",
            "description": "Spend unconfirmed change when sending transactions (default: 1)"
        },
        {
            "option": "-startupnotify=<cmd>",
            "description": "Execute command on startup."
        },
        {
            "option": "-sysperms",
            "description": "Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)"
        },
        {
            "option": "-testnet",
            "description": "Use the test chain. Equivalent to -chain=test."
        },
        {
            "option": "-timeout=<n>",
            "description": "Specify socket connection timeout in milliseconds. If an initial attempt to connect is unsuccessful after this amount of time, drop it (minimum: 1, default: 5000)"
        },
        {
            "option": "-torcontrol=<ip>:<port>",
            "description": "Tor control port to use if onion listening enabled (default: 127.0.0.1:9051)"
        },
        {
            "option": "-torpassword=<pass>",
            "description": "Tor control port password (default: empty)"
        },
        {
            "option": "-txconfirmtarget=<n>",
            "description": "If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: 6)"
        },
        {
            "option": "-txindex",
            "description": "Maintain a full transaction index, used by the getrawtransaction rpc call (default: 0)"
        },
        {
            "option": "-uacomment=<cmt>",
            "description": "Append comment to the user agent string"
        },
        {
            "option": "-version",
            "description": "Print version and exit"
        },
        {
            "option": "-wallet=<path>",
            "description": "Specify wallet path to load at startup. Can be used multiple times to load multiple wallets."
        },
        {
            "option": "-walletbroadcast",
            "description": "Make the wallet broadcast transactions (default: 1)"
        },
        {
            "option": "-walletdir=<dir>",
            "description": "Specify directory to hold wallets (default: <datadir>/wallets if it exists, otherwise <datadir>)"
        },
        {
            "option": "-walletnotify=<cmd>",
            "description": "Execute command when a wallet transaction changes."
        },
        {
            "option": "-walletrbf",
            "description": "Send transactions with full-RBF opt-in enabled (RPC only, default: 1)"
        },
        {
            "option": "-whitebind=<[permissions@]addr>",
            "description": "Bind to the given address and add permission flags to the peers connecting to it. Use [host]:port notation for IPv6. Specify multiple permissions separated by commas."
        },
        {
            "option": "-whitelist=<[permissions@]IP address or network>",
            "description": "Add permission flags to the peers connecting from the given IP address or CIDR-notated network. Uses the same permissions as -whitebind. Can be specified multiple times."
        },
        {
            "option": "-whitelistforcerelay",
            "description": "Add 'forcerelay' permission to whitelisted inbound peers with default permissions. This will relay transactions even if the transactions were already in the mempool. (default: 0)"
        },
        {
            "option": "-whitelistrelay",
            "description": "Add 'relay' permission to whitelisted inbound peers with default permissions. This will accept relayed transactions even when not relaying transactions (default: 1)"
        },
        {
            "option": "-zmqpubhashblock=<address>",
            "description": "Enable publish hash block in <address>"
        },
        {
            "option": "-zmqpubhashblockhwm=<n>",
            "description": "Set publish hash block outbound message high water mark (default: 1000)"
        },
        {
            "option": "-zmqpubhashtx=<address>",
            "description": "Enable publish hash transaction in <address>"
        },
        {
            "option": "-zmqpubhashtxhwm=<n>",
            "description": "Set publish hash transaction outbound message high water mark (default: 1000)"
        },
        {
            "option": "-zmqpubrawblock=<address>",
            "description": "Enable publish raw block in <address>"
        },
        {
            "option": "-zmqpubrawblockhwm=<n>",
            "description": "Set publish raw block outbound message high water mark (default: 1000)"
        },
        {
            "option": "-zmqpubrawtx=<address>",
            "description": "Enable publish raw transaction in <address>"
        },
        {
            "option": "-zmqpubrawtxhwm=<n>",
            "description": "Set publish raw transaction outbound message high water mark (default: 1000)"
        },
        {
            "option": "-zmqpubsequence=<address>",
            "description": "Enable publish hash block and tx sequence in <address>"
        },
        {
            "option": "-zmqpubsequencehwm=<n>",
            "description": "Set publish hash sequence message high water mark (default: 1000)"
        }
    ],
    "subcommands": [],
    "version": "v24.0.1"
}
