{
  "name": "docker",
  "description": "A self-sufficient runtime for containers",
  "usage": "docker [OPTIONS] COMMAND",
  "subcommands": [
      {
          "name": "docker attach",
          "description": "Attach local standard input, output, and error streams to a running container",
          "usage": "docker attach [OPTIONS] CONTAINER",
          "options": [
              {
                  "option": "--detach-keys",
                  "description": "Override the key sequence for detaching a container",
                  "value": "string"
              },
              {
                  "option": "--no-stdin",
                  "description": "Do not attach STDIN"
              },
              {
                  "option": "--sig-proxy",
                  "description": "Proxy all received signals to the process",
                  "default": "true"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker build",
          "description": "Start a build",
          "usage": "docker buildx build [OPTIONS] PATH | URL | -",
          "options": [
              {
                  "option": "--add-host",
                  "description": "Add a custom host-to-IP mapping (format: \"host:ip\")",
                  "value": "strings"
              },
              {
                  "option": "--allow",
                  "description": "Allow extra privileged entitlement (e.g., \"network.host\", \"security.insecure\")",
                  "value": "strings"
              },
              {
                  "option": "--annotation",
                  "description": "Add annotation to the image",
                  "value": "stringArray"
              },
              {
                  "option": "--attest",
                  "description": "Attestation parameters (format: \"type=sbom,generator=image\")",
                  "value": "stringArray"
              },
              {
                  "option": "--build-arg",
                  "description": "Set build-time variables",
                  "value": "stringArray"
              },
              {
                  "option": "--build-context",
                  "description": "Additional build contexts (e.g., name=path)",
                  "value": "stringArray"
              },
              {
                  "option": "--builder",
                  "description": "Override the configured builder instance",
                  "value": "string",
                  "default": "\"default\""
              },
              {
                  "option": "--cache-from",
                  "description": "External cache sources (e.g., \"user/app:cache\", \"type=local,src=path/to/dir\")",
                  "value": "stringArray"
              },
              {
                  "option": "--cache-to",
                  "description": "Cache export destinations (e.g., \"user/app:cache\", \"type=local,dest=path/to/dir\")",
                  "value": "stringArray"
              },
              {
                  "option": "--call",
                  "description": "Set method for evaluating build (\"check\", \"outline\", \"targets\")",
                  "value": "string",
                  "default": "\"build\""
              },
              {
                  "option": "--cgroup-parent",
                  "description": "Set the parent cgroup for the \"RUN\" instructions during build",
                  "value": "string"
              },
              {
                  "option": "--check",
                  "description": "Shorthand for \"--call=check\""
              },
              {
                  "option": "--debug",
                  "shortcut": "-D",
                  "description": "Enable debug logging"
              },
              {
                  "option": "--file",
                  "shortcut": "-f",
                  "description": "Name of the Dockerfile",
                  "value": "string",
                  "default": "\"PATH/Dockerfile\""
              },
              {
                  "option": "--iidfile",
                  "description": "Write the image ID to a file",
                  "value": "string"
              },
              {
                  "option": "--label",
                  "description": "Set metadata for an image",
                  "value": "stringArray"
              },
              {
                  "option": "--load",
                  "description": "Shorthand for \"--output=type=docker\""
              },
              {
                  "option": "--metadata-file",
                  "description": "Write build result metadata to a file",
                  "value": "string"
              },
              {
                  "option": "--network",
                  "description": "Set the networking mode for the \"RUN\" instructions during build",
                  "value": "string",
                  "default": "\"default\""
              },
              {
                  "option": "--no-cache",
                  "description": "Do not use cache when building the image"
              },
              {
                  "option": "--no-cache-filter",
                  "description": "Do not cache specified stages",
                  "value": "stringArray"
              },
              {
                  "option": "--output",
                  "shortcut": "-o",
                  "description": "Output destination (format: \"type=local,dest=path\")",
                  "value": "stringArray"
              },
              {
                  "option": "--platform",
                  "description": "Set target platform for build",
                  "value": "stringArray"
              },
              {
                  "option": "--progress",
                  "description": "Set type of progress output (\"auto\", \"plain\", \"tty\", \"rawjson\"). Use plain to show container output",
                  "value": "string",
                  "default": "\"auto\""
              },
              {
                  "option": "--provenance",
                  "description": "Shorthand for \"--attest=type=provenance\""
              },
              {
                  "option": "--pull",
                  "description": "Always attempt to pull all referenced images"
              },
              {
                  "option": "--push",
                  "description": "Shorthand for \"--output=type=registry\""
              },
              {
                  "option": "--quiet",
                  "shortcut": "-q",
                  "description": "Suppress the build output and print image ID on success"
              },
              {
                  "option": "--sbom",
                  "description": "Shorthand for \"--attest=type=sbom\""
              },
              {
                  "option": "--secret",
                  "description": "Secret to expose to the build (format: \"id=mysecret[,src=/local/secret]\")",
                  "value": "stringArray"
              },
              {
                  "option": "--shm-size",
                  "description": "Shared memory size for build containers",
                  "value": "bytes"
              },
              {
                  "option": "--ssh",
                  "description": "SSH agent socket or keys to expose to the build (format: \"default|<id>[=<socket>|<key>[,<key>]]\")",
                  "value": "stringArray"
              },
              {
                  "option": "--tag",
                  "shortcut": "-t",
                  "description": "Name and optionally a tag (format: \"name:tag\")",
                  "value": "stringArray"
              },
              {
                  "option": "--target",
                  "description": "Set the target build stage to build",
                  "value": "string"
              },
              {
                  "option": "--ulimit",
                  "description": "Ulimit options",
                  "value": "ulimit",
                  "default": "[]"
              }
          ],
          "subcommands": []
      },
      {
          "description": "Extended build capabilities with BuildKit",
          "name": "docker builder",
          "usage": "docker buildx [OPTIONS] COMMAND",
          "options": [
              {
                  "default": "default",
                  "description": "Override the configured builder instance",
                  "option": "--builder",
                  "value": "string"
              },
              {
                  "description": "Enable debug logging",
                  "option": "--debug",
                  "shortcut": "-D"
              }
          ],
          "subcommands": [
              {
                  "name": "docker builder bake",
                  "description": "Build from a file",
                  "usage": "docker buildx bake [OPTIONS] [TARGET...]",
                  "options": [
                      {
                          "option": "--allow",
                          "description": "Allow build to access specified resources",
                          "value": "stringArray"
                      },
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--call",
                          "description": "Set method for evaluating build (\"check\", \"outline\", \"targets\")",
                          "value": "string",
                          "default": "build"
                      },
                      {
                          "option": "--check",
                          "description": "Shorthand for \"--call=check\""
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      },
                      {
                          "option": "--file",
                          "shortcut": "-f",
                          "description": "Build definition file",
                          "value": "stringArray"
                      },
                      {
                          "option": "--load",
                          "description": "Shorthand for \"--set=*.output=type=docker\""
                      },
                      {
                          "option": "--metadata-file",
                          "description": "Write build result metadata to a file",
                          "value": "string"
                      },
                      {
                          "option": "--no-cache",
                          "description": "Do not use cache when building the image"
                      },
                      {
                          "option": "--print",
                          "description": "Print the options without building"
                      },
                      {
                          "option": "--progress",
                          "description": "Set type of progress output (\"auto\", \"plain\", \"tty\", \"rawjson\"). Use plain to show container output",
                          "value": "string",
                          "default": "auto"
                      },
                      {
                          "option": "--provenance",
                          "description": "Shorthand for \"--set=*.attest=type=provenance\""
                      },
                      {
                          "option": "--pull",
                          "description": "Always attempt to pull all referenced images"
                      },
                      {
                          "option": "--push",
                          "description": "Shorthand for \"--set=*.output=type=registry\""
                      },
                      {
                          "option": "--sbom",
                          "description": "Shorthand for \"--set=*.attest=type=sbom\""
                      },
                      {
                          "option": "--set",
                          "description": "Override target value (e.g., \"targetpattern.key=value\")",
                          "value": "stringArray"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder build",
                  "description": "Start a build",
                  "usage": "docker buildx build [OPTIONS] PATH | URL | -",
                  "options": [
                      {
                          "option": "--add-host",
                          "description": "Add a custom host-to-IP mapping (format: \"host:ip\")",
                          "value": "strings"
                      },
                      {
                          "option": "--allow",
                          "description": "Allow extra privileged entitlement (e.g., \"network.host\", \"security.insecure\")",
                          "value": "strings"
                      },
                      {
                          "option": "--annotation",
                          "description": "Add annotation to the image",
                          "value": "stringArray"
                      },
                      {
                          "option": "--attest",
                          "description": "Attestation parameters (format: \"type=sbom,generator=image\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--build-arg",
                          "description": "Set build-time variables",
                          "value": "stringArray"
                      },
                      {
                          "option": "--build-context",
                          "description": "Additional build contexts (e.g., name=path)",
                          "value": "stringArray"
                      },
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--cache-from",
                          "description": "External cache sources (e.g., \"user/app:cache\", \"type=local,src=path/to/dir\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--cache-to",
                          "description": "Cache export destinations (e.g., \"user/app:cache\", \"type=local,dest=path/to/dir\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--call",
                          "description": "Set method for evaluating build (\"check\", \"outline\", \"targets\")",
                          "value": "string",
                          "default": "build"
                      },
                      {
                          "option": "--cgroup-parent",
                          "description": "Set the parent cgroup for the \"RUN\" instructions during build",
                          "value": "string"
                      },
                      {
                          "option": "--check",
                          "description": "Shorthand for \"--call=check\""
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      },
                      {
                          "option": "--file",
                          "shortcut": "-f",
                          "description": "Name of the Dockerfile",
                          "value": "string",
                          "default": "PATH/Dockerfile"
                      },
                      {
                          "option": "--iidfile",
                          "description": "Write the image ID to a file",
                          "value": "string"
                      },
                      {
                          "option": "--label",
                          "description": "Set metadata for an image",
                          "value": "stringArray"
                      },
                      {
                          "option": "--load",
                          "description": "Shorthand for \"--output=type=docker\""
                      },
                      {
                          "option": "--metadata-file",
                          "description": "Write build result metadata to a file",
                          "value": "string"
                      },
                      {
                          "option": "--network",
                          "description": "Set the networking mode for the \"RUN\" instructions during build",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--no-cache",
                          "description": "Do not use cache when building the image"
                      },
                      {
                          "option": "--no-cache-filter",
                          "description": "Do not cache specified stages",
                          "value": "stringArray"
                      },
                      {
                          "option": "--output",
                          "shortcut": "-o",
                          "description": "Output destination (format: \"type=local,dest=path\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--platform",
                          "description": "Set target platform for build",
                          "value": "stringArray"
                      },
                      {
                          "option": "--progress",
                          "description": "Set type of progress output (\"auto\", \"plain\", \"tty\", \"rawjson\"). Use plain to show container output",
                          "value": "string",
                          "default": "auto"
                      },
                      {
                          "option": "--provenance",
                          "description": "Shorthand for \"--attest=type=provenance\"",
                          "value": "string"
                      },
                      {
                          "option": "--pull",
                          "description": "Always attempt to pull all referenced images"
                      },
                      {
                          "option": "--push",
                          "description": "Shorthand for \"--output=type=registry\""
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Suppress the build output and print image ID on success"
                      },
                      {
                          "option": "--sbom",
                          "description": "Shorthand for \"--attest=type=sbom\"",
                          "value": "string"
                      },
                      {
                          "option": "--secret",
                          "description": "Secret to expose to the build (format: \"id=mysecret[,src=/local/secret]\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--shm-size",
                          "description": "Shared memory size for build containers",
                          "value": "bytes"
                      },
                      {
                          "option": "--ssh",
                          "description": "SSH agent socket or keys to expose to the build (format: \"default|<id>[=<socket>|<key>[,<key>]]\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--tag",
                          "shortcut": "-t",
                          "description": "Name and optionally a tag (format: \"name:tag\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--target",
                          "description": "Set the target build stage to build",
                          "value": "string"
                      },
                      {
                          "option": "--ulimit",
                          "description": "Ulimit options",
                          "value": "ulimit",
                          "default": "[]"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder create",
                  "description": "Create a new builder instance",
                  "usage": "docker buildx create [OPTIONS] [CONTEXT|ENDPOINT]",
                  "options": [
                      {
                          "option": "--append",
                          "description": "Append a node to builder instead of changing it"
                      },
                      {
                          "option": "--bootstrap",
                          "description": "Boot builder after creation"
                      },
                      {
                          "option": "--buildkitd-config",
                          "description": "BuildKit daemon config file",
                          "value": "string"
                      },
                      {
                          "option": "--buildkitd-flags",
                          "description": "BuildKit daemon flags",
                          "value": "string"
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      },
                      {
                          "option": "--driver",
                          "description": "Driver to use (available: \"docker-container\", \"kubernetes\", \"remote\")",
                          "value": "string"
                      },
                      {
                          "option": "--driver-opt",
                          "description": "Options for the driver",
                          "value": "stringArray"
                      },
                      {
                          "option": "--leave",
                          "description": "Remove a node from builder instead of changing it"
                      },
                      {
                          "option": "--name",
                          "description": "Builder instance name",
                          "value": "string"
                      },
                      {
                          "option": "--node",
                          "description": "Create/modify node with given name",
                          "value": "string"
                      },
                      {
                          "option": "--platform",
                          "description": "Fixed platforms for current node",
                          "value": "stringArray"
                      },
                      {
                          "option": "--use",
                          "description": "Set the current builder instance"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder dial-stdio",
                  "description": "Proxy current stdio streams to builder instance",
                  "usage": "docker buildx dial-stdio",
                  "options": [
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      },
                      {
                          "option": "--platform",
                          "description": "Target platform: this is used for node selection",
                          "value": "string"
                      },
                      {
                          "option": "--progress",
                          "description": "Set type of progress output (\"auto\", \"plain\", \"tty\", \"rawjson\"). Use plain to show container output",
                          "value": "string",
                          "default": "quiet"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder du",
                  "description": "Disk usage",
                  "usage": "docker buildx du",
                  "options": [
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      },
                      {
                          "option": "--filter",
                          "description": "Provide filter values",
                          "value": "filter"
                      },
                      {
                          "option": "--verbose",
                          "description": "Provide a more verbose output"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder imagetools",
                  "description": "Commands to work on images in registry",
                  "usage": "docker buildx imagetools [OPTIONS] COMMAND",
                  "options": [
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      }
                  ],
                  "subcommands": [
                      {
                          "name": "docker builder imagetools create",
                          "description": "Create a new image based on source images",
                          "usage": "docker buildx imagetools create [OPTIONS] [SOURCE] [SOURCE...]",
                          "options": [
                              {
                                  "option": "--annotation",
                                  "description": "Add annotation to the image",
                                  "value": "stringArray"
                              },
                              {
                                  "option": "--append",
                                  "description": "Append to existing manifest"
                              },
                              {
                                  "option": "--builder",
                                  "description": "Override the configured builder instance",
                                  "value": "string",
                                  "default": "default"
                              },
                              {
                                  "option": "--debug",
                                  "shortcut": "-D",
                                  "description": "Enable debug logging"
                              },
                              {
                                  "option": "--dry-run",
                                  "description": "Show final image instead of pushing"
                              },
                              {
                                  "option": "--file",
                                  "shortcut": "-f",
                                  "description": "Read source descriptor from file",
                                  "value": "stringArray"
                              },
                              {
                                  "option": "--prefer-index",
                                  "description": "When only a single source is specified, prefer outputting an image index or manifest list instead of performing a carbon copy",
                                  "default": "true"
                              },
                              {
                                  "option": "--progress",
                                  "description": "Set type of progress output (\"auto\", \"plain\", \"tty\", \"rawjson\"). Use plain to show container output",
                                  "value": "string",
                                  "default": "auto"
                              },
                              {
                                  "option": "--tag",
                                  "shortcut": "-t",
                                  "description": "Set reference for new image",
                                  "value": "stringArray"
                              }
                          ],
                          "subcommands": []
                      },
                      {
                          "description": "Show details of an image in the registry",
                          "name": "docker builder imagetools inspect",
                          "options": [
                              {
                                  "description": "Override the configured builder instance",
                                  "option": "--builder",
                                  "value": "string",
                                  "default": "default"
                              },
                              {
                                  "description": "Enable debug logging",
                                  "option": "--debug",
                                  "shortcut": "-D"
                              },
                              {
                                  "description": "Format the output using the given Go template",
                                  "option": "--format",
                                  "value": "string"
                              },
                              {
                                  "description": "Show original, unformatted JSON manifest",
                                  "option": "--raw"
                              }
                          ],
                          "usage": "docker buildx imagetools inspect [OPTIONS] NAME",
                          "subcommands": []
                      }
                  ]
              },
              {
                  "name": "docker builder inspect",
                  "description": "Inspect current builder instance",
                  "usage": "docker buildx inspect [NAME]",
                  "options": [
                      {
                          "option": "--bootstrap",
                          "description": "Ensure builder has booted before inspecting"
                      },
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder ls",
                  "description": "List builder instances",
                  "usage": "docker buildx ls",
                  "options": [
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      },
                      {
                          "option": "--format",
                          "description": "Format the output",
                          "value": "string",
                          "default": "table"
                      },
                      {
                          "option": "--no-trunc",
                          "description": "Don't truncate output"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder prune",
                  "description": "Remove build cache",
                  "usage": "docker buildx prune",
                  "options": [
                      {
                          "option": "--all",
                          "shortcut": "-a",
                          "description": "Include internal/frontend images"
                      },
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      },
                      {
                          "option": "--filter",
                          "description": "Provide filter values",
                          "value": "filter"
                      },
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Do not prompt for confirmation"
                      },
                      {
                          "option": "--max-used-space",
                          "description": "Maximum amount of disk space allowed to keep for cache",
                          "value": "bytes"
                      },
                      {
                          "option": "--min-free-space",
                          "description": "Target amount of free disk space after pruning",
                          "value": "bytes"
                      },
                      {
                          "option": "--reserved-space",
                          "description": "Amount of disk space always allowed to keep for cache",
                          "value": "bytes"
                      },
                      {
                          "option": "--verbose",
                          "description": "Provide a more verbose output"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder rm",
                  "description": "Remove one or more builder instances",
                  "usage": "docker buildx rm [OPTIONS] [NAME] [NAME...]",
                  "options": [
                      {
                          "option": "--all-inactive",
                          "description": "Remove all inactive builders"
                      },
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      },
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Do not prompt for confirmation"
                      },
                      {
                          "option": "--keep-daemon",
                          "description": "Keep the BuildKit daemon running"
                      },
                      {
                          "option": "--keep-state",
                          "description": "Keep BuildKit state"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder stop",
                  "description": "Stop builder instance",
                  "usage": "docker buildx stop [NAME]",
                  "options": [
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder use",
                  "description": "Set the current builder instance",
                  "usage": "docker buildx use [OPTIONS] NAME",
                  "options": [
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--default",
                          "description": "Set builder as default for current context"
                      },
                      {
                          "option": "--global",
                          "description": "Builder persists context changes"
                      },
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker builder version",
                  "description": "Show buildx version information",
                  "usage": "docker buildx version",
                  "options": [
                      {
                          "option": "--debug",
                          "shortcut": "-D",
                          "description": "Enable debug logging"
                      }
                  ],
                  "subcommands": []
              }
          ]
      },
      {
          "name": "docker commit",
          "description": "Create a new image from a container's changes",
          "usage": "docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]",
          "options": [
              {
                  "option": "--author",
                  "shortcut": "-a",
                  "description": "Author (e.g., \"John Hannibal Smith <hannibal@a-team.com>\")",
                  "value": "string"
              },
              {
                  "option": "--change",
                  "shortcut": "-c",
                  "description": "Apply Dockerfile instruction to the created image",
                  "value": "list"
              },
              {
                  "option": "--message",
                  "shortcut": "-m",
                  "description": "Commit message",
                  "value": "string"
              },
              {
                  "option": "--pause",
                  "shortcut": "-p",
                  "description": "Pause container during commit",
                  "default": "true"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker compose",
          "description": "Define and run multi-container applications with Docker",
          "usage": "Usage:  docker compose [OPTIONS] COMMAND",
          "options": [
              {
                  "option": "--all-resources",
                  "description": "Include all resources, even those not used by services"
              },
              {
                  "option": "--ansi",
                  "description": "Control when to print ANSI control characters",
                  "value": "<string>",
                  "default": "auto"
              },
              {
                  "option": "--compatibility",
                  "description": "Run compose in backward compatibility mode"
              },
              {
                  "option": "--dry-run",
                  "description": "Execute command in dry run mode"
              },
              {
                  "option": "--env-file",
                  "description": "Specify an alternate environment file",
                  "value": "<stringArray>"
              },
              {
                  "option": "-f",
                  "shortcut": "--file",
                  "description": "Compose configuration files",
                  "value": "<stringArray>"
              },
              {
                  "option": "--parallel",
                  "description": "Control max parallelism, -1 for unlimited",
                  "value": "<int>",
                  "default": "-1"
              },
              {
                  "option": "--profile",
                  "description": "Specify a profile to enable",
                  "value": "<stringArray>"
              },
              {
                  "option": "--progress",
                  "description": "Set type of progress output (auto, tty, plain, json, quiet)",
                  "value": "<string>",
                  "default": "auto"
              },
              {
                  "option": "--project-directory",
                  "description": "Specify an alternate working directory",
                  "value": "<string>",
                  "default": "the path of the, first specified, Compose file"
              },
              {
                  "option": "-p",
                  "shortcut": "--project-name",
                  "description": "Project name",
                  "value": "<string>"
              }
          ],
          "subcommands": [
              {
                  "name": "docker compose attach",
                  "description": "Attach local standard input, output, and error streams to a service's running container",
                  "usage": "docker compose attach [OPTIONS] SERVICE",
                  "options": [
                      {
                          "option": "--detach-keys",
                          "description": "Override the key sequence for detaching from a container.",
                          "value": "string"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--index",
                          "description": "index of the container if service has multiple replicas.",
                          "value": "int"
                      },
                      {
                          "option": "--no-stdin",
                          "description": "Do not attach STDIN"
                      },
                      {
                          "option": "--sig-proxy",
                          "description": "Proxy all received signals to the process",
                          "default": "true"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose build",
                  "description": "Build or rebuild services",
                  "usage": "docker compose build [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--build-arg",
                          "description": "Set build-time variables for services",
                          "value": "stringArray"
                      },
                      {
                          "option": "--builder",
                          "description": "Set builder to use",
                          "value": "string"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--no-cache",
                          "description": "Do not use cache when building the image"
                      },
                      {
                          "option": "--pull",
                          "description": "Always attempt to pull a newer version of the image"
                      },
                      {
                          "option": "--push",
                          "description": "Push service images"
                      },
                      {
                          "option": "--ssh",
                          "description": "Set SSH authentications used when building service images. (use 'default' for using your default SSH Agent)",
                          "value": "string"
                      },
                      {
                          "option": "--with-dependencies",
                          "description": "Also build dependencies (transitively)"
                      },
                      {
                          "option": "--memory",
                          "shortcut": "-m",
                          "description": "Set memory limit for the build container. Not supported by BuildKit.",
                          "value": "bytes"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Don't print anything to STDOUT"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose commit",
                  "description": "Create a new image from a service container's changes",
                  "usage": "docker compose commit [OPTIONS] SERVICE [REPOSITORY[:TAG]]",
                  "options": [
                      {
                          "option": "--author",
                          "shortcut": "-a",
                          "description": "Author (e.g., \"John Hannibal Smith <hannibal@a-team.com>\")",
                          "value": "string"
                      },
                      {
                          "option": "--change",
                          "shortcut": "-c",
                          "description": "Apply Dockerfile instruction to the created image",
                          "value": "list"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--index",
                          "description": "index of the container if service has multiple replicas.",
                          "value": "int"
                      },
                      {
                          "option": "--message",
                          "shortcut": "-m",
                          "description": "Commit message",
                          "value": "string"
                      },
                      {
                          "option": "--pause",
                          "shortcut": "-p",
                          "description": "Pause container during commit",
                          "default": "true"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose config",
                  "description": "Parse, resolve and render compose file in canonical format",
                  "usage": "docker compose config [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--environment",
                          "description": "Print environment used for interpolation."
                      },
                      {
                          "option": "--format",
                          "description": "Format the output. Values: [yaml | json]",
                          "value": "string",
                          "default": "yaml"
                      },
                      {
                          "option": "--hash",
                          "description": "Print the service config hash, one per line.",
                          "value": "string"
                      },
                      {
                          "option": "--images",
                          "description": "Print the image names, one per line."
                      },
                      {
                          "option": "--no-consistency",
                          "description": "Don't check model consistency - warning: may produce invalid Compose output"
                      },
                      {
                          "option": "--no-interpolate",
                          "description": "Don't interpolate environment variables"
                      },
                      {
                          "option": "--no-normalize",
                          "description": "Don't normalize compose model"
                      },
                      {
                          "option": "--no-path-resolution",
                          "description": "Don't resolve file paths"
                      },
                      {
                          "option": "--output",
                          "shortcut": "-o",
                          "description": "Save to file",
                          "value": "string",
                          "default": "stdout"
                      },
                      {
                          "option": "--profiles",
                          "description": "Print the profile names, one per line."
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Only validate the configuration, don't print anything"
                      },
                      {
                          "option": "--resolve-image-digests",
                          "description": "Pin image tags to digests"
                      },
                      {
                          "option": "--services",
                          "description": "Print the service names, one per line."
                      },
                      {
                          "option": "--variables",
                          "description": "Print model variables and default values."
                      },
                      {
                          "option": "--volumes",
                          "description": "Print the volume names, one per line."
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose cp",
                  "description": "Copy files/folders between a service container and the local filesystem",
                  "usage": "docker compose cp [OPTIONS] SERVICE:SRC_PATH DEST_PATH|-\n\tdocker compose cp [OPTIONS] SRC_PATH|- SERVICE:DEST_PATH",
                  "options": [
                      {
                          "option": "--all",
                          "description": "Include containers created by the run command"
                      },
                      {
                          "option": "--archive",
                          "shortcut": "-a",
                          "description": "Archive mode (copy all uid/gid information)"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--follow-link",
                          "shortcut": "-L",
                          "description": "Always follow symbol link in SRC_PATH"
                      },
                      {
                          "option": "--index",
                          "value": "int",
                          "description": "Index of the container if service has multiple replicas"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose create",
                  "description": "Creates containers for a service",
                  "usage": "docker compose create [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--build",
                          "description": "Build images before starting containers"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--force-recreate",
                          "description": "Recreate containers even if their configuration and image haven't changed"
                      },
                      {
                          "option": "--no-build",
                          "description": "Don't build an image, even if it's policy"
                      },
                      {
                          "option": "--no-recreate",
                          "description": "If containers already exist, don't recreate them. Incompatible with --force-recreate."
                      },
                      {
                          "option": "--pull",
                          "description": "Pull image before running",
                          "value": "string",
                          "default": "\"policy\""
                      },
                      {
                          "option": "--quiet-pull",
                          "description": "Pull without printing progress information"
                      },
                      {
                          "option": "--remove-orphans",
                          "description": "Remove containers for services not defined in the Compose file"
                      },
                      {
                          "option": "--scale",
                          "description": "Scale SERVICE to NUM instances. Overrides the scale setting in the Compose file if present.",
                          "value": "scale"
                      },
                      {
                          "option": "--y",
                          "shortcut": "-y",
                          "description": "Assume \"yes\" as answer to all prompts and run non-interactively"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose down",
                  "description": "Stop and remove containers, networks",
                  "usage": "docker compose down [OPTIONS] [SERVICES]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--remove-orphans",
                          "description": "Remove containers for services not defined in the Compose file"
                      },
                      {
                          "option": "--rmi",
                          "description": "Remove images used by services. \"local\" remove only images that don't have a custom tag (\"local\"|\"all\")",
                          "value": "string"
                      },
                      {
                          "option": "--timeout",
                          "shortcut": "-t",
                          "description": "Specify a shutdown timeout in seconds",
                          "value": "int"
                      },
                      {
                          "option": "--volumes",
                          "shortcut": "-v",
                          "description": "Remove named volumes declared in the \"volumes\" section of the Compose file and anonymous volumes attached to containers"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose events",
                  "description": "Receive real time events from containers",
                  "usage": "docker compose events [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--json",
                          "description": "Output events as a stream of json objects"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose exec",
                  "description": "Execute a command in a running container",
                  "usage": "docker compose exec [OPTIONS] SERVICE COMMAND [ARGS...]",
                  "options": [
                      {
                          "option": "--detach",
                          "shortcut": "-d",
                          "description": "Detached mode: Run command in the background"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--env",
                          "shortcut": "-e",
                          "description": "Set environment variables",
                          "value": "stringArray"
                      },
                      {
                          "option": "--index",
                          "description": "Index of the container if service has multiple replicas",
                          "value": "int"
                      },
                      {
                          "option": "--no-TTY",
                          "shortcut": "-T",
                          "description": "Disable pseudo-TTY allocation. By default docker compose exec allocates a TTY.",
                          "default": "true",
                          "tags": [
                              "docker",
                              "compose",
                              "exec"
                          ]
                      },
                      {
                          "option": "--privileged",
                          "description": "Give extended privileges to the process"
                      },
                      {
                          "option": "--user",
                          "shortcut": "-u",
                          "description": "Run the command as this user",
                          "value": "string"
                      },
                      {
                          "option": "--workdir",
                          "shortcut": "-w",
                          "description": "Path to workdir directory for this command",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose export",
                  "description": "Export a service container's filesystem as a tar archive",
                  "usage": "docker compose export [OPTIONS] SERVICE",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--index",
                          "description": "index of the container if service has multiple replicas.",
                          "value": "int"
                      },
                      {
                          "option": "--output",
                          "shortcut": "-o",
                          "description": "Write to a file, instead of STDOUT",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose images",
                  "description": "List images used by the created containers",
                  "usage": "docker compose images [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--format",
                          "description": "Format the output.",
                          "value": "string",
                          "default": "table",
                          "tags": [
                              "table",
                              "json"
                          ]
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Only display IDs"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose kill",
                  "description": "Force stop service containers",
                  "usage": "docker compose kill [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--remove-orphans",
                          "description": "Remove containers for services not defined in the Compose file"
                      },
                      {
                          "option": "--signal",
                          "shortcut": "-s",
                          "description": "SIGNAL to send to the container",
                          "value": "string",
                          "default": "SIGKILL"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose logs",
                  "description": "View output from containers",
                  "usage": "docker compose logs [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--follow",
                          "shortcut": "-f",
                          "description": "Follow log output"
                      },
                      {
                          "option": "--index",
                          "description": "index of the container if service has multiple replicas",
                          "value": "int"
                      },
                      {
                          "option": "--no-color",
                          "description": "Produce monochrome output"
                      },
                      {
                          "option": "--no-log-prefix",
                          "description": "Don't print prefix in logs"
                      },
                      {
                          "option": "--since",
                          "description": "Show logs since timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)",
                          "value": "string"
                      },
                      {
                          "option": "--tail",
                          "shortcut": "-n",
                          "description": "Number of lines to show from the end of the logs for each container",
                          "value": "string",
                          "default": "\"all\""
                      },
                      {
                          "option": "--timestamps",
                          "shortcut": "-t",
                          "description": "Show timestamps"
                      },
                      {
                          "option": "--until",
                          "description": "Show logs before a timestamp (e.g. 2013-01-02T13:23:37Z) or relative (e.g. 42m for 42 minutes)",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose ls",
                  "description": "List running compose projects",
                  "usage": "docker compose ls [OPTIONS]",
                  "options": [
                      {
                          "option": "--all",
                          "shortcut": "-a",
                          "description": "Show all stopped Compose projects"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--filter",
                          "description": "Filter output based on conditions provided",
                          "value": "filter"
                      },
                      {
                          "option": "--format",
                          "description": "Format the output. Values: [table | json]",
                          "value": "string",
                          "default": "table"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Only display IDs"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose pause",
                  "description": "Pause services",
                  "usage": "docker compose pause [SERVICE...]",
                  "options": [
                      {
                          "description": "Execute command in dry run mode",
                          "option": "--dry-run"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose port",
                  "description": "Print the public port for a port binding",
                  "usage": "docker compose port [OPTIONS] SERVICE PRIVATE_PORT",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--index",
                          "description": "Index of the container if service has multiple replicas",
                          "value": "int"
                      },
                      {
                          "option": "--protocol",
                          "description": "tcp or udp",
                          "value": "string",
                          "default": "tcp"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose ps",
                  "description": "List containers",
                  "usage": "docker compose ps [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "-a",
                          "shortcut": "--all",
                          "description": "Show all stopped containers (including those created by the run command)"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--filter",
                          "description": "Filter services by a property (supported filters: status)",
                          "value": "string"
                      },
                      {
                          "option": "--format",
                          "description": "Format output using a custom template: 'table': Print output in table format with column headers (default) 'table TEMPLATE': Print output in table format using the given Go template 'json': Print in JSON format 'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string",
                          "default": "\"table\""
                      },
                      {
                          "option": "--no-trunc",
                          "description": "Don't truncate output"
                      },
                      {
                          "option": "--orphans",
                          "description": "Include orphaned services (not declared by project)",
                          "default": "true"
                      },
                      {
                          "option": "-q",
                          "shortcut": "--quiet",
                          "description": "Only display IDs"
                      },
                      {
                          "option": "--services",
                          "description": "Display services"
                      },
                      {
                          "option": "--status",
                          "description": "Filter services by status. Values: [paused | restarting | removing | running | dead | created | exited]",
                          "value": "stringArray"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose pull",
                  "description": "Pull service images",
                  "usage": "docker compose pull [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--ignore-buildable",
                          "description": "Ignore images that can be built"
                      },
                      {
                          "option": "--ignore-pull-failures",
                          "description": "Pull what it can and ignores images with pull failures"
                      },
                      {
                          "option": "--include-deps",
                          "description": "Also pull services declared as dependencies"
                      },
                      {
                          "option": "--policy",
                          "description": "Apply pull policy",
                          "value": "string"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Pull without printing progress information"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose push",
                  "description": "Push service images",
                  "usage": "docker compose push [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--ignore-push-failures",
                          "description": "Push what it can and ignores images with push failures"
                      },
                      {
                          "option": "--include-deps",
                          "description": "Also push images of services declared as dependencies"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Push without printing progress information"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose restart",
                  "description": "Restart service containers",
                  "usage": "docker compose restart [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--no-deps",
                          "description": "Don't restart dependent services"
                      },
                      {
                          "option": "--timeout",
                          "shortcut": "-t",
                          "description": "Specify a shutdown timeout in seconds",
                          "value": "int"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose rm",
                  "description": "Removes stopped service containers",
                  "usage": "docker compose rm [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "description": "Execute command in dry run mode",
                          "option": "--dry-run"
                      },
                      {
                          "description": "Don't ask to confirm removal",
                          "option": "--force",
                          "shortcut": "-f"
                      },
                      {
                          "description": "Stop the containers, if required, before removing",
                          "option": "--stop",
                          "shortcut": "-s"
                      },
                      {
                          "description": "Remove any anonymous volumes attached to containers",
                          "option": "--volumes",
                          "shortcut": "-v"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose run",
                  "description": "Run a one-off command on a service",
                  "usage": "docker compose run [OPTIONS] SERVICE [COMMAND] [ARGS...]",
                  "options": [
                      {
                          "option": "--build",
                          "description": "Build image before starting container"
                      },
                      {
                          "option": "--cap-add",
                          "description": "Add Linux capabilities",
                          "value": "list"
                      },
                      {
                          "option": "--cap-drop",
                          "description": "Drop Linux capabilities",
                          "value": "list"
                      },
                      {
                          "option": "--detach",
                          "shortcut": "-d",
                          "description": "Run container in background and print container ID"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--entrypoint",
                          "description": "Override the entrypoint of the image",
                          "value": "string"
                      },
                      {
                          "option": "--env",
                          "shortcut": "-e",
                          "description": "Set environment variables",
                          "value": "stringArray"
                      },
                      {
                          "option": "--interactive",
                          "shortcut": "-i",
                          "description": "Keep STDIN open even if not attached",
                          "default": "true"
                      },
                      {
                          "option": "--label",
                          "shortcut": "-l",
                          "description": "Add or override a label",
                          "value": "stringArray"
                      },
                      {
                          "option": "--name",
                          "description": "Assign a name to the container",
                          "value": "string"
                      },
                      {
                          "option": "--no-TTY",
                          "shortcut": "-T",
                          "description": "Disable pseudo-TTY allocation",
                          "default": "true"
                      },
                      {
                          "option": "--no-deps",
                          "description": "Don't start linked services"
                      },
                      {
                          "option": "--publish",
                          "shortcut": "-p",
                          "description": "Publish a container's port(s) to the host",
                          "value": "stringArray"
                      },
                      {
                          "option": "--quiet-pull",
                          "description": "Pull without printing progress information"
                      },
                      {
                          "option": "--remove-orphans",
                          "description": "Remove containers for services not defined in the Compose file"
                      },
                      {
                          "option": "--rm",
                          "description": "Automatically remove the container when it exits"
                      },
                      {
                          "option": "--service-ports",
                          "shortcut": "-P",
                          "description": "Run command with all service's ports enabled and mapped to the host"
                      },
                      {
                          "option": "--use-aliases",
                          "description": "Use the service's network useAliases in the network(s) the container connects to"
                      },
                      {
                          "option": "--user",
                          "shortcut": "-u",
                          "description": "Run as specified username or uid",
                          "value": "string"
                      },
                      {
                          "option": "--volume",
                          "shortcut": "-v",
                          "description": "Bind mount a volume",
                          "value": "stringArray"
                      },
                      {
                          "option": "--workdir",
                          "shortcut": "-w",
                          "description": "Working directory inside the container",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose scale",
                  "description": "Scale services",
                  "usage": "docker compose scale [SERVICE=REPLICAS...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--no-deps",
                          "description": "Don't start linked services"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose start",
                  "description": "Start services",
                  "usage": "docker compose start [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose stats",
                  "description": "Display a live stream of container(s) resource usage statistics",
                  "usage": "docker compose stats [OPTIONS] [SERVICE]",
                  "options": [
                      {
                          "option": "--all",
                          "shortcut": "-a",
                          "description": "Show all containers (default shows just running)"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--format",
                          "description": "Format output using a custom template:\n'table': Print output in table format with column headers (default)\n'table TEMPLATE': Print output in table format using the given Go template\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template.\nRefer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--no-stream",
                          "description": "Disable streaming stats and only pull the first result"
                      },
                      {
                          "option": "--no-trunc",
                          "description": "Do not truncate output"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose stop",
                  "description": "Stop services",
                  "usage": "docker compose stop [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--timeout",
                          "shortcut": "-t",
                          "description": "Specify a shutdown timeout in seconds",
                          "value": "int"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "description": "Display the running processes",
                  "name": "docker compose top",
                  "options": [
                      {
                          "description": "Execute command in dry run mode",
                          "option": "--dry-run"
                      }
                  ],
                  "subcommands": [],
                  "usage": "docker compose top [SERVICES...]"
              },
              {
                  "name": "docker compose unpause",
                  "description": "Unpause services",
                  "usage": "docker compose unpause [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose up",
                  "description": "Create and start containers",
                  "usage": "docker compose up [OPTIONS] [SERVICE...]",
                  "options": [
                      {
                          "option": "--abort-on-container-exit",
                          "description": "Stops all containers if any container was stopped. Incompatible with -d"
                      },
                      {
                          "option": "--abort-on-container-failure",
                          "description": "Stops all containers if any container exited with failure. Incompatible with -d"
                      },
                      {
                          "option": "--always-recreate-deps",
                          "description": "Recreate dependent containers. Incompatible with --no-recreate."
                      },
                      {
                          "option": "--attach",
                          "description": "Restrict attaching to the specified services. Incompatible with --attach-dependencies.",
                          "value": "stringArray"
                      },
                      {
                          "option": "--attach-dependencies",
                          "description": "Automatically attach to log output of dependent services"
                      },
                      {
                          "option": "--build",
                          "description": "Build images before starting containers"
                      },
                      {
                          "option": "--detach",
                          "shortcut": "-d",
                          "description": "Detached mode: Run containers in the background"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--exit-code-from",
                          "description": "Return the exit code of the selected service container. Implies --abort-on-container-exit",
                          "value": "string"
                      },
                      {
                          "option": "--force-recreate",
                          "description": "Recreate containers even if their configuration and image haven't changed"
                      },
                      {
                          "option": "--menu",
                          "description": "Enable interactive shortcuts when running attached. Incompatible with --detach. Can also be enable/disable by setting COMPOSE_MENU environment var."
                      },
                      {
                          "option": "--no-attach",
                          "description": "Do not attach (stream logs) to the specified services",
                          "value": "stringArray"
                      },
                      {
                          "option": "--no-build",
                          "description": "Don't build an image, even if it's policy"
                      },
                      {
                          "option": "--no-color",
                          "description": "Produce monochrome output"
                      },
                      {
                          "option": "--no-deps",
                          "description": "Don't start linked services"
                      },
                      {
                          "option": "--no-log-prefix",
                          "description": "Don't print prefix in logs"
                      },
                      {
                          "option": "--no-recreate",
                          "description": "If containers already exist, don't recreate them. Incompatible with --force-recreate."
                      },
                      {
                          "option": "--no-start",
                          "description": "Don't start the services after creating them"
                      },
                      {
                          "option": "--pull",
                          "description": "Pull image before running (\"always\"|\"missing\"|\"never\")",
                          "value": "string",
                          "default": "policy"
                      },
                      {
                          "option": "--quiet-pull",
                          "description": "Pull without printing progress information"
                      },
                      {
                          "option": "--remove-orphans",
                          "description": "Remove containers for services not defined in the Compose file"
                      },
                      {
                          "option": "--renew-anon-volumes",
                          "shortcut": "-V",
                          "description": "Recreate anonymous volumes instead of retrieving data from the previous containers"
                      },
                      {
                          "option": "--scale",
                          "description": "Scale SERVICE to NUM instances. Overrides the scale setting in the Compose file if present.",
                          "value": "scale"
                      },
                      {
                          "option": "--timeout",
                          "shortcut": "-t",
                          "description": "Use this timeout in seconds for container shutdown when attached or when containers are already running",
                          "value": "int"
                      },
                      {
                          "option": "--timestamps",
                          "description": "Show timestamps"
                      },
                      {
                          "option": "--wait",
                          "description": "Wait for services to be running|healthy. Implies detached mode."
                      },
                      {
                          "option": "--wait-timeout",
                          "description": "Maximum duration in seconds to wait for the project to be running|healthy",
                          "value": "int"
                      },
                      {
                          "option": "--watch",
                          "shortcut": "-w",
                          "description": "Watch source code and rebuild/refresh containers when files are updated."
                      },
                      {
                          "option": "--y",
                          "shortcut": "-y",
                          "description": "Assume \"yes\" as answer to all prompts and run non-interactively"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "description": "Show the Docker Compose version information",
                  "name": "docker compose version",
                  "options": [
                      {
                          "description": "Execute command in dry run mode",
                          "option": "--dry-run"
                      },
                      {
                          "default": "pretty",
                          "description": "Format the output.",
                          "option": "--format",
                          "shortcut": "-f",
                          "tags": [
                              "pretty",
                              "json"
                          ],
                          "value": "string"
                      },
                      {
                          "description": "Shows only Compose's version number",
                          "option": "--short"
                      }
                  ],
                  "usage": "docker compose version [OPTIONS]",
                  "subcommands": []
              },
              {
                  "name": "docker compose wait",
                  "description": "Block until containers of all (or specified) services stop.",
                  "usage": "docker compose wait SERVICE [SERVICE...] [OPTIONS]",
                  "options": [
                      {
                          "option": "--down-project",
                          "description": "Drops project when the first container stops"
                      },
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker compose watch",
                  "description": "Watch build context for service and rebuild/refresh containers when files are updated",
                  "usage": "docker compose watch [SERVICE...]",
                  "options": [
                      {
                          "option": "--dry-run",
                          "description": "Execute command in dry run mode"
                      },
                      {
                          "option": "--no-up",
                          "description": "Do not build & start services before watching"
                      },
                      {
                          "option": "--prune",
                          "description": "Prune dangling images on rebuild"
                      },
                      {
                          "option": "--quiet",
                          "description": "hide build output"
                      }
                  ],
                  "subcommands": []
              }
          ]
      },
      {
          "name": "docker container",
          "description": "Manage containers",
          "usage": "docker container COMMAND",
          "subcommands": [
              {
                  "name": "docker container attach",
                  "description": "Attach local standard input, output, and error streams to a running container",
                  "usage": "docker container attach [OPTIONS] CONTAINER",
                  "options": [
                      {
                          "option": "--detach-keys",
                          "description": "Override the key sequence for detaching a container",
                          "value": "string"
                      },
                      {
                          "option": "--no-stdin",
                          "description": "Do not attach STDIN"
                      },
                      {
                          "option": "--sig-proxy",
                          "description": "Proxy all received signals to the process",
                          "default": "true"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container commit",
                  "description": "Create a new image from a container's changes",
                  "usage": "docker container commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]",
                  "options": [
                      {
                          "option": "--author",
                          "shortcut": "-a",
                          "description": "Author (e.g., \"John Hannibal Smith <hannibal@a-team.com>\")",
                          "value": "string"
                      },
                      {
                          "option": "--change",
                          "shortcut": "-c",
                          "description": "Apply Dockerfile instruction to the created image",
                          "value": "list"
                      },
                      {
                          "option": "--message",
                          "shortcut": "-m",
                          "description": "Commit message",
                          "value": "string"
                      },
                      {
                          "option": "--pause",
                          "shortcut": "-p",
                          "description": "Pause container during commit",
                          "default": "true"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container cp",
                  "description": "Copy files/folders between a container and the local filesystem",
                  "usage": [
                      "docker container cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-",
                      "docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH"
                  ],
                  "options": [
                      {
                          "option": "--archive",
                          "shortcut": "-a",
                          "description": "Archive mode (copy all uid/gid information)"
                      },
                      {
                          "option": "--follow-link",
                          "shortcut": "-L",
                          "description": "Always follow symbol link in SRC_PATH"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Suppress progress output during copy. Progress output is automatically suppressed if no terminal is attached"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container create",
                  "description": "Create a new container",
                  "usage": "docker container create [OPTIONS] IMAGE [COMMAND] [ARG...]",
                  "options": [
                      {
                          "option": "--add-host",
                          "description": "Add a custom host-to-IP mapping (host:ip)",
                          "value": "list"
                      },
                      {
                          "option": "--annotation",
                          "description": "Add an annotation to the container (passed through to the OCI runtime)",
                          "value": "map",
                          "default": "map[]"
                      },
                      {
                          "option": "--attach",
                          "shortcut": "-a",
                          "description": "Attach to STDIN, STDOUT or STDERR",
                          "value": "list"
                      },
                      {
                          "option": "--blkio-weight",
                          "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable",
                          "value": "uint16",
                          "default": "0"
                      },
                      {
                          "option": "--blkio-weight-device",
                          "description": "Block IO weight (relative device weight)",
                          "value": "list",
                          "default": "[]"
                      },
                      {
                          "option": "--cap-add",
                          "description": "Add Linux capabilities",
                          "value": "list"
                      },
                      {
                          "option": "--cap-drop",
                          "description": "Drop Linux capabilities",
                          "value": "list"
                      },
                      {
                          "option": "--cgroup-parent",
                          "description": "Optional parent cgroup for the container",
                          "value": "string"
                      },
                      {
                          "option": "--cgroupns",
                          "description": "Cgroup namespace to use (host|private)",
                          "value": "string",
                          "default": "''"
                      },
                      {
                          "option": "--cidfile",
                          "description": "Write the container ID to the file",
                          "value": "string"
                      },
                      {
                          "option": "--cpu-period",
                          "description": "Limit CPU CFS (Completely Fair Scheduler) period",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-quota",
                          "description": "Limit CPU CFS (Completely Fair Scheduler) quota",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-rt-period",
                          "description": "Limit CPU real-time period in microseconds",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-rt-runtime",
                          "description": "Limit CPU real-time runtime in microseconds",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-shares",
                          "shortcut": "-c",
                          "description": "CPU shares (relative weight)",
                          "value": "int"
                      },
                      {
                          "option": "--cpus",
                          "description": "Number of CPUs",
                          "value": "decimal"
                      },
                      {
                          "option": "--cpuset-cpus",
                          "description": "CPUs in which to allow execution (0-3, 0,1)",
                          "value": "string"
                      },
                      {
                          "option": "--cpuset-mems",
                          "description": "MEMs in which to allow execution (0-3, 0,1)",
                          "value": "string"
                      },
                      {
                          "option": "--device",
                          "description": "Add a host device to the container",
                          "value": "list"
                      },
                      {
                          "option": "--device-cgroup-rule",
                          "description": "Add a rule to the cgroup allowed devices list",
                          "value": "list"
                      },
                      {
                          "option": "--device-read-bps",
                          "description": "Limit read rate (bytes per second) from a device",
                          "value": "list",
                          "default": "[]"
                      },
                      {
                          "option": "--device-read-iops",
                          "description": "Limit read rate (IO per second) from a device",
                          "value": "list",
                          "default": "[]"
                      },
                      {
                          "option": "--device-write-bps",
                          "description": "Limit write rate (bytes per second) to a device",
                          "value": "list",
                          "default": "[]"
                      },
                      {
                          "option": "--device-write-iops",
                          "description": "Limit write rate (IO per second) to a device",
                          "value": "list",
                          "default": "[]"
                      },
                      {
                          "option": "--disable-content-trust",
                          "description": "Skip image verification",
                          "default": "true"
                      },
                      {
                          "option": "--dns",
                          "description": "Set custom DNS servers",
                          "value": "list"
                      },
                      {
                          "option": "--dns-option",
                          "description": "Set DNS options",
                          "value": "list"
                      },
                      {
                          "option": "--dns-search",
                          "description": "Set custom DNS search domains",
                          "value": "list"
                      },
                      {
                          "option": "--domainname",
                          "description": "Container NIS domain name",
                          "value": "string"
                      },
                      {
                          "option": "--entrypoint",
                          "description": "Overwrite the default ENTRYPOINT of the image",
                          "value": "string"
                      },
                      {
                          "option": "--env",
                          "shortcut": "-e",
                          "description": "Set environment variables",
                          "value": "list"
                      },
                      {
                          "option": "--env-file",
                          "description": "Read in a file of environment variables",
                          "value": "list"
                      },
                      {
                          "option": "--expose",
                          "description": "Expose a port or a range of ports",
                          "value": "list"
                      },
                      {
                          "option": "--gpus",
                          "description": "GPU devices to add to the container ('all' to pass all GPUs)",
                          "value": "gpu-request"
                      },
                      {
                          "option": "--group-add",
                          "description": "Add additional groups to join",
                          "value": "list"
                      },
                      {
                          "option": "--health-cmd",
                          "description": "Command to run to check health",
                          "value": "string"
                      },
                      {
                          "option": "--health-interval",
                          "description": "Time between running the check (ms|s|m|h)",
                          "value": "duration",
                          "default": "0s"
                      },
                      {
                          "option": "--health-retries",
                          "description": "Consecutive failures needed to report unhealthy",
                          "value": "int"
                      },
                      {
                          "option": "--health-start-interval",
                          "description": "Time between running the check during the start period (ms|s|m|h)",
                          "value": "duration",
                          "default": "0s"
                      },
                      {
                          "option": "--health-start-period",
                          "description": "Start period for the container to initialize before starting health-retries countdown (ms|s|m|h)",
                          "value": "duration",
                          "default": "0s"
                      },
                      {
                          "option": "--health-timeout",
                          "description": "Maximum time to allow one check to run (ms|s|m|h)",
                          "value": "duration",
                          "default": "0s"
                      },
                      {
                          "option": "--help",
                          "description": "Print usage"
                      },
                      {
                          "option": "--hostname",
                          "shortcut": "-h",
                          "description": "Container host name",
                          "value": "string"
                      },
                      {
                          "option": "--init",
                          "description": "Run an init inside the container that forwards signals and reaps processes"
                      },
                      {
                          "option": "--interactive",
                          "shortcut": "-i",
                          "description": "Keep STDIN open even if not attached"
                      },
                      {
                          "option": "--ip",
                          "description": "IPv4 address (e.g., 172.30.100.104)",
                          "value": "string"
                      },
                      {
                          "option": "--ip6",
                          "description": "IPv6 address (e.g., 2001:db8::33)",
                          "value": "string"
                      },
                      {
                          "option": "--ipc",
                          "description": "IPC mode to use",
                          "value": "string"
                      },
                      {
                          "option": "--isolation",
                          "description": "Container isolation technology",
                          "value": "string"
                      },
                      {
                          "option": "--kernel-memory",
                          "description": "Kernel memory limit",
                          "value": "bytes"
                      },
                      {
                          "option": "--label",
                          "shortcut": "-l",
                          "description": "Set meta data on a container",
                          "value": "list"
                      },
                      {
                          "option": "--label-file",
                          "description": "Read in a line delimited file of labels",
                          "value": "list"
                      },
                      {
                          "option": "--link",
                          "description": "Add link to another container",
                          "value": "list"
                      },
                      {
                          "option": "--link-local-ip",
                          "description": "Container IPv4/IPv6 link-local addresses",
                          "value": "list"
                      },
                      {
                          "option": "--log-driver",
                          "description": "Logging driver for the container",
                          "value": "string"
                      },
                      {
                          "option": "--log-opt",
                          "description": "Log driver options",
                          "value": "list"
                      },
                      {
                          "option": "--mac-address",
                          "description": "Container MAC address (e.g., 92:d0:c6:0a:29:33)",
                          "value": "string"
                      },
                      {
                          "option": "--memory",
                          "shortcut": "-m",
                          "description": "Memory limit",
                          "value": "bytes"
                      },
                      {
                          "option": "--memory-reservation",
                          "description": "Memory soft limit",
                          "value": "bytes"
                      },
                      {
                          "option": "--memory-swap",
                          "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
                          "value": "bytes"
                      },
                      {
                          "option": "--memory-swappiness",
                          "description": "Tune container memory swappiness (0 to 100)",
                          "value": "int",
                          "default": "-1"
                      },
                      {
                          "option": "--mount",
                          "description": "Attach a filesystem mount to the container",
                          "value": "mount"
                      },
                      {
                          "option": "--name",
                          "description": "Assign a name to the container",
                          "value": "string"
                      },
                      {
                          "option": "--network",
                          "description": "Connect a container to a network",
                          "value": "network"
                      },
                      {
                          "option": "--network-alias",
                          "description": "Add network-scoped alias for the container",
                          "value": "list"
                      },
                      {
                          "option": "--no-healthcheck",
                          "description": "Disable any container-specified HEALTHCHECK"
                      },
                      {
                          "option": "--oom-kill-disable",
                          "description": "Disable OOM Killer"
                      },
                      {
                          "option": "--oom-score-adj",
                          "description": "Tune host's OOM preferences (-1000 to 1000)",
                          "value": "int"
                      },
                      {
                          "option": "--pid",
                          "description": "PID namespace to use",
                          "value": "string"
                      },
                      {
                          "option": "--pids-limit",
                          "description": "Tune container pids limit (set -1 for unlimited)",
                          "value": "int"
                      },
                      {
                          "option": "--platform",
                          "description": "Set platform if server is multi-platform capable",
                          "value": "string"
                      },
                      {
                          "option": "--privileged",
                          "description": "Give extended privileges to this container"
                      },
                      {
                          "option": "--publish",
                          "shortcut": "-p",
                          "description": "Publish a container's port(s) to the host",
                          "value": "list"
                      },
                      {
                          "option": "--publish-all",
                          "shortcut": "-P",
                          "description": "Publish all exposed ports to random ports"
                      },
                      {
                          "option": "--pull",
                          "description": "Pull image before creating (\"always\", \"|missing\", \"never\")",
                          "value": "string",
                          "default": "\"missing\""
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Suppress the pull output"
                      },
                      {
                          "option": "--read-only",
                          "description": "Mount the container's root filesystem as read only"
                      },
                      {
                          "option": "--restart",
                          "description": "Restart policy to apply when a container exits",
                          "value": "string",
                          "default": "\"no\""
                      },
                      {
                          "option": "--rm",
                          "description": "Automatically remove the container and its associated anonymous volumes when it exits"
                      },
                      {
                          "option": "--runtime",
                          "description": "Runtime to use for this container",
                          "value": "string"
                      },
                      {
                          "option": "--security-opt",
                          "description": "Security Options",
                          "value": "list"
                      },
                      {
                          "option": "--shm-size",
                          "description": "Size of /dev/shm",
                          "value": "bytes"
                      },
                      {
                          "option": "--stop-signal",
                          "description": "Signal to stop the container",
                          "value": "string"
                      },
                      {
                          "option": "--stop-timeout",
                          "description": "Timeout (in seconds) to stop a container",
                          "value": "int"
                      },
                      {
                          "option": "--storage-opt",
                          "description": "Storage driver options for the container",
                          "value": "list"
                      },
                      {
                          "option": "--sysctl",
                          "description": "Sysctl options",
                          "value": "map",
                          "default": "map[]"
                      },
                      {
                          "option": "--tmpfs",
                          "description": "Mount a tmpfs directory",
                          "value": "list"
                      },
                      {
                          "option": "--tty",
                          "shortcut": "-t",
                          "description": "Allocate a pseudo-TTY"
                      },
                      {
                          "option": "--ulimit",
                          "description": "Ulimit options",
                          "value": "ulimit",
                          "default": "[]"
                      },
                      {
                          "option": "--user",
                          "shortcut": "-u",
                          "description": "Username or UID (format: <name|uid>[:<group|gid>])",
                          "value": "string"
                      },
                      {
                          "option": "--userns",
                          "description": "User namespace to use",
                          "value": "string"
                      },
                      {
                          "option": "--uts",
                          "description": "UTS namespace to use",
                          "value": "string"
                      },
                      {
                          "option": "--volume",
                          "shortcut": "-v",
                          "description": "Bind mount a volume",
                          "value": "list"
                      },
                      {
                          "option": "--volume-driver",
                          "description": "Optional volume driver for the container",
                          "value": "string"
                      },
                      {
                          "option": "--volumes-from",
                          "description": "Mount volumes from the specified container(s)",
                          "value": "list"
                      },
                      {
                          "option": "--workdir",
                          "shortcut": "-w",
                          "description": "Working directory inside the container",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container diff",
                  "description": "Inspect changes to files or directories on a container's filesystem",
                  "usage": "docker container diff CONTAINER",
                  "subcommands": [],
                  "options": []
              },
              {
                  "name": "docker container exec",
                  "description": "Execute a command in a running container",
                  "usage": "docker container exec [OPTIONS] CONTAINER COMMAND [ARG...]",
                  "options": [
                      {
                          "option": "--detach",
                          "shortcut": "-d",
                          "description": "Detached mode: run command in the background"
                      },
                      {
                          "option": "--detach-keys",
                          "description": "Override the key sequence for detaching a container",
                          "value": "string"
                      },
                      {
                          "option": "--env",
                          "shortcut": "-e",
                          "description": "Set environment variables",
                          "value": "list"
                      },
                      {
                          "option": "--env-file",
                          "description": "Read in a file of environment variables",
                          "value": "list"
                      },
                      {
                          "option": "--interactive",
                          "shortcut": "-i",
                          "description": "Keep STDIN open even if not attached"
                      },
                      {
                          "option": "--privileged",
                          "description": "Give extended privileges to the command"
                      },
                      {
                          "option": "--tty",
                          "shortcut": "-t",
                          "description": "Allocate a pseudo-TTY"
                      },
                      {
                          "option": "--user",
                          "shortcut": "-u",
                          "description": "Username or UID (format: \"<name|uid>[:<group|gid>]\")",
                          "value": "string"
                      },
                      {
                          "option": "--workdir",
                          "shortcut": "-w",
                          "description": "Working directory inside the container",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container export",
                  "description": "Export a container's filesystem as a tar archive",
                  "usage": "docker container export [OPTIONS] CONTAINER",
                  "options": [
                      {
                          "option": "--output",
                          "shortcut": "-o",
                          "description": "Write to a file, instead of STDOUT",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container inspect",
                  "description": "Display detailed information on one or more containers",
                  "usage": "docker container inspect [OPTIONS] CONTAINER [CONTAINER...]",
                  "options": [
                      {
                          "option": "--format",
                          "shortcut": "-f",
                          "description": "Format output using a custom template:\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template.\nRefer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--size",
                          "shortcut": "-s",
                          "description": "Display total file sizes"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container kill",
                  "description": "Kill one or more running containers",
                  "usage": "docker container kill [OPTIONS] CONTAINER [CONTAINER...]",
                  "subcommands": [],
                  "options": [
                      {
                          "option": "--signal",
                          "shortcut": "-s",
                          "description": "Signal to send to the container",
                          "value": "string"
                      }
                  ]
              },
              {
                  "name": "docker container logs",
                  "description": "Fetch the logs of a container",
                  "usage": "docker container logs [OPTIONS] CONTAINER",
                  "options": [
                      {
                          "option": "--details",
                          "description": "Show extra details provided to logs"
                      },
                      {
                          "option": "--follow",
                          "shortcut": "-f",
                          "description": "Follow log output"
                      },
                      {
                          "option": "--since",
                          "description": "Show logs since timestamp (e.g. \"2013-01-02T13:23:37Z\") or relative (e.g. \"42m\" for 42 minutes)",
                          "value": "string"
                      },
                      {
                          "option": "--tail",
                          "shortcut": "-n",
                          "description": "Number of lines to show from the end of the logs",
                          "value": "string",
                          "default": "\"all\""
                      },
                      {
                          "option": "--timestamps",
                          "shortcut": "-t",
                          "description": "Show timestamps"
                      },
                      {
                          "option": "--until",
                          "description": "Show logs before a timestamp (e.g. \"2013-01-02T13:23:37Z\") or relative (e.g. \"42m\" for 42 minutes)",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container ls",
                  "description": "List containers",
                  "usage": "docker container ls [OPTIONS]",
                  "options": [
                      {
                          "option": "--all",
                          "shortcut": "-a",
                          "description": "Show all containers (default shows just running)"
                      },
                      {
                          "option": "--filter",
                          "shortcut": "-f",
                          "description": "Filter output based on conditions provided",
                          "value": "filter"
                      },
                      {
                          "option": "--format",
                          "description": "Format output using a custom template:\n'table': Print output in table format with column headers (default) 'table TEMPLATE': Print output in table format using the given Go template 'json': Print in JSON format 'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--last",
                          "shortcut": "-n",
                          "description": "Show n last created containers (includes all states)",
                          "value": "int",
                          "default": "-1"
                      },
                      {
                          "option": "--latest",
                          "shortcut": "-l",
                          "description": "Show the latest created container (includes all states)"
                      },
                      {
                          "option": "--no-trunc",
                          "description": "Don't truncate output"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Only display container IDs"
                      },
                      {
                          "option": "--size",
                          "shortcut": "-s",
                          "description": "Display total file sizes"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "description": "Pause all processes within one or more containers",
                  "name": "docker container pause",
                  "subcommands": [],
                  "options": [],
                  "usage": "docker container pause CONTAINER [CONTAINER...]"
              },
              {
                  "name": "docker container port",
                  "description": "List port mappings or a specific mapping for the container",
                  "usage": "docker container port CONTAINER [PRIVATE_PORT[/PROTO]]",
                  "subcommands": [],
                  "options": []
              },
              {
                  "name": "docker container prune",
                  "description": "Remove all stopped containers",
                  "usage": "docker container prune [OPTIONS]",
                  "options": [
                      {
                          "option": "--filter",
                          "description": "Provide filter values (e.g. \"until=<timestamp>\")",
                          "value": "filter"
                      },
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Do not prompt for confirmation"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container rename",
                  "description": "Rename a container",
                  "usage": "docker container rename CONTAINER NEW_NAME",
                  "subcommands": [],
                  "options": []
              },
              {
                  "name": "docker container restart",
                  "description": "Restart one or more containers",
                  "usage": "docker container restart [OPTIONS] CONTAINER [CONTAINER...]",
                  "options": [
                      {
                          "option": "--signal",
                          "shortcut": "-s",
                          "description": "Signal to send to the container",
                          "value": "string"
                      },
                      {
                          "option": "--time",
                          "shortcut": "-t",
                          "description": "Seconds to wait before killing the container",
                          "value": "int"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container rm",
                  "description": "Remove one or more containers",
                  "usage": "docker container rm [OPTIONS] CONTAINER [CONTAINER...]",
                  "options": [
                      {
                          "description": "Force the removal of a running container (uses SIGKILL)",
                          "option": "--force",
                          "shortcut": "-f"
                      },
                      {
                          "description": "Remove the specified link",
                          "option": "--link",
                          "shortcut": "-l"
                      },
                      {
                          "description": "Remove anonymous volumes associated with the container",
                          "option": "--volumes",
                          "shortcut": "-v"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container run",
                  "description": "Create and run a new container from an image",
                  "usage": "docker container run [OPTIONS] IMAGE [COMMAND] [ARG...]",
                  "subcommands": [],
                  "options": [
                      {
                          "option": "--add-host",
                          "description": "Add a custom host-to-IP mapping (host:ip)",
                          "value": "list"
                      },
                      {
                          "option": "--annotation",
                          "description": "Add an annotation to the container (passed through to the OCI runtime)",
                          "value": "map",
                          "default": "map[]"
                      },
                      {
                          "option": "--attach",
                          "shortcut": "-a",
                          "description": "Attach to STDIN, STDOUT or STDERR",
                          "value": "list"
                      },
                      {
                          "option": "--blkio-weight",
                          "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable",
                          "value": "uint16",
                          "default": "0"
                      },
                      {
                          "option": "--blkio-weight-device",
                          "description": "Block IO weight (relative device weight)",
                          "value": "list",
                          "default": "[]"
                      },
                      {
                          "option": "--cap-add",
                          "description": "Add Linux capabilities",
                          "value": "list"
                      },
                      {
                          "option": "--cap-drop",
                          "description": "Drop Linux capabilities",
                          "value": "list"
                      },
                      {
                          "option": "--cgroup-parent",
                          "description": "Optional parent cgroup for the container",
                          "value": "string"
                      },
                      {
                          "option": "--cgroupns",
                          "description": "Cgroup namespace to use (host|private)",
                          "value": "string",
                          "default": "''"
                      },
                      {
                          "option": "--cidfile",
                          "description": "Write the container ID to the file",
                          "value": "string"
                      },
                      {
                          "option": "--cpu-period",
                          "description": "Limit CPU CFS (Completely Fair Scheduler) period",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-quota",
                          "description": "Limit CPU CFS (Completely Fair Scheduler) quota",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-rt-period",
                          "description": "Limit CPU real-time period in microseconds",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-rt-runtime",
                          "description": "Limit CPU real-time runtime in microseconds",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-shares",
                          "shortcut": "-c",
                          "description": "CPU shares (relative weight)",
                          "value": "int"
                      },
                      {
                          "option": "--cpus",
                          "description": "Number of CPUs",
                          "value": "decimal"
                      },
                      {
                          "option": "--cpuset-cpus",
                          "description": "CPUs in which to allow execution (0-3, 0,1)",
                          "value": "string"
                      },
                      {
                          "option": "--cpuset-mems",
                          "description": "MEMs in which to allow execution (0-3, 0,1)",
                          "value": "string"
                      },
                      {
                          "option": "--detach",
                          "shortcut": "-d",
                          "description": "Run container in background and print container ID"
                      },
                      {
                          "option": "--detach-keys",
                          "description": "Override the key sequence for detaching a container",
                          "value": "string"
                      },
                      {
                          "option": "--device",
                          "description": "Add a host device to the container",
                          "value": "list"
                      },
                      {
                          "option": "--device-cgroup-rule",
                          "description": "Add a rule to the cgroup allowed devices list",
                          "value": "list"
                      },
                      {
                          "option": "--device-read-bps",
                          "description": "Limit read rate (bytes per second) from a device",
                          "value": "list",
                          "default": "[]"
                      },
                      {
                          "option": "--device-read-iops",
                          "description": "Limit read rate (IO per second) from a device",
                          "value": "list",
                          "default": "[]"
                      },
                      {
                          "option": "--device-write-bps",
                          "description": "Limit write rate (bytes per second) to a device",
                          "value": "list",
                          "default": "[]"
                      },
                      {
                          "option": "--device-write-iops",
                          "description": "Limit write rate (IO per second) to a device",
                          "value": "list",
                          "default": "[]"
                      },
                      {
                          "option": "--disable-content-trust",
                          "description": "Skip image verification",
                          "default": "true"
                      },
                      {
                          "option": "--dns",
                          "description": "Set custom DNS servers",
                          "value": "list"
                      },
                      {
                          "option": "--dns-option",
                          "description": "Set DNS options",
                          "value": "list"
                      },
                      {
                          "option": "--dns-search",
                          "description": "Set custom DNS search domains",
                          "value": "list"
                      },
                      {
                          "option": "--domainname",
                          "description": "Container NIS domain name",
                          "value": "string"
                      },
                      {
                          "option": "--entrypoint",
                          "description": "Overwrite the default ENTRYPOINT of the image",
                          "value": "string"
                      },
                      {
                          "option": "--env",
                          "shortcut": "-e",
                          "description": "Set environment variables",
                          "value": "list"
                      },
                      {
                          "option": "--env-file",
                          "description": "Read in a file of environment variables",
                          "value": "list"
                      },
                      {
                          "option": "--expose",
                          "description": "Expose a port or a range of ports",
                          "value": "list"
                      },
                      {
                          "option": "--gpus",
                          "description": "GPU devices to add to the container ('all' to pass all GPUs)",
                          "value": "gpu-request"
                      },
                      {
                          "option": "--group-add",
                          "description": "Add additional groups to join",
                          "value": "list"
                      },
                      {
                          "option": "--health-cmd",
                          "description": "Command to run to check health",
                          "value": "string"
                      },
                      {
                          "option": "--health-interval",
                          "description": "Time between running the check (ms|s|m|h)",
                          "value": "duration",
                          "default": "0s"
                      },
                      {
                          "option": "--health-retries",
                          "description": "Consecutive failures needed to report unhealthy",
                          "value": "int"
                      },
                      {
                          "option": "--health-start-interval",
                          "description": "Time between running the check during the start period (ms|s|m|h)",
                          "value": "duration",
                          "default": "0s"
                      },
                      {
                          "option": "--health-start-period",
                          "description": "Start period for the container to initialize before starting health-retries countdown (ms|s|m|h)",
                          "value": "duration",
                          "default": "0s"
                      },
                      {
                          "option": "--health-timeout",
                          "description": "Maximum time to allow one check to run (ms|s|m|h)",
                          "value": "duration",
                          "default": "0s"
                      },
                      {
                          "option": "--help",
                          "description": "Print usage"
                      },
                      {
                          "option": "--hostname",
                          "shortcut": "-h",
                          "description": "Container host name",
                          "value": "string"
                      },
                      {
                          "option": "--init",
                          "description": "Run an init inside the container that forwards signals and reaps processes"
                      },
                      {
                          "option": "--interactive",
                          "shortcut": "-i",
                          "description": "Keep STDIN open even if not attached"
                      },
                      {
                          "option": "--ip",
                          "description": "IPv4 address (e.g., 172.30.100.104)",
                          "value": "string"
                      },
                      {
                          "option": "--ip6",
                          "description": "IPv6 address (e.g., 2001:db8::33)",
                          "value": "string"
                      },
                      {
                          "option": "--ipc",
                          "description": "IPC mode to use",
                          "value": "string"
                      },
                      {
                          "option": "--isolation",
                          "description": "Container isolation technology",
                          "value": "string"
                      },
                      {
                          "option": "--kernel-memory",
                          "description": "Kernel memory limit",
                          "value": "bytes"
                      },
                      {
                          "option": "--label",
                          "shortcut": "-l",
                          "description": "Set meta data on a container",
                          "value": "list"
                      },
                      {
                          "option": "--label-file",
                          "description": "Read in a line delimited file of labels",
                          "value": "list"
                      },
                      {
                          "option": "--link",
                          "description": "Add link to another container",
                          "value": "list"
                      },
                      {
                          "option": "--link-local-ip",
                          "description": "Container IPv4/IPv6 link-local addresses",
                          "value": "list"
                      },
                      {
                          "option": "--log-driver",
                          "description": "Logging driver for the container",
                          "value": "string"
                      },
                      {
                          "option": "--log-opt",
                          "description": "Log driver options",
                          "value": "list"
                      },
                      {
                          "option": "--mac-address",
                          "description": "Container MAC address (e.g., 92:d0:c6:0a:29:33)",
                          "value": "string"
                      },
                      {
                          "option": "--memory",
                          "shortcut": "-m",
                          "description": "Memory limit",
                          "value": "bytes"
                      },
                      {
                          "option": "--memory-reservation",
                          "description": "Memory soft limit",
                          "value": "bytes"
                      },
                      {
                          "option": "--memory-swap",
                          "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
                          "value": "bytes"
                      },
                      {
                          "option": "--memory-swappiness",
                          "description": "Tune container memory swappiness (0 to 100)",
                          "value": "int",
                          "default": "-1"
                      },
                      {
                          "option": "--mount",
                          "description": "Attach a filesystem mount to the container",
                          "value": "mount"
                      },
                      {
                          "option": "--name",
                          "description": "Assign a name to the container",
                          "value": "string"
                      },
                      {
                          "option": "--network",
                          "description": "Connect a container to a network",
                          "value": "network"
                      },
                      {
                          "option": "--network-alias",
                          "description": "Add network-scoped alias for the container",
                          "value": "list"
                      },
                      {
                          "option": "--no-healthcheck",
                          "description": "Disable any container-specified HEALTHCHECK"
                      },
                      {
                          "option": "--oom-kill-disable",
                          "description": "Disable OOM Killer"
                      },
                      {
                          "option": "--oom-score-adj",
                          "description": "Tune host's OOM preferences (-1000 to 1000)",
                          "value": "int"
                      },
                      {
                          "option": "--pid",
                          "description": "PID namespace to use",
                          "value": "string"
                      },
                      {
                          "option": "--pids-limit",
                          "description": "Tune container pids limit (set -1 for unlimited)",
                          "value": "int"
                      },
                      {
                          "option": "--platform",
                          "description": "Set platform if server is multi-platform capable",
                          "value": "string"
                      },
                      {
                          "option": "--privileged",
                          "description": "Give extended privileges to this container"
                      },
                      {
                          "option": "--publish",
                          "shortcut": "-p",
                          "description": "Publish a container's port(s) to the host",
                          "value": "list"
                      },
                      {
                          "option": "--publish-all",
                          "shortcut": "-P",
                          "description": "Publish all exposed ports to random ports"
                      },
                      {
                          "option": "--pull",
                          "description": "Pull image before running (\"always\", \"missing\", \"never\")",
                          "value": "string",
                          "default": "\"missing\""
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Suppress the pull output"
                      },
                      {
                          "option": "--read-only",
                          "description": "Mount the container's root filesystem as read only"
                      },
                      {
                          "option": "--restart",
                          "description": "Restart policy to apply when a container exits",
                          "value": "string",
                          "default": "\"no\""
                      },
                      {
                          "option": "--rm",
                          "description": "Automatically remove the container and its associated anonymous volumes when it exits"
                      },
                      {
                          "option": "--runtime",
                          "description": "Runtime to use for this container",
                          "value": "string"
                      },
                      {
                          "option": "--security-opt",
                          "description": "Security Options",
                          "value": "list"
                      },
                      {
                          "option": "--shm-size",
                          "description": "Size of /dev/shm",
                          "value": "bytes"
                      },
                      {
                          "option": "--sig-proxy",
                          "description": "Proxy received signals to the process",
                          "default": "true"
                      },
                      {
                          "option": "--stop-signal",
                          "description": "Signal to stop the container",
                          "value": "string"
                      },
                      {
                          "option": "--stop-timeout",
                          "description": "Timeout (in seconds) to stop a container",
                          "value": "int"
                      },
                      {
                          "option": "--storage-opt",
                          "description": "Storage driver options for the container",
                          "value": "list"
                      },
                      {
                          "option": "--sysctl",
                          "description": "Sysctl options",
                          "value": "map",
                          "default": "map[]"
                      },
                      {
                          "option": "--tmpfs",
                          "description": "Mount a tmpfs directory",
                          "value": "list"
                      },
                      {
                          "option": "--tty",
                          "shortcut": "-t",
                          "description": "Allocate a pseudo-TTY"
                      },
                      {
                          "option": "--ulimit",
                          "description": "Ulimit options",
                          "value": "ulimit",
                          "default": "[]"
                      },
                      {
                          "option": "--user",
                          "shortcut": "-u",
                          "description": "Username or UID (format: <name|uid>[:<group|gid>])",
                          "value": "string"
                      },
                      {
                          "option": "--userns",
                          "description": "User namespace to use",
                          "value": "string"
                      },
                      {
                          "option": "--uts",
                          "description": "UTS namespace to use",
                          "value": "string"
                      },
                      {
                          "option": "--volume",
                          "shortcut": "-v",
                          "description": "Bind mount a volume",
                          "value": "list"
                      },
                      {
                          "option": "--volume-driver",
                          "description": "Optional volume driver for the container",
                          "value": "string"
                      },
                      {
                          "option": "--volumes-from",
                          "description": "Mount volumes from the specified container(s)",
                          "value": "list"
                      },
                      {
                          "option": "--workdir",
                          "shortcut": "-w",
                          "description": "Working directory inside the container",
                          "value": "string"
                      }
                  ]
              },
              {
                  "name": "docker container start",
                  "description": "Start one or more stopped containers",
                  "usage": "docker container start [OPTIONS] CONTAINER [CONTAINER...]",
                  "subcommands": [
                      {
                          "name": "docker container start container",
                          "description": "Start one or more stopped containers",
                          "usage": "docker container start [OPTIONS] CONTAINER [CONTAINER...]",
                          "options": [
                              {
                                  "option": "--attach",
                                  "shortcut": "-a",
                                  "description": "Attach STDOUT/STDERR and forward signals"
                              },
                              {
                                  "option": "--detach-keys",
                                  "description": "Override the key sequence for detaching a container",
                                  "value": "string"
                              },
                              {
                                  "option": "--interactive",
                                  "shortcut": "-i",
                                  "description": "Attach container's STDIN"
                              }
                          ],
                          "subcommands": []
                      }
                  ],
                  "options": [
                      {
                          "option": "--attach",
                          "shortcut": "-a",
                          "description": "Attach STDOUT/STDERR and forward signals"
                      },
                      {
                          "option": "--detach-keys",
                          "description": "Override the key sequence for detaching a container",
                          "value": "string"
                      },
                      {
                          "option": "--interactive",
                          "shortcut": "-i",
                          "description": "Attach container's STDIN"
                      }
                  ]
              },
              {
                  "name": "docker container stats",
                  "description": "Display a live stream of container(s) resource usage statistics",
                  "usage": "docker container stats [OPTIONS] [CONTAINER...]",
                  "options": [
                      {
                          "option": "--all",
                          "shortcut": "-a",
                          "description": "Show all containers (default shows just running)"
                      },
                      {
                          "option": "--format",
                          "description": "Format output using a custom template:\n'table': Print output in table format with column headers (default)\n'table TEMPLATE': Print output in table format using the given Go template\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--no-stream",
                          "description": "Disable streaming stats and only pull the first result"
                      },
                      {
                          "option": "--no-trunc",
                          "description": "Do not truncate output"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container stop",
                  "description": "Stop one or more running containers",
                  "usage": "docker container stop [OPTIONS] CONTAINER [CONTAINER...]",
                  "options": [
                      {
                          "option": "--signal",
                          "shortcut": "-s",
                          "description": "Signal to send to the container",
                          "value": "string"
                      },
                      {
                          "option": "--time",
                          "shortcut": "-t",
                          "description": "Seconds to wait before killing the container",
                          "value": "int"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container top",
                  "description": "Display the running processes of a container",
                  "usage": "docker container top CONTAINER [ps OPTIONS]",
                  "subcommands": [],
                  "options": []
              },
              {
                  "name": "docker container unpause",
                  "description": "Unpause all processes within one or more containers",
                  "usage": "docker container unpause CONTAINER [CONTAINER...]",
                  "subcommands": [],
                  "options": []
              },
              {
                  "name": "docker container update",
                  "description": "Update configuration of one or more containers",
                  "usage": "docker container update [OPTIONS] CONTAINER [CONTAINER...]",
                  "options": [
                      {
                          "option": "--blkio-weight",
                          "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable",
                          "value": "uint16",
                          "default": "0"
                      },
                      {
                          "option": "--cpu-period",
                          "description": "Limit CPU CFS (Completely Fair Scheduler) period",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-quota",
                          "description": "Limit CPU CFS (Completely Fair Scheduler) quota",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-rt-period",
                          "description": "Limit the CPU real-time period in microseconds",
                          "value": "int"
                      },
                      {
                          "option": "--cpu-rt-runtime",
                          "description": "Limit the CPU real-time runtime in microseconds",
                          "value": "int"
                      },
                      {
                          "option": "--cpus",
                          "description": "Number of CPUs",
                          "value": "decimal"
                      },
                      {
                          "option": "--cpuset-cpus",
                          "description": "CPUs in which to allow execution (0-3, 0,1)",
                          "value": "string"
                      },
                      {
                          "option": "--cpuset-mems",
                          "description": "MEMs in which to allow execution (0-3, 0,1)",
                          "value": "string"
                      },
                      {
                          "option": "--memory-reservation",
                          "description": "Memory soft limit",
                          "value": "bytes"
                      },
                      {
                          "option": "--memory-swap",
                          "description": "Swap limit equal to memory plus swap: -1 to enable unlimited swap",
                          "value": "bytes"
                      },
                      {
                          "option": "--pids-limit",
                          "description": "Tune container pids limit (set -1 for unlimited)",
                          "value": "int"
                      },
                      {
                          "option": "--restart",
                          "description": "Restart policy to apply when a container exits",
                          "value": "string"
                      },
                      {
                          "option": "-c",
                          "shortcut": "--cpu-shares",
                          "description": "CPU shares (relative weight)",
                          "value": "int"
                      },
                      {
                          "option": "-m",
                          "shortcut": "--memory",
                          "description": "Memory limit",
                          "value": "bytes"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker container wait",
                  "description": "Block until one or more containers stop, then print their exit codes",
                  "usage": "docker container wait CONTAINER [CONTAINER...]",
                  "subcommands": [],
                  "options": []
              }
          ]
      },
      {
          "name": "docker context",
          "description": "Manage contexts",
          "usage": "docker context COMMAND",
          "subcommands": [
              {
                  "name": "docker context create",
                  "description": "Create a context",
                  "usage": "docker context create [OPTIONS] CONTEXT",
                  "options": [
                      {
                          "option": "--description",
                          "description": "Description of the context",
                          "value": "string"
                      },
                      {
                          "option": "--docker",
                          "description": "set the docker endpoint",
                          "value": "stringToString",
                          "default": "[]"
                      },
                      {
                          "option": "--from",
                          "description": "create context from a named context",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker context export",
                  "description": "Export a context to a tar archive FILE or a tar stream on STDOUT.",
                  "usage": "docker context export [OPTIONS] CONTEXT [FILE|-]",
                  "subcommands": [],
                  "options": []
              },
              {
                  "name": "docker context import",
                  "description": "Manage Docker contexts",
                  "usage": "docker context import CONTEXT FILE|-",
                  "subcommands": [],
                  "options": []
              },
              {
                  "name": "docker context inspect",
                  "description": "Display detailed information on one or more contexts",
                  "usage": "docker context inspect [OPTIONS] [CONTEXT] [CONTEXT...]",
                  "options": [
                      {
                          "option": "--format",
                          "shortcut": "-f",
                          "description": "Format output using a custom template",
                          "value": "string",
                          "tags": [
                              "'json': Print in JSON format",
                              "'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates"
                          ]
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker context ls",
                  "description": "List contexts",
                  "usage": "docker context ls [OPTIONS]",
                  "options": [
                      {
                          "option": "--format",
                          "description": "Format output using a custom template:\n'table': Print output in table format with column headers (default)\n'table TEMPLATE': Print output in table format using the given Go template\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string",
                          "default": "table"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Only show context names"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker context rm",
                  "description": "Remove one or more contexts",
                  "usage": "docker context rm CONTEXT [CONTEXT...]",
                  "subcommands": [],
                  "options": [
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Force the removal of a context in use"
                      }
                  ]
              },
              {
                  "name": "docker context show",
                  "description": "Print the name of the current context",
                  "usage": "docker context show",
                  "subcommands": [],
                  "options": []
              },
              {
                  "name": "docker context update",
                  "description": "Update a context",
                  "usage": "docker context update [OPTIONS] CONTEXT",
                  "options": [
                      {
                          "description": "Description of the context",
                          "option": "--description",
                          "value": "string"
                      },
                      {
                          "description": "set the docker endpoint",
                          "option": "--docker",
                          "value": "stringToString",
                          "default": "[]"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker context use",
                  "description": "Set the current docker context",
                  "usage": "docker context use CONTEXT",
                  "subcommands": [],
                  "options": []
              }
          ]
      },
      {
          "name": "docker cp",
          "description": "Copy files/folders between a container and the local filesystem",
          "usage": "docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH|-\n       docker cp [OPTIONS] SRC_PATH|- CONTAINER:DEST_PATH",
          "options": [
              {
                  "option": "--archive",
                  "shortcut": "-a",
                  "description": "Archive mode (copy all uid/gid information)"
              },
              {
                  "option": "--follow-link",
                  "shortcut": "-L",
                  "description": "Always follow symbol link in SRC_PATH"
              },
              {
                  "option": "--quiet",
                  "shortcut": "-q",
                  "description": "Suppress progress output during copy. Progress output is automatically suppressed if no terminal is attached"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker create",
          "description": "Create a new container",
          "usage": "docker create [OPTIONS] IMAGE [COMMAND] [ARG...]",
          "options": [
              {
                  "option": "--add-host",
                  "description": "Add a custom host-to-IP mapping (host:ip)",
                  "value": "list"
              },
              {
                  "option": "--annotation",
                  "description": "Add an annotation to the container (passed through to the OCI runtime)",
                  "value": "map",
                  "default": "map[]"
              },
              {
                  "option": "--attach",
                  "shortcut": "-a",
                  "description": "Attach to STDIN, STDOUT or STDERR",
                  "value": "list"
              },
              {
                  "option": "--blkio-weight",
                  "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable",
                  "value": "uint16",
                  "default": "0"
              },
              {
                  "option": "--blkio-weight-device",
                  "description": "Block IO weight (relative device weight)",
                  "value": "list",
                  "default": "[]"
              },
              {
                  "option": "--cap-add",
                  "description": "Add Linux capabilities",
                  "value": "list"
              },
              {
                  "option": "--cap-drop",
                  "description": "Drop Linux capabilities",
                  "value": "list"
              },
              {
                  "option": "--cgroup-parent",
                  "description": "Optional parent cgroup for the container",
                  "value": "string"
              },
              {
                  "option": "--cgroupns",
                  "description": "Cgroup namespace to use (host|private)\n'host':    Run the container in the Docker host's cgroup namespace\n'private': Run the container in its own private cgroup namespace\n'':        Use the cgroup namespace as configured by the default-cgroupns-mode option on the daemon",
                  "value": "string",
                  "default": ""
              },
              {
                  "option": "--cidfile",
                  "description": "Write the container ID to the file",
                  "value": "string"
              },
              {
                  "option": "--cpu-period",
                  "description": "Limit CPU CFS (Completely Fair Scheduler) period",
                  "value": "int"
              },
              {
                  "option": "--cpu-quota",
                  "description": "Limit CPU CFS (Completely Fair Scheduler) quota",
                  "value": "int"
              },
              {
                  "option": "--cpu-rt-period",
                  "description": "Limit CPU real-time period in microseconds",
                  "value": "int"
              },
              {
                  "option": "--cpu-rt-runtime",
                  "description": "Limit CPU real-time runtime in microseconds",
                  "value": "int"
              },
              {
                  "option": "--cpu-shares",
                  "shortcut": "-c",
                  "description": "CPU shares (relative weight)",
                  "value": "int"
              },
              {
                  "option": "--cpus",
                  "description": "Number of CPUs",
                  "value": "decimal"
              },
              {
                  "option": "--cpuset-cpus",
                  "description": "CPUs in which to allow execution (0-3, 0,1)",
                  "value": "string"
              },
              {
                  "option": "--cpuset-mems",
                  "description": "MEMs in which to allow execution (0-3, 0,1)",
                  "value": "string"
              },
              {
                  "option": "--device",
                  "description": "Add a host device to the container",
                  "value": "list"
              },
              {
                  "option": "--device-cgroup-rule",
                  "description": "Add a rule to the cgroup allowed devices list",
                  "value": "list"
              },
              {
                  "option": "--device-read-bps",
                  "description": "Limit read rate (bytes per second) from a device",
                  "value": "list",
                  "default": "[]"
              },
              {
                  "option": "--device-read-iops",
                  "description": "Limit read rate (IO per second) from a device",
                  "value": "list",
                  "default": "[]"
              },
              {
                  "option": "--device-write-bps",
                  "description": "Limit write rate (bytes per second) to a device",
                  "value": "list",
                  "default": "[]"
              },
              {
                  "option": "--device-write-iops",
                  "description": "Limit write rate (IO per second) to a device",
                  "value": "list",
                  "default": "[]"
              },
              {
                  "option": "--disable-content-trust",
                  "description": "Skip image verification",
                  "default": "true"
              },
              {
                  "option": "--dns",
                  "description": "Set custom DNS servers",
                  "value": "list"
              },
              {
                  "option": "--dns-option",
                  "description": "Set DNS options",
                  "value": "list"
              },
              {
                  "option": "--dns-search",
                  "description": "Set custom DNS search domains",
                  "value": "list"
              },
              {
                  "option": "--domainname",
                  "description": "Container NIS domain name",
                  "value": "string"
              },
              {
                  "option": "--entrypoint",
                  "description": "Overwrite the default ENTRYPOINT of the image",
                  "value": "string"
              },
              {
                  "option": "--env",
                  "shortcut": "-e",
                  "description": "Set environment variables",
                  "value": "list"
              },
              {
                  "option": "--env-file",
                  "description": "Read in a file of environment variables",
                  "value": "list"
              },
              {
                  "option": "--expose",
                  "description": "Expose a port or a range of ports",
                  "value": "list"
              },
              {
                  "option": "--gpus",
                  "description": "GPU devices to add to the container ('all' to pass all GPUs)",
                  "value": "gpu-request"
              },
              {
                  "option": "--group-add",
                  "description": "Add additional groups to join",
                  "value": "list"
              },
              {
                  "option": "--health-cmd",
                  "description": "Command to run to check health",
                  "value": "string"
              },
              {
                  "option": "--health-interval",
                  "description": "Time between running the check (ms|s|m|h)",
                  "value": "duration",
                  "default": "0s"
              },
              {
                  "option": "--health-retries",
                  "description": "Consecutive failures needed to report unhealthy",
                  "value": "int"
              },
              {
                  "option": "--health-start-interval",
                  "description": "Time between running the check during the start period (ms|s|m|h)",
                  "value": "duration",
                  "default": "0s"
              },
              {
                  "option": "--health-start-period",
                  "description": "Start period for the container to initialize before starting health-retries countdown (ms|s|m|h)",
                  "value": "duration",
                  "default": "0s"
              },
              {
                  "option": "--health-timeout",
                  "description": "Maximum time to allow one check to run (ms|s|m|h)",
                  "value": "duration",
                  "default": "0s"
              },
              {
                  "option": "--help",
                  "description": "Print usage"
              },
              {
                  "option": "--hostname",
                  "shortcut": "-h",
                  "description": "Container host name",
                  "value": "string"
              },
              {
                  "option": "--init",
                  "description": "Run an init inside the container that forwards signals and reaps processes"
              },
              {
                  "option": "--interactive",
                  "shortcut": "-i",
                  "description": "Keep STDIN open even if not attached"
              },
              {
                  "option": "--ip",
                  "description": "IPv4 address (e.g., 172.30.100.104)",
                  "value": "string"
              },
              {
                  "option": "--ip6",
                  "description": "IPv6 address (e.g., 2001:db8::33)",
                  "value": "string"
              },
              {
                  "option": "--ipc",
                  "description": "IPC mode to use",
                  "value": "string"
              },
              {
                  "option": "--isolation",
                  "description": "Container isolation technology",
                  "value": "string"
              },
              {
                  "option": "--kernel-memory",
                  "description": "Kernel memory limit",
                  "value": "bytes"
              },
              {
                  "option": "--label",
                  "shortcut": "-l",
                  "description": "Set meta data on a container",
                  "value": "list"
              },
              {
                  "option": "--label-file",
                  "description": "Read in a line delimited file of labels",
                  "value": "list"
              },
              {
                  "option": "--link",
                  "description": "Add link to another container",
                  "value": "list"
              },
              {
                  "option": "--link-local-ip",
                  "description": "Container IPv4/IPv6 link-local addresses",
                  "value": "list"
              },
              {
                  "option": "--log-driver",
                  "description": "Logging driver for the container",
                  "value": "string"
              },
              {
                  "option": "--log-opt",
                  "description": "Log driver options",
                  "value": "list"
              },
              {
                  "option": "--mac-address",
                  "description": "Container MAC address (e.g., 92:d0:c6:0a:29:33)",
                  "value": "string"
              },
              {
                  "option": "--memory",
                  "shortcut": "-m",
                  "description": "Memory limit",
                  "value": "bytes"
              },
              {
                  "option": "--memory-reservation",
                  "description": "Memory soft limit",
                  "value": "bytes"
              },
              {
                  "option": "--memory-swap",
                  "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
                  "value": "bytes"
              },
              {
                  "option": "--memory-swappiness",
                  "description": "Tune container memory swappiness (0 to 100)",
                  "value": "int",
                  "default": "-1"
              },
              {
                  "option": "--mount",
                  "description": "Attach a filesystem mount to the container",
                  "value": "mount"
              },
              {
                  "option": "--name",
                  "description": "Assign a name to the container",
                  "value": "string"
              },
              {
                  "option": "--network",
                  "description": "Connect a container to a network",
                  "value": "network"
              },
              {
                  "option": "--network-alias",
                  "description": "Add network-scoped alias for the container",
                  "value": "list"
              },
              {
                  "option": "--no-healthcheck",
                  "description": "Disable any container-specified HEALTHCHECK"
              },
              {
                  "option": "--oom-kill-disable",
                  "description": "Disable OOM Killer"
              },
              {
                  "option": "--oom-score-adj",
                  "description": "Tune host's OOM preferences (-1000 to 1000)",
                  "value": "int"
              },
              {
                  "option": "--pid",
                  "description": "PID namespace to use",
                  "value": "string"
              },
              {
                  "option": "--pids-limit",
                  "description": "Tune container pids limit (set -1 for unlimited)",
                  "value": "int"
              },
              {
                  "option": "--platform",
                  "description": "Set platform if server is multi-platform capable",
                  "value": "string"
              },
              {
                  "option": "--privileged",
                  "description": "Give extended privileges to this container"
              },
              {
                  "option": "--publish",
                  "shortcut": "-p",
                  "description": "Publish a container's port(s) to the host",
                  "value": "list"
              },
              {
                  "option": "--publish-all",
                  "shortcut": "-P",
                  "description": "Publish all exposed ports to random ports"
              },
              {
                  "option": "--pull",
                  "description": "Pull image before creating (\"always\", \"|missing\", \"never\")",
                  "value": "string",
                  "default": "missing"
              },
              {
                  "option": "--quiet",
                  "shortcut": "-q",
                  "description": "Suppress the pull output"
              },
              {
                  "option": "--read-only",
                  "description": "Mount the container's root filesystem as read only"
              },
              {
                  "option": "--restart",
                  "description": "Restart policy to apply when a container exits",
                  "value": "string",
                  "default": "no"
              },
              {
                  "option": "--rm",
                  "description": "Automatically remove the container and its associated anonymous volumes when it exits"
              },
              {
                  "option": "--runtime",
                  "description": "Runtime to use for this container",
                  "value": "string"
              },
              {
                  "option": "--security-opt",
                  "description": "Security Options",
                  "value": "list"
              },
              {
                  "option": "--shm-size",
                  "description": "Size of /dev/shm",
                  "value": "bytes"
              },
              {
                  "option": "--stop-signal",
                  "description": "Signal to stop the container",
                  "value": "string"
              },
              {
                  "option": "--stop-timeout",
                  "description": "Timeout (in seconds) to stop a container",
                  "value": "int"
              },
              {
                  "option": "--storage-opt",
                  "description": "Storage driver options for the container",
                  "value": "list"
              },
              {
                  "option": "--sysctl",
                  "description": "Sysctl options",
                  "value": "map",
                  "default": "map[]"
              },
              {
                  "option": "--tmpfs",
                  "description": "Mount a tmpfs directory",
                  "value": "list"
              },
              {
                  "option": "--tty",
                  "shortcut": "-t",
                  "description": "Allocate a pseudo-TTY"
              },
              {
                  "option": "--ulimit",
                  "description": "Ulimit options",
                  "value": "ulimit",
                  "default": "[]"
              },
              {
                  "option": "--user",
                  "shortcut": "-u",
                  "description": "Username or UID (format: <name|uid>[:<group|gid>])",
                  "value": "string"
              },
              {
                  "option": "--userns",
                  "description": "User namespace to use",
                  "value": "string"
              },
              {
                  "option": "--uts",
                  "description": "UTS namespace to use",
                  "value": "string"
              },
              {
                  "option": "--volume",
                  "shortcut": "-v",
                  "description": "Bind mount a volume",
                  "value": "list"
              },
              {
                  "option": "--volume-driver",
                  "description": "Optional volume driver for the container",
                  "value": "string"
              },
              {
                  "option": "--volumes-from",
                  "description": "Mount volumes from the specified container(s)",
                  "value": "list"
              },
              {
                  "option": "--workdir",
                  "shortcut": "-w",
                  "description": "Working directory inside the container",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker diff",
          "description": "Inspect changes to files or directories on a container's filesystem",
          "usage": "docker diff CONTAINER",
          "subcommands": [
              {
                  "name": "docker diff container diff",
                  "description": "Inspect changes to files or directories on a container's filesystem",
                  "usage": "docker diff CONTAINER",
                  "subcommands": [
                      {
                          "name": "docker diff container diff diff",
                          "description": "Inspect changes to files or directories on a container's filesystem",
                          "usage": "docker diff CONTAINER",
                          "subcommands": [],
                          "options": []
                      }
                  ],
                  "options": []
              }
          ],
          "options": []
      },
      {
          "name": "docker events",
          "description": "Get real time events from the server",
          "usage": "docker events [OPTIONS]",
          "options": [
              {
                  "option": "--filter",
                  "shortcut": "-f",
                  "description": "Filter output based on conditions provided",
                  "value": "filter"
              },
              {
                  "option": "--format",
                  "description": "Format output using a custom template: 'json': Print in JSON format 'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                  "value": "string"
              },
              {
                  "option": "--since",
                  "description": "Show all events created since timestamp",
                  "value": "string"
              },
              {
                  "option": "--until",
                  "description": "Stream events until this timestamp",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "description": "Execute a command in a running container",
          "name": "docker exec",
          "subcommands": [],
          "options": [
              {
                  "description": "Detached mode: run command in the background",
                  "option": "--detach",
                  "shortcut": "-d"
              },
              {
                  "description": "Override the key sequence for detaching a container",
                  "option": "--detach-keys",
                  "value": "string"
              },
              {
                  "description": "Set environment variables",
                  "option": "--env",
                  "shortcut": "-e",
                  "value": "list"
              },
              {
                  "description": "Read in a file of environment variables",
                  "option": "--env-file",
                  "value": "list"
              },
              {
                  "description": "Keep STDIN open even if not attached",
                  "option": "--interactive",
                  "shortcut": "-i"
              },
              {
                  "description": "Give extended privileges to the command",
                  "option": "--privileged"
              },
              {
                  "description": "Allocate a pseudo-TTY",
                  "option": "--tty",
                  "shortcut": "-t"
              },
              {
                  "description": "Username or UID (format: \"<name|uid>[:<group|gid>]\")",
                  "option": "--user",
                  "shortcut": "-u",
                  "value": "string"
              },
              {
                  "description": "Working directory inside the container",
                  "option": "--workdir",
                  "shortcut": "-w",
                  "value": "string"
              }
          ],
          "usage": "docker exec [OPTIONS] CONTAINER COMMAND [ARG...]"
      },
      {
          "name": "docker export",
          "description": "Export a container's filesystem as a tar archive",
          "usage": "docker export [OPTIONS] CONTAINER",
          "options": [
              {
                  "option": "--output",
                  "shortcut": "-o",
                  "description": "Write to a file, instead of STDOUT",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker history",
          "description": "Show the history of an image",
          "usage": "docker history [OPTIONS] IMAGE",
          "options": [
              {
                  "option": "--format",
                  "description": "Format output using a custom template: 'table': Print output in table format with column headers (default) 'table TEMPLATE': Print output in table format using the given Go template 'json': Print in JSON format 'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                  "value": "string"
              },
              {
                  "option": "--human",
                  "shortcut": "-H",
                  "description": "Print sizes and dates in human readable format",
                  "default": "true"
              },
              {
                  "option": "--no-trunc",
                  "description": "Don't truncate output"
              },
              {
                  "option": "--quiet",
                  "shortcut": "-q",
                  "description": "Only show image IDs"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker image",
          "description": "Manage images",
          "usage": "docker image COMMAND",
          "subcommands": [
              {
                  "name": "docker image build",
                  "description": "Start a build",
                  "usage": "docker buildx build [OPTIONS] PATH | URL | -",
                  "options": [
                      {
                          "option": "--add-host",
                          "description": "Add a custom host-to-IP mapping (format: \"host:ip\")",
                          "value": "strings"
                      },
                      {
                          "option": "--allow",
                          "description": "Allow extra privileged entitlement (e.g., \"network.host\", \"security.insecure\")",
                          "value": "strings"
                      },
                      {
                          "option": "--annotation",
                          "description": "Add annotation to the image",
                          "value": "stringArray"
                      },
                      {
                          "option": "--attest",
                          "description": "Attestation parameters (format: \"type=sbom,generator=image\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--build-arg",
                          "description": "Set build-time variables",
                          "value": "stringArray"
                      },
                      {
                          "option": "--build-context",
                          "description": "Additional build contexts (e.g., name=path)",
                          "value": "stringArray"
                      },
                      {
                          "option": "--builder",
                          "description": "Override the configured builder instance",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--cache-from",
                          "description": "External cache sources (e.g., \"user/app:cache\", \"type=local,src=path/to/dir\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--cache-to",
                          "description": "Cache export destinations (e.g., \"user/app:cache\", \"type=local,dest=path/to/dir\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--call",
                          "description": "Set method for evaluating build (\"check\", \"outline\", \"targets\")",
                          "value": "string",
                          "default": "build"
                      },
                      {
                          "option": "--cgroup-parent",
                          "description": "Set the parent cgroup for the \"RUN\" instructions during build",
                          "value": "string"
                      },
                      {
                          "option": "--check",
                          "description": "Shorthand for \"--call=check\""
                      },
                      {
                          "option": "-D",
                          "shortcut": "--debug",
                          "description": "Enable debug logging"
                      },
                      {
                          "option": "-f",
                          "shortcut": "--file",
                          "description": "Name of the Dockerfile",
                          "value": "string",
                          "default": "PATH/Dockerfile"
                      },
                      {
                          "option": "--iidfile",
                          "description": "Write the image ID to a file",
                          "value": "string"
                      },
                      {
                          "option": "--label",
                          "description": "Set metadata for an image",
                          "value": "stringArray"
                      },
                      {
                          "option": "--load",
                          "description": "Shorthand for \"--output=type=docker\""
                      },
                      {
                          "option": "--metadata-file",
                          "description": "Write build result metadata to a file",
                          "value": "string"
                      },
                      {
                          "option": "--network",
                          "description": "Set the networking mode for the \"RUN\" instructions during build",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--no-cache",
                          "description": "Do not use cache when building the image"
                      },
                      {
                          "option": "--no-cache-filter",
                          "description": "Do not cache specified stages",
                          "value": "stringArray"
                      },
                      {
                          "option": "-o",
                          "shortcut": "--output",
                          "description": "Output destination (format: \"type=local,dest=path\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--platform",
                          "description": "Set target platform for build",
                          "value": "stringArray"
                      },
                      {
                          "option": "--progress",
                          "description": "Set type of progress output (\"auto\", \"plain\", \"tty\", \"rawjson\"). Use plain to show container output",
                          "value": "string",
                          "default": "auto"
                      },
                      {
                          "option": "--provenance",
                          "description": "Shorthand for \"--attest=type=provenance\""
                      },
                      {
                          "option": "--pull",
                          "description": "Always attempt to pull all referenced images"
                      },
                      {
                          "option": "--push",
                          "description": "Shorthand for \"--output=type=registry\""
                      },
                      {
                          "option": "-q",
                          "shortcut": "--quiet",
                          "description": "Suppress the build output and print image ID on success"
                      },
                      {
                          "option": "--sbom",
                          "description": "Shorthand for \"--attest=type=sbom\""
                      },
                      {
                          "option": "--secret",
                          "description": "Secret to expose to the build (format: \"id=mysecret[,src=/local/secret]\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--shm-size",
                          "description": "Shared memory size for build containers",
                          "value": "bytes"
                      },
                      {
                          "option": "--ssh",
                          "description": "SSH agent socket or keys to expose to the build (format: \"default|<id>[=<socket>|<key>[,<key>]]\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "-t",
                          "shortcut": "--tag",
                          "description": "Name and optionally a tag (format: \"name:tag\")",
                          "value": "stringArray"
                      },
                      {
                          "option": "--target",
                          "description": "Set the target build stage to build",
                          "value": "string"
                      },
                      {
                          "option": "--ulimit",
                          "description": "Ulimit options",
                          "value": "ulimit",
                          "default": "[]"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker image history",
                  "description": "Show the history of an image",
                  "usage": "docker image history [OPTIONS] IMAGE",
                  "options": [
                      {
                          "option": "--format",
                          "description": "Format output using a custom template:\n'table':            Print output in table format with column headers\n(default)\n'table TEMPLATE':   Print output in table format using the given Go template\n'json':             Print in JSON format\n'TEMPLATE':         Print output using the given Go template.\nRefer to https://docs.docker.com/go/formatting/ for more information about\nformatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--human",
                          "shortcut": "-H",
                          "description": "Print sizes and dates in human readable format",
                          "default": "true"
                      },
                      {
                          "option": "--no-trunc",
                          "description": "Don't truncate output"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Only show image IDs"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker image import",
                  "description": "Import the contents from a tarball to create a filesystem image",
                  "usage": "docker image import [OPTIONS] file|URL|- [REPOSITORY[:TAG]]",
                  "options": [
                      {
                          "option": "--change",
                          "shortcut": "-c",
                          "description": "Apply Dockerfile instruction to the created image",
                          "value": "list"
                      },
                      {
                          "option": "--message",
                          "shortcut": "-m",
                          "description": "Set commit message for imported image",
                          "value": "string"
                      },
                      {
                          "option": "--platform",
                          "description": "Set platform if server is multi-platform capable",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "description": "Display detailed information on one or more images",
                  "usage": "docker image inspect [OPTIONS] IMAGE [IMAGE...]",
                  "options": [
                      {
                          "option": "--format",
                          "shortcut": "-f",
                          "description": "Format output using a custom template",
                          "value": "string",
                          "tags": [
                              "'json': Print in JSON format",
                              "'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates"
                          ]
                      }
                  ],
                  "name": "docker image inspect",
                  "subcommands": []
              },
              {
                  "name": "docker image load",
                  "description": "Load an image from a tar archive or STDIN",
                  "usage": "docker image load [OPTIONS]",
                  "options": [
                      {
                          "option": "--input",
                          "shortcut": "-i",
                          "description": "Read from tar archive file, instead of STDIN",
                          "value": "string"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Suppress the load output"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker image ls",
                  "description": "List images",
                  "usage": "docker image ls [OPTIONS] [REPOSITORY[:TAG]]",
                  "options": [
                      {
                          "option": "--all",
                          "shortcut": "-a",
                          "description": "Show all images (default hides intermediate images)"
                      },
                      {
                          "option": "--digests",
                          "description": "Show digests"
                      },
                      {
                          "option": "--filter",
                          "shortcut": "-f",
                          "description": "Filter output based on conditions provided",
                          "value": "filter"
                      },
                      {
                          "option": "--format",
                          "description": "Format output using a custom template: 'table': Print output in table format with column headers (default) 'table TEMPLATE': Print output in table format using the given Go template 'json': Print in JSON format 'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--no-trunc",
                          "description": "Don't truncate output"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Only show image IDs"
                      },
                      {
                          "option": "--tree",
                          "description": "List multi-platform images as a tree (EXPERIMENTAL)"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker image prune",
                  "description": "Remove unused images",
                  "usage": "docker image prune [OPTIONS]",
                  "options": [
                      {
                          "option": "--all",
                          "shortcut": "-a",
                          "description": "Remove all unused images, not just dangling ones"
                      },
                      {
                          "option": "--filter",
                          "description": "Provide filter values (e.g. \"until=<timestamp>\")",
                          "value": "filter"
                      },
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Do not prompt for confirmation"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker image pull",
                  "description": "Download an image from a registry",
                  "usage": "docker image pull [OPTIONS] NAME[:TAG|@DIGEST]",
                  "options": [
                      {
                          "option": "--all-tags",
                          "shortcut": "-a",
                          "description": "Download all tagged images in the repository"
                      },
                      {
                          "option": "--disable-content-trust",
                          "description": "Skip image verification",
                          "default": "true"
                      },
                      {
                          "option": "--platform",
                          "description": "Set platform if server is multi-platform capable",
                          "value": "string"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Suppress verbose output"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "description": "Upload an image to a registry",
                  "name": "docker image push",
                  "usage": "docker image push [OPTIONS] NAME[:TAG]",
                  "aliases": [
                      "docker image push",
                      "docker push"
                  ],
                  "options": [
                      {
                          "option": "--all-tags",
                          "shortcut": "-a",
                          "description": "Push all tags of an image to the repository"
                      },
                      {
                          "option": "--disable-content-trust",
                          "description": "Skip image signing",
                          "default": "true"
                      },
                      {
                          "option": "--platform",
                          "description": "Push a platform-specific manifest as a single-platform image to the registry. Image index won't be pushed, meaning that other manifests, including attestations won't be preserved. 'os[/arch[/variant]]': Explicit platform (eg. linux/amd64)",
                          "value": "string"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Suppress verbose output"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker image rm",
                  "description": "Remove one or more images",
                  "usage": "docker image rm [OPTIONS] IMAGE [IMAGE...]",
                  "options": [
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Force removal of the image"
                      },
                      {
                          "option": "--no-prune",
                          "description": "Do not delete untagged parents"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker image save",
                  "description": "Save one or more images to a tar archive (streamed to STDOUT by default)",
                  "usage": "docker image save [OPTIONS] IMAGE [IMAGE...]",
                  "options": [
                      {
                          "option": "--output",
                          "shortcut": "-o",
                          "description": "Write to a file, instead of STDOUT",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker image tag",
                  "description": "Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE",
                  "usage": "docker image tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]",
                  "subcommands": [],
                  "options": []
              }
          ]
      },
      {
          "name": "docker images",
          "description": "List images",
          "usage": "docker images [OPTIONS] [REPOSITORY[:TAG]]",
          "options": [
              {
                  "option": "--all",
                  "shortcut": "-a",
                  "description": "Show all images (default hides intermediate images)"
              },
              {
                  "option": "--digests",
                  "description": "Show digests"
              },
              {
                  "option": "--filter",
                  "shortcut": "-f",
                  "description": "Filter output based on conditions provided",
                  "value": "filter"
              },
              {
                  "option": "--format",
                  "description": "Format output using a custom template:\n'table': Print output in table format with column headers (default)\n'table TEMPLATE': Print output in table format using the given Go template\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template.\nRefer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                  "value": "string"
              },
              {
                  "option": "--no-trunc",
                  "description": "Don't truncate output"
              },
              {
                  "option": "--quiet",
                  "shortcut": "-q",
                  "description": "Only show image IDs"
              },
              {
                  "option": "--tree",
                  "description": "List multi-platform images as a tree (EXPERIMENTAL)"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker import",
          "description": "Import the contents from a tarball to create a filesystem image",
          "usage": "docker import [OPTIONS] file|URL|- [REPOSITORY[:TAG]]",
          "options": [
              {
                  "option": "--change",
                  "shortcut": "-c",
                  "description": "Apply Dockerfile instruction to the created image",
                  "value": "list"
              },
              {
                  "option": "--message",
                  "shortcut": "-m",
                  "description": "Set commit message for imported image",
                  "value": "string"
              },
              {
                  "option": "--platform",
                  "description": "Set platform if server is multi-platform capable",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker info",
          "description": "Display system-wide information",
          "usage": "docker info [OPTIONS]",
          "options": [
              {
                  "option": "--format",
                  "shortcut": "-f",
                  "description": "Format output using a custom template:\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template.\nRefer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker inspect",
          "description": "Return low-level information on Docker objects",
          "usage": "docker inspect [OPTIONS] NAME|ID [NAME|ID...]",
          "options": [
              {
                  "option": "--format",
                  "shortcut": "-f",
                  "description": "Format output using a custom template:\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template.\nRefer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                  "value": "string"
              },
              {
                  "option": "--size",
                  "shortcut": "-s",
                  "description": "Display total file sizes if the type is container"
              },
              {
                  "option": "--type",
                  "description": "Return JSON for specified type",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker kill",
          "description": "Kill one or more running containers",
          "usage": "docker kill [OPTIONS] CONTAINER [CONTAINER...]",
          "subcommands": [],
          "options": [
              {
                  "option": "--signal",
                  "shortcut": "-s",
                  "description": "Signal to send to the container",
                  "value": "string"
              }
          ]
      },
      {
          "name": "docker load",
          "description": "Load an image from a tar archive or STDIN",
          "usage": "docker load [OPTIONS]",
          "subcommands": [],
          "options": [
              {
                  "option": "--input",
                  "shortcut": "-i",
                  "description": "Read from tar archive file, instead of STDIN",
                  "value": "string"
              },
              {
                  "option": "--quiet",
                  "shortcut": "-q",
                  "description": "Suppress the load output"
              }
          ]
      },
      {
          "name": "docker login",
          "description": "Authenticate to a registry. Defaults to Docker Hub if no server is specified.",
          "usage": "docker login [OPTIONS] [SERVER]",
          "options": [
              {
                  "option": "--password",
                  "shortcut": "-p",
                  "description": "Password",
                  "value": "string"
              },
              {
                  "option": "--password-stdin",
                  "description": "Take the password from stdin"
              },
              {
                  "option": "--username",
                  "shortcut": "-u",
                  "description": "Username",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker logout",
          "description": "Log out from a registry.",
          "usage": "docker logout [SERVER]",
          "subcommands": [],
          "options": []
      },
      {
          "name": "docker logs",
          "description": "Fetch the logs of a container",
          "usage": "docker logs [OPTIONS] CONTAINER",
          "options": [
              {
                  "option": "--details",
                  "description": "Show extra details provided to logs"
              },
              {
                  "option": "--follow",
                  "shortcut": "-f",
                  "description": "Follow log output"
              },
              {
                  "option": "--since",
                  "description": "Show logs since timestamp (e.g. \"2013-01-02T13:23:37Z\") or relative (e.g. \"42m\" for 42 minutes)",
                  "value": "string"
              },
              {
                  "option": "--tail",
                  "shortcut": "-n",
                  "description": "Number of lines to show from the end of the logs",
                  "value": "string",
                  "default": "\"all\""
              },
              {
                  "option": "--timestamps",
                  "shortcut": "-t",
                  "description": "Show timestamps"
              },
              {
                  "option": "--until",
                  "description": "Show logs before a timestamp (e.g. \"2013-01-02T13:23:37Z\") or relative (e.g. \"42m\" for 42 minutes)",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker manifest",
          "description": "The docker manifest command has subcommands for managing image manifests and manifest lists. A manifest list allows you to use one name to refer to the same image built for multiple architectures.",
          "usage": "docker manifest COMMAND",
          "subcommands": [
              {
                  "name": "docker manifest annotate",
                  "description": "Add additional information to a local image manifest",
                  "usage": "docker manifest annotate [OPTIONS] MANIFEST_LIST MANIFEST",
                  "options": [
                      {
                          "option": "--arch",
                          "description": "Set architecture",
                          "value": "string"
                      },
                      {
                          "option": "--os",
                          "description": "Set operating system",
                          "value": "string"
                      },
                      {
                          "option": "--os-features",
                          "description": "Set operating system feature",
                          "value": "strings"
                      },
                      {
                          "option": "--os-version",
                          "description": "Set operating system version",
                          "value": "string"
                      },
                      {
                          "option": "--variant",
                          "description": "Set architecture variant",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker manifest create",
                  "description": "Create a local manifest list for annotating and pushing to a registry",
                  "usage": "docker manifest create MANIFEST_LIST MANIFEST [MANIFEST...]",
                  "options": [
                      {
                          "option": "--amend",
                          "shortcut": "-a",
                          "description": "Amend an existing manifest list"
                      },
                      {
                          "option": "--insecure",
                          "description": "Allow communication with an insecure registry"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker manifest inspect",
                  "description": "Display an image manifest, or manifest list",
                  "usage": "docker manifest inspect [OPTIONS] [MANIFEST_LIST] MANIFEST",
                  "options": [
                      {
                          "option": "--insecure",
                          "description": "Allow communication with an insecure registry"
                      },
                      {
                          "option": "--verbose",
                          "shortcut": "-v",
                          "description": "Output additional info including layers and platform"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker manifest push",
                  "description": "Push a manifest list to a repository",
                  "usage": "docker manifest push [OPTIONS] MANIFEST_LIST",
                  "options": [
                      {
                          "option": "--insecure",
                          "description": "Allow push to an insecure registry"
                      },
                      {
                          "option": "--purge",
                          "shortcut": "-p",
                          "description": "Remove the local manifest list after push"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker manifest rm",
                  "description": "Delete one or more manifest lists from local storage",
                  "usage": "docker manifest rm MANIFEST_LIST [MANIFEST_LIST...]",
                  "subcommands": [],
                  "options": []
              }
          ]
      },
      {
          "name": "docker network",
          "description": "Manage networks",
          "usage": "docker network COMMAND",
          "subcommands": [
              {
                  "name": "docker network connect",
                  "description": "Connect a container to a network",
                  "usage": "docker network connect [OPTIONS] NETWORK CONTAINER",
                  "options": [
                      {
                          "option": "--alias",
                          "description": "Add network-scoped alias for the container",
                          "value": "strings"
                      },
                      {
                          "option": "--driver-opt",
                          "description": "driver options for the network",
                          "value": "strings"
                      },
                      {
                          "option": "--ip",
                          "description": "IPv4 address (e.g., \"172.30.100.104\")",
                          "value": "string"
                      },
                      {
                          "option": "--ip6",
                          "description": "IPv6 address (e.g., \"2001:db8::33\")",
                          "value": "string"
                      },
                      {
                          "option": "--link",
                          "description": "Add link to another container",
                          "value": "list"
                      },
                      {
                          "option": "--link-local-ip",
                          "description": "Add a link-local address for the container",
                          "value": "strings"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker network create",
                  "description": "Create a network",
                  "usage": "docker network create [OPTIONS] NETWORK",
                  "options": [
                      {
                          "option": "--attachable",
                          "description": "Enable manual container attachment"
                      },
                      {
                          "option": "--aux-address",
                          "description": "Auxiliary IPv4 or IPv6 addresses used by Network driver",
                          "value": "map",
                          "default": "map[]"
                      },
                      {
                          "option": "--config-from",
                          "description": "The network from which to copy the configuration",
                          "value": "string"
                      },
                      {
                          "option": "--config-only",
                          "description": "Create a configuration only network"
                      },
                      {
                          "option": "--driver",
                          "shortcut": "-d",
                          "description": "Driver to manage the Network",
                          "value": "string",
                          "default": "bridge"
                      },
                      {
                          "option": "--gateway",
                          "description": "IPv4 or IPv6 Gateway for the master subnet",
                          "value": "strings"
                      },
                      {
                          "option": "--ingress",
                          "description": "Create swarm routing-mesh network"
                      },
                      {
                          "option": "--internal",
                          "description": "Restrict external access to the network"
                      },
                      {
                          "option": "--ip-range",
                          "description": "Allocate container ip from a sub-range",
                          "value": "strings"
                      },
                      {
                          "option": "--ipam-driver",
                          "description": "IP Address Management Driver",
                          "value": "string",
                          "default": "default"
                      },
                      {
                          "option": "--ipam-opt",
                          "description": "Set IPAM driver specific options",
                          "value": "map",
                          "default": "map[]"
                      },
                      {
                          "option": "--ipv6",
                          "description": "Enable or disable IPv6 networking"
                      },
                      {
                          "option": "--label",
                          "description": "Set metadata on a network",
                          "value": "list"
                      },
                      {
                          "option": "--opt",
                          "shortcut": "-o",
                          "description": "Set driver specific options",
                          "value": "map",
                          "default": "map[]"
                      },
                      {
                          "option": "--scope",
                          "description": "Control the network's scope",
                          "value": "string"
                      },
                      {
                          "option": "--subnet",
                          "description": "Subnet in CIDR format that represents a network segment",
                          "value": "strings"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker network disconnect",
                  "description": "Disconnect a container from a network",
                  "usage": "docker network disconnect [OPTIONS] NETWORK CONTAINER",
                  "options": [
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Force the container to disconnect from a network"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker network inspect",
                  "description": "Display detailed information on one or more networks",
                  "usage": "docker network inspect [OPTIONS] NETWORK [NETWORK...]",
                  "options": [
                      {
                          "option": "--format",
                          "shortcut": "-f",
                          "description": "Format output using a custom template.",
                          "value": "string",
                          "tags": [
                              "json",
                              "TEMPLATE"
                          ]
                      },
                      {
                          "option": "--verbose",
                          "shortcut": "-v",
                          "description": "Verbose output for diagnostics"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker network ls",
                  "description": "List networks",
                  "usage": "docker network ls [OPTIONS]",
                  "options": [
                      {
                          "option": "--filter",
                          "shortcut": "-f",
                          "description": "Provide filter values (e.g. \"driver=bridge\")",
                          "value": "filter"
                      },
                      {
                          "option": "--format",
                          "description": "Format output using a custom template:\n'table':            Print output in table format with column headers\n(default)\n'table TEMPLATE':   Print output in table format using the given Go template\n'json':             Print in JSON format\n'TEMPLATE':         Print output using the given Go template.\nRefer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--no-trunc",
                          "description": "Do not truncate the output"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Only display network IDs"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker network prune",
                  "description": "Remove all unused networks",
                  "usage": "docker network prune [OPTIONS]",
                  "options": [
                      {
                          "option": "--filter",
                          "description": "Provide filter values (e.g. \"until=<timestamp>\")",
                          "value": "filter"
                      },
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Do not prompt for confirmation"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker network rm",
                  "description": "Remove one or more networks",
                  "usage": "docker network rm NETWORK [NETWORK...]",
                  "options": [
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Do not error if the network does not exist"
                      }
                  ],
                  "subcommands": []
              }
          ],
          "options": []
      },
      {
          "name": "docker pause",
          "description": "Pause all processes within one or more containers",
          "usage": "docker pause CONTAINER [CONTAINER...]",
          "subcommands": []
      },
      {
          "name": "docker plugin",
          "description": "Manage plugins",
          "usage": "docker plugin COMMAND",
          "subcommands": [
              {
                  "name": "docker plugin create",
                  "description": "Create a plugin from a rootfs and configuration. Plugin data directory must contain config.json and rootfs directory.",
                  "usage": "docker plugin create [OPTIONS] PLUGIN PLUGIN-DATA-DIR",
                  "options": [
                      {
                          "option": "--compress",
                          "description": "Compress the context using gzip"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker plugin disable",
                  "description": "Disable a plugin",
                  "usage": "docker plugin disable [OPTIONS] PLUGIN",
                  "options": [
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Force the disable of an active plugin"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker plugin enable",
                  "description": "Enable a plugin",
                  "usage": "docker plugin enable [OPTIONS] PLUGIN",
                  "options": [
                      {
                          "option": "--timeout",
                          "description": "HTTP client timeout (in seconds)",
                          "value": "int",
                          "default": 30
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker plugin inspect",
                  "description": "Display detailed information on one or more plugins",
                  "usage": "docker plugin inspect [OPTIONS] PLUGIN [PLUGIN...]",
                  "options": [
                      {
                          "option": "--format",
                          "shortcut": "-f",
                          "description": "Format output using a custom template",
                          "value": "string",
                          "tags": [
                              "'json': Print in JSON format",
                              "'TEMPLATE': Print output using the given Go template",
                              "Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates"
                          ]
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker plugin install",
                  "description": "Install a plugin",
                  "usage": "docker plugin install [OPTIONS] PLUGIN [KEY=VALUE...]",
                  "options": [
                      {
                          "option": "--alias",
                          "description": "Local name for plugin",
                          "value": "string"
                      },
                      {
                          "option": "--disable",
                          "description": "Do not enable the plugin on install"
                      },
                      {
                          "option": "--disable-content-trust",
                          "description": "Skip image verification",
                          "default": "true"
                      },
                      {
                          "option": "--grant-all-permissions",
                          "description": "Grant all permissions necessary to run the plugin"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker plugin ls",
                  "description": "List plugins",
                  "usage": "docker plugin ls [OPTIONS]",
                  "subcommands": [],
                  "options": [
                      {
                          "option": "--filter",
                          "shortcut": "-f",
                          "description": "Provide filter values (e.g. \"enabled=true\")",
                          "value": "filter"
                      },
                      {
                          "option": "--format",
                          "description": "Format output using a custom template: 'table': Print output in table format with column headers (default) 'table TEMPLATE': Print output in table format using the given Go template 'json': Print in JSON format 'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--no-trunc",
                          "description": "Don't truncate output"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Only display plugin IDs"
                      }
                  ]
              },
              {
                  "name": "docker plugin push",
                  "description": "Push a plugin to a registry",
                  "usage": "docker plugin push [OPTIONS] PLUGIN[:TAG]",
                  "options": [
                      {
                          "option": "--disable-content-trust",
                          "description": "Skip image signing",
                          "default": "true"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker plugin rm",
                  "description": "Remove one or more plugins",
                  "usage": "docker plugin rm [OPTIONS] PLUGIN [PLUGIN...]",
                  "subcommands": [],
                  "options": [
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Force the removal of an active plugin"
                      }
                  ]
              },
              {
                  "name": "docker plugin set",
                  "description": "Change settings for a plugin",
                  "usage": "docker plugin set PLUGIN KEY=VALUE [KEY=VALUE...]",
                  "subcommands": []
              },
              {
                  "name": "docker plugin upgrade",
                  "description": "Upgrade an existing plugin",
                  "usage": "docker plugin upgrade [OPTIONS] PLUGIN [REMOTE]",
                  "options": [
                      {
                          "option": "--disable-content-trust",
                          "description": "Skip image verification",
                          "default": "true"
                      },
                      {
                          "option": "--grant-all-permissions",
                          "description": "Grant all permissions necessary to run the plugin"
                      },
                      {
                          "option": "--skip-remote-check",
                          "description": "Do not check if specified remote plugin matches existing plugin image"
                      }
                  ],
                  "subcommands": []
              }
          ]
      },
      {
          "name": "docker port",
          "description": "List port mappings or a specific mapping for the container",
          "usage": "docker port CONTAINER [PRIVATE_PORT[/PROTO]]",
          "subcommands": [],
          "options": []
      },
      {
          "name": "docker ps",
          "description": "List containers",
          "usage": "docker ps [OPTIONS]",
          "options": [
              {
                  "option": "--all",
                  "shortcut": "-a",
                  "description": "Show all containers (default shows just running)"
              },
              {
                  "option": "--filter",
                  "shortcut": "-f",
                  "description": "Filter output based on conditions provided",
                  "value": "filter"
              },
              {
                  "option": "--format",
                  "description": "Format output using a custom template:\n'table': Print output in table format with column headers (default)\n'table TEMPLATE': Print output in table format using the given Go template\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template.\nRefer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                  "value": "string"
              },
              {
                  "option": "--last",
                  "shortcut": "-n",
                  "description": "Show n last created containers (includes all states)",
                  "value": "int",
                  "default": "-1"
              },
              {
                  "option": "--latest",
                  "shortcut": "-l",
                  "description": "Show the latest created container (includes all states)"
              },
              {
                  "option": "--no-trunc",
                  "description": "Don't truncate output"
              },
              {
                  "option": "--quiet",
                  "shortcut": "-q",
                  "description": "Only display container IDs"
              },
              {
                  "option": "--size",
                  "shortcut": "-s",
                  "description": "Display total file sizes"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker pull",
          "description": "Download an image from a registry",
          "usage": "docker pull [OPTIONS] NAME[:TAG|@DIGEST]",
          "options": [
              {
                  "option": "--all-tags",
                  "shortcut": "-a",
                  "description": "Download all tagged images in the repository"
              },
              {
                  "option": "--disable-content-trust",
                  "description": "Skip image verification",
                  "default": "true"
              },
              {
                  "option": "--platform",
                  "description": "Set platform if server is multi-platform capable",
                  "value": "string"
              },
              {
                  "option": "--quiet",
                  "shortcut": "-q",
                  "description": "Suppress verbose output"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker push",
          "description": "Upload an image to a registry",
          "usage": "docker push [OPTIONS] NAME[:TAG]",
          "options": [
              {
                  "option": "--all-tags",
                  "shortcut": "-a",
                  "description": "Push all tags of an image to the repository"
              },
              {
                  "option": "--disable-content-trust",
                  "description": "Skip image signing",
                  "default": "true"
              },
              {
                  "option": "--platform",
                  "description": "Push a platform-specific manifest as a single-platform image to the registry. Image index won't be pushed, meaning that other manifests, including attestations won't be preserved. 'os[/arch[/variant]]': Explicit platform (eg. linux/amd64)",
                  "value": "string"
              },
              {
                  "option": "--quiet",
                  "shortcut": "-q",
                  "description": "Suppress verbose output"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker rename",
          "description": "Rename a container",
          "usage": "docker rename CONTAINER NEW_NAME",
          "subcommands": [],
          "options": []
      },
      {
          "name": "docker restart",
          "description": "Restart one or more containers",
          "usage": "docker restart [OPTIONS] CONTAINER [CONTAINER...]",
          "subcommands": [],
          "options": [
              {
                  "option": "--signal",
                  "shortcut": "-s",
                  "description": "Signal to send to the container",
                  "value": "string"
              },
              {
                  "option": "--time",
                  "shortcut": "-t",
                  "description": "Seconds to wait before killing the container",
                  "value": "int"
              }
          ]
      },
      {
          "name": "docker rm",
          "description": "Remove one or more containers",
          "usage": "docker rm [OPTIONS] CONTAINER [CONTAINER...]",
          "options": [
              {
                  "option": "--force",
                  "shortcut": "-f",
                  "description": "Force the removal of a running container (uses SIGKILL)"
              },
              {
                  "option": "--link",
                  "shortcut": "-l",
                  "description": "Remove the specified link"
              },
              {
                  "option": "--volumes",
                  "shortcut": "-v",
                  "description": "Remove anonymous volumes associated with the container"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker rmi",
          "description": "Remove one or more images",
          "usage": "docker rmi [OPTIONS] IMAGE [IMAGE...]",
          "subcommands": [],
          "options": [
              {
                  "option": "--force",
                  "shortcut": "-f",
                  "description": "Force removal of the image"
              },
              {
                  "option": "--no-prune",
                  "description": "Do not delete untagged parents"
              }
          ]
      },
      {
          "name": "docker run",
          "description": "Create and run a new container from an image",
          "usage": "docker run [OPTIONS] IMAGE [COMMAND] [ARG...]",
          "options": [
              {
                  "option": "--add-host",
                  "description": "Add a custom host-to-IP mapping (host:ip)",
                  "value": "list"
              },
              {
                  "option": "--annotation",
                  "description": "Add an annotation to the container (passed through to the OCI runtime)",
                  "value": "map",
                  "default": "map[]"
              },
              {
                  "option": "--attach",
                  "shortcut": "-a",
                  "description": "Attach to STDIN, STDOUT or STDERR",
                  "value": "list"
              },
              {
                  "option": "--blkio-weight",
                  "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable",
                  "value": "uint16",
                  "default": "0"
              },
              {
                  "option": "--blkio-weight-device",
                  "description": "Block IO weight (relative device weight)",
                  "value": "list",
                  "default": "[]"
              },
              {
                  "option": "--cap-add",
                  "description": "Add Linux capabilities",
                  "value": "list"
              },
              {
                  "option": "--cap-drop",
                  "description": "Drop Linux capabilities",
                  "value": "list"
              },
              {
                  "option": "--cgroup-parent",
                  "description": "Optional parent cgroup for the container",
                  "value": "string"
              },
              {
                  "option": "--cgroupns",
                  "description": "Cgroup namespace to use (host|private) 'host': Run the container in the Docker host's cgroup namespace 'private': Run the container in its own private cgroup namespace '': Use the cgroup namespace as configured by the default-cgroupns-mode option on the daemon",
                  "value": "string",
                  "default": ""
              },
              {
                  "option": "--cidfile",
                  "description": "Write the container ID to the file",
                  "value": "string"
              },
              {
                  "option": "--cpu-period",
                  "description": "Limit CPU CFS (Completely Fair Scheduler) period",
                  "value": "int"
              },
              {
                  "option": "--cpu-quota",
                  "description": "Limit CPU CFS (Completely Fair Scheduler) quota",
                  "value": "int"
              },
              {
                  "option": "--cpu-rt-period",
                  "description": "Limit CPU real-time period in microseconds",
                  "value": "int"
              },
              {
                  "option": "--cpu-rt-runtime",
                  "description": "Limit CPU real-time runtime in microseconds",
                  "value": "int"
              },
              {
                  "option": "--cpu-shares",
                  "shortcut": "-c",
                  "description": "CPU shares (relative weight)",
                  "value": "int"
              },
              {
                  "option": "--cpus",
                  "description": "Number of CPUs",
                  "value": "decimal"
              },
              {
                  "option": "--cpuset-cpus",
                  "description": "CPUs in which to allow execution (0-3, 0,1)",
                  "value": "string"
              },
              {
                  "option": "--cpuset-mems",
                  "description": "MEMs in which to allow execution (0-3, 0,1)",
                  "value": "string"
              },
              {
                  "option": "--detach",
                  "shortcut": "-d",
                  "description": "Run container in background and print container ID"
              },
              {
                  "option": "--detach-keys",
                  "description": "Override the key sequence for detaching a container",
                  "value": "string"
              },
              {
                  "option": "--device",
                  "description": "Add a host device to the container",
                  "value": "list"
              },
              {
                  "option": "--device-cgroup-rule",
                  "description": "Add a rule to the cgroup allowed devices list",
                  "value": "list"
              },
              {
                  "option": "--device-read-bps",
                  "description": "Limit read rate (bytes per second) from a device",
                  "value": "list",
                  "default": "[]"
              },
              {
                  "option": "--device-read-iops",
                  "description": "Limit read rate (IO per second) from a device",
                  "value": "list",
                  "default": "[]"
              },
              {
                  "option": "--device-write-bps",
                  "description": "Limit write rate (bytes per second) to a device",
                  "value": "list",
                  "default": "[]"
              },
              {
                  "option": "--device-write-iops",
                  "description": "Limit write rate (IO per second) to a device",
                  "value": "list",
                  "default": "[]"
              },
              {
                  "option": "--disable-content-trust",
                  "description": "Skip image verification",
                  "default": "true"
              },
              {
                  "option": "--dns",
                  "description": "Set custom DNS servers",
                  "value": "list"
              },
              {
                  "option": "--dns-option",
                  "description": "Set DNS options",
                  "value": "list"
              },
              {
                  "option": "--dns-search",
                  "description": "Set custom DNS search domains",
                  "value": "list"
              },
              {
                  "option": "--domainname",
                  "description": "Container NIS domain name",
                  "value": "string"
              },
              {
                  "option": "--entrypoint",
                  "description": "Overwrite the default ENTRYPOINT of the image",
                  "value": "string"
              },
              {
                  "option": "--env",
                  "shortcut": "-e",
                  "description": "Set environment variables",
                  "value": "list"
              },
              {
                  "option": "--env-file",
                  "description": "Read in a file of environment variables",
                  "value": "list"
              },
              {
                  "option": "--expose",
                  "description": "Expose a port or a range of ports",
                  "value": "list"
              },
              {
                  "option": "--gpus",
                  "description": "GPU devices to add to the container ('all' to pass all GPUs)",
                  "value": "gpu-request"
              },
              {
                  "option": "--group-add",
                  "description": "Add additional groups to join",
                  "value": "list"
              },
              {
                  "option": "--health-cmd",
                  "description": "Command to run to check health",
                  "value": "string"
              },
              {
                  "option": "--health-interval",
                  "description": "Time between running the check (ms|s|m|h)",
                  "value": "duration",
                  "default": "0s"
              },
              {
                  "option": "--health-retries",
                  "description": "Consecutive failures needed to report unhealthy",
                  "value": "int"
              },
              {
                  "option": "--health-start-interval",
                  "description": "Time between running the check during the start period (ms|s|m|h)",
                  "value": "duration",
                  "default": "0s"
              },
              {
                  "option": "--health-start-period",
                  "description": "Start period for the container to initialize before starting health-retries countdown (ms|s|m|h)",
                  "value": "duration",
                  "default": "0s"
              },
              {
                  "option": "--health-timeout",
                  "description": "Maximum time to allow one check to run (ms|s|m|h)",
                  "value": "duration",
                  "default": "0s"
              },
              {
                  "option": "--help",
                  "description": "Print usage"
              },
              {
                  "option": "--hostname",
                  "shortcut": "-h",
                  "description": "Container host name",
                  "value": "string"
              },
              {
                  "option": "--init",
                  "description": "Run an init inside the container that forwards signals and reaps processes"
              },
              {
                  "option": "--interactive",
                  "shortcut": "-i",
                  "description": "Keep STDIN open even if not attached"
              },
              {
                  "option": "--ip",
                  "description": "IPv4 address (e.g., 172.30.100.104)",
                  "value": "string"
              },
              {
                  "option": "--ip6",
                  "description": "IPv6 address (e.g., 2001:db8::33)",
                  "value": "string"
              },
              {
                  "option": "--ipc",
                  "description": "IPC mode to use",
                  "value": "string"
              },
              {
                  "option": "--isolation",
                  "description": "Container isolation technology",
                  "value": "string"
              },
              {
                  "option": "--kernel-memory",
                  "description": "Kernel memory limit",
                  "value": "bytes"
              },
              {
                  "option": "--label",
                  "shortcut": "-l",
                  "description": "Set meta data on a container",
                  "value": "list"
              },
              {
                  "option": "--label-file",
                  "description": "Read in a line delimited file of labels",
                  "value": "list"
              },
              {
                  "option": "--link",
                  "description": "Add link to another container",
                  "value": "list"
              },
              {
                  "option": "--link-local-ip",
                  "description": "Container IPv4/IPv6 link-local addresses",
                  "value": "list"
              },
              {
                  "option": "--log-driver",
                  "description": "Logging driver for the container",
                  "value": "string"
              },
              {
                  "option": "--log-opt",
                  "description": "Log driver options",
                  "value": "list"
              },
              {
                  "option": "--mac-address",
                  "description": "Container MAC address (e.g., 92:d0:c6:0a:29:33)",
                  "value": "string"
              },
              {
                  "option": "--memory",
                  "shortcut": "-m",
                  "description": "Memory limit",
                  "value": "bytes"
              },
              {
                  "option": "--memory-reservation",
                  "description": "Memory soft limit",
                  "value": "bytes"
              },
              {
                  "option": "--memory-swap",
                  "description": "Swap limit equal to memory plus swap: '-1' to enable unlimited swap",
                  "value": "bytes"
              },
              {
                  "option": "--memory-swappiness",
                  "description": "Tune container memory swappiness (0 to 100)",
                  "value": "int",
                  "default": "-1"
              },
              {
                  "option": "--mount",
                  "description": "Attach a filesystem mount to the container",
                  "value": "mount"
              },
              {
                  "option": "--name",
                  "description": "Assign a name to the container",
                  "value": "string"
              },
              {
                  "option": "--network",
                  "description": "Connect a container to a network",
                  "value": "network"
              },
              {
                  "option": "--network-alias",
                  "description": "Add network-scoped alias for the container",
                  "value": "list"
              },
              {
                  "option": "--no-healthcheck",
                  "description": "Disable any container-specified HEALTHCHECK"
              },
              {
                  "option": "--oom-kill-disable",
                  "description": "Disable OOM Killer"
              },
              {
                  "option": "--oom-score-adj",
                  "description": "Tune host's OOM preferences (-1000 to 1000)",
                  "value": "int"
              },
              {
                  "option": "--pid",
                  "description": "PID namespace to use",
                  "value": "string"
              },
              {
                  "option": "--pids-limit",
                  "description": "Tune container pids limit (set -1 for unlimited)",
                  "value": "int"
              },
              {
                  "option": "--platform",
                  "description": "Set platform if server is multi-platform capable",
                  "value": "string"
              },
              {
                  "option": "--privileged",
                  "description": "Give extended privileges to this container"
              },
              {
                  "option": "--publish",
                  "shortcut": "-p",
                  "description": "Publish a container's port(s) to the host",
                  "value": "list"
              },
              {
                  "option": "--publish-all",
                  "shortcut": "-P",
                  "description": "Publish all exposed ports to random ports"
              },
              {
                  "option": "--pull",
                  "description": "Pull image before running (\"always\", \"missing\", \"never\")",
                  "value": "string",
                  "default": "\"missing\""
              },
              {
                  "option": "--quiet",
                  "shortcut": "-q",
                  "description": "Suppress the pull output"
              },
              {
                  "option": "--read-only",
                  "description": "Mount the container's root filesystem as read only"
              },
              {
                  "option": "--restart",
                  "description": "Restart policy to apply when a container exits",
                  "value": "string",
                  "default": "\"no\""
              },
              {
                  "option": "--rm",
                  "description": "Automatically remove the container and its associated anonymous volumes when it exits"
              },
              {
                  "option": "--runtime",
                  "description": "Runtime to use for this container",
                  "value": "string"
              },
              {
                  "option": "--security-opt",
                  "description": "Security Options",
                  "value": "list"
              },
              {
                  "option": "--shm-size",
                  "description": "Size of /dev/shm",
                  "value": "bytes"
              },
              {
                  "option": "--sig-proxy",
                  "description": "Proxy received signals to the process",
                  "default": "true"
              },
              {
                  "option": "--stop-signal",
                  "description": "Signal to stop the container",
                  "value": "string"
              },
              {
                  "option": "--stop-timeout",
                  "description": "Timeout (in seconds) to stop a container",
                  "value": "int"
              },
              {
                  "option": "--storage-opt",
                  "description": "Storage driver options for the container",
                  "value": "list"
              },
              {
                  "option": "--sysctl",
                  "description": "Sysctl options",
                  "value": "map",
                  "default": "map[]"
              },
              {
                  "option": "--tmpfs",
                  "description": "Mount a tmpfs directory",
                  "value": "list"
              },
              {
                  "option": "--tty",
                  "shortcut": "-t",
                  "description": "Allocate a pseudo-TTY"
              },
              {
                  "option": "--ulimit",
                  "description": "Ulimit options",
                  "value": "ulimit",
                  "default": "[]"
              },
              {
                  "option": "--user",
                  "shortcut": "-u",
                  "description": "Username or UID (format: <name|uid>[:<group|gid>])",
                  "value": "string"
              },
              {
                  "option": "--userns",
                  "description": "User namespace to use",
                  "value": "string"
              },
              {
                  "option": "--uts",
                  "description": "UTS namespace to use",
                  "value": "string"
              },
              {
                  "option": "--volume",
                  "shortcut": "-v",
                  "description": "Bind mount a volume",
                  "value": "list"
              },
              {
                  "option": "--volume-driver",
                  "description": "Optional volume driver for the container",
                  "value": "string"
              },
              {
                  "option": "--volumes-from",
                  "description": "Mount volumes from the specified container(s)",
                  "value": "list"
              },
              {
                  "option": "--workdir",
                  "shortcut": "-w",
                  "description": "Working directory inside the container",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker save",
          "description": "Save one or more images to a tar archive (streamed to STDOUT by default)",
          "usage": "docker save [OPTIONS] IMAGE [IMAGE...]",
          "options": [
              {
                  "option": "--output",
                  "shortcut": "-o",
                  "description": "Write to a file, instead of STDOUT",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker search",
          "description": "Search Docker Hub for images",
          "usage": "docker search [OPTIONS] TERM",
          "options": [
              {
                  "option": "--filter",
                  "shortcut": "-f",
                  "description": "Filter output based on conditions provided",
                  "value": "filter"
              },
              {
                  "option": "--format",
                  "description": "Pretty-print search using a Go template",
                  "value": "string"
              },
              {
                  "option": "--limit",
                  "description": "Max number of search results",
                  "value": "int"
              },
              {
                  "option": "--no-trunc",
                  "description": "Don't truncate output"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker start",
          "description": "Start one or more stopped containers",
          "usage": "docker start [OPTIONS] CONTAINER [CONTAINER...]",
          "options": [
              {
                  "option": "--attach",
                  "shortcut": "-a",
                  "description": "Attach STDOUT/STDERR and forward signals"
              },
              {
                  "option": "--detach-keys",
                  "description": "Override the key sequence for detaching a container",
                  "value": "string"
              },
              {
                  "option": "--interactive",
                  "shortcut": "-i",
                  "description": "Attach container's STDIN"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker stats",
          "description": "Display a live stream of container(s) resource usage statistics",
          "usage": "docker stats [OPTIONS] [CONTAINER...]",
          "options": [
              {
                  "option": "--all",
                  "shortcut": "-a",
                  "description": "Show all containers (default shows just running)"
              },
              {
                  "option": "--format",
                  "description": "Format output using a custom template:\n'table': Print output in table format with column headers\n(default)\n'table TEMPLATE': Print output in table format using the given Go template\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                  "value": "string"
              },
              {
                  "option": "--no-stream",
                  "description": "Disable streaming stats and only pull the first result"
              },
              {
                  "option": "--no-trunc",
                  "description": "Do not truncate output"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker stop",
          "description": "Stop one or more running containers",
          "usage": "docker stop [OPTIONS] CONTAINER [CONTAINER...]",
          "options": [
              {
                  "option": "--signal",
                  "shortcut": "-s",
                  "description": "Signal to send to the container",
                  "value": "string"
              },
              {
                  "option": "--time",
                  "shortcut": "-t",
                  "description": "Seconds to wait before killing the container",
                  "value": "int"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker swarm",
          "description": "Manage Swarm",
          "usage": "docker swarm COMMAND",
          "subcommands": [
              {
                  "name": "docker swarm init",
                  "description": "Initialize a swarm",
                  "usage": "docker swarm init [OPTIONS]",
                  "options": [
                      {
                          "option": "--advertise-addr",
                          "description": "Advertised address (format: \"<ip|interface>[:port]\")",
                          "value": "string"
                      },
                      {
                          "option": "--autolock",
                          "description": "Enable manager autolocking (requiring an unlock key to start a stopped manager)"
                      },
                      {
                          "option": "--availability",
                          "description": "Availability of the node (\"active\", \"pause\", \"drain\")",
                          "value": "string",
                          "default": "active"
                      },
                      {
                          "option": "--cert-expiry",
                          "description": "Validity period for node certificates (ns|us|ms|s|m|h)",
                          "value": "duration",
                          "default": "2160h0m0s"
                      },
                      {
                          "option": "--data-path-addr",
                          "description": "Address or interface to use for data path traffic (format: \"<ip|interface>\")",
                          "value": "string"
                      },
                      {
                          "option": "--data-path-port",
                          "description": "Port number to use for data path traffic (1024 - 49151). If no value is set or is set to 0, the default port (4789) is used.",
                          "value": "uint32"
                      },
                      {
                          "option": "--default-addr-pool",
                          "description": "default address pool in CIDR format",
                          "value": "ipNetSlice",
                          "default": "[]"
                      },
                      {
                          "option": "--default-addr-pool-mask-length",
                          "description": "default address pool subnet mask length",
                          "value": "uint32",
                          "default": "24"
                      },
                      {
                          "option": "--dispatcher-heartbeat",
                          "description": "Dispatcher heartbeat period (ns|us|ms|s|m|h)",
                          "value": "duration",
                          "default": "5s"
                      },
                      {
                          "option": "--external-ca",
                          "description": "Specifications of one or more certificate signing endpoints",
                          "value": "external-ca"
                      },
                      {
                          "option": "--force-new-cluster",
                          "description": "Force create a new cluster from current state"
                      },
                      {
                          "option": "--listen-addr",
                          "description": "Listen address (format: \"<ip|interface>[:port]\")",
                          "value": "node-addr",
                          "default": "0.0.0.0:2377"
                      },
                      {
                          "option": "--max-snapshots",
                          "description": "Number of additional Raft snapshots to retain",
                          "value": "uint"
                      },
                      {
                          "option": "--snapshot-interval",
                          "description": "Number of log entries between Raft snapshots",
                          "value": "uint",
                          "default": "10000"
                      },
                      {
                          "option": "--task-history-limit",
                          "description": "Task history retention limit",
                          "value": "int",
                          "default": "5"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker swarm join",
                  "description": "Join a swarm as a node and/or manager",
                  "usage": "docker swarm join [OPTIONS] HOST:PORT",
                  "options": [
                      {
                          "option": "--advertise-addr",
                          "description": "Advertised address (format: \"<ip|interface>[:port]\")",
                          "value": "string"
                      },
                      {
                          "option": "--availability",
                          "description": "Availability of the node (\"active\", \"pause\", \"drain\")",
                          "value": "string",
                          "default": "active"
                      },
                      {
                          "option": "--data-path-addr",
                          "description": "Address or interface to use for data path traffic (format: \"<ip|interface>\")",
                          "value": "string"
                      },
                      {
                          "option": "--listen-addr",
                          "description": "Listen address (format: \"<ip|interface>[:port]\")",
                          "value": "node-addr",
                          "default": "0.0.0.0:2377"
                      },
                      {
                          "option": "--token",
                          "description": "Token for entry into the swarm",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              }
          ]
      },
      {
          "name": "docker system",
          "description": "Manage Docker",
          "usage": "docker system COMMAND",
          "subcommands": [
              {
                  "name": "docker system df",
                  "description": "Show docker disk usage",
                  "usage": "docker system df [OPTIONS]",
                  "options": [
                      {
                          "option": "--format",
                          "description": "Format output using a custom template: 'table': Print output in table format with column headers (default) 'table TEMPLATE': Print output in table format using the given Go template 'json': Print in JSON format 'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--verbose",
                          "shortcut": "-v",
                          "description": "Show detailed information on space usage"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker system events",
                  "description": "Get real time events from the server",
                  "usage": "Usage:  docker system events [OPTIONS]",
                  "options": [
                      {
                          "option": "--filter",
                          "shortcut": "-f",
                          "description": "Filter output based on conditions provided",
                          "value": "filter"
                      },
                      {
                          "option": "--format",
                          "description": "Format output using a custom template:\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template.\nRefer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--since",
                          "description": "Show all events created since timestamp",
                          "value": "string"
                      },
                      {
                          "option": "--until",
                          "description": "Stream events until this timestamp",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker system info",
                  "description": "Display system-wide information",
                  "usage": "docker system info [OPTIONS]",
                  "options": [
                      {
                          "option": "--format",
                          "shortcut": "-f",
                          "description": "Format output using a custom template: 'json': Print in JSON format 'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker system prune",
                  "description": "Remove unused data",
                  "usage": "docker system prune [OPTIONS]",
                  "options": [
                      {
                          "option": "--all",
                          "shortcut": "-a",
                          "description": "Remove all unused images not just dangling ones"
                      },
                      {
                          "option": "--filter",
                          "description": "Provide filter values (e.g. \"label=<key>=<value>\")",
                          "value": "filter"
                      },
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Do not prompt for confirmation"
                      },
                      {
                          "option": "--volumes",
                          "description": "Prune anonymous volumes"
                      }
                  ],
                  "subcommands": []
              }
          ]
      },
      {
          "name": "docker tag",
          "description": "Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE",
          "usage": "docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]",
          "subcommands": [],
          "options": []
      },
      {
          "name": "docker top",
          "description": "Display the running processes of a container",
          "usage": "docker top CONTAINER [ps OPTIONS]",
          "subcommands": [],
          "options": []
      },
      {
          "name": "docker trust",
          "description": "Manage trust on Docker images",
          "usage": "docker trust COMMAND",
          "subcommands": [
              {
                  "name": "docker trust inspect",
                  "description": "Return low-level information about keys and signatures",
                  "usage": "docker trust inspect IMAGE[:TAG] [IMAGE[:TAG]...]",
                  "options": [
                      {
                          "option": "--pretty",
                          "description": "Print the information in a human friendly format"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker trust key",
                  "description": "Manage keys for signing Docker images",
                  "usage": "docker trust key COMMAND",
                  "subcommands": [
                      {
                          "name": "docker trust key generate",
                          "subcommands": [],
                          "options": []
                      },
                      {
                          "name": "docker trust key load",
                          "description": "Load a private key file for signing",
                          "usage": "docker trust key load [OPTIONS] KEYFILE",
                          "options": [
                              {
                                  "option": "--name",
                                  "description": "Name for the loaded key",
                                  "value": "string",
                                  "default": "signer"
                              }
                          ],
                          "subcommands": []
                      }
                  ],
                  "options": []
              },
              {
                  "name": "docker trust revoke",
                  "description": "Remove trust for an image",
                  "usage": "docker trust revoke [OPTIONS] IMAGE[:TAG]",
                  "options": [
                      {
                          "option": "--yes",
                          "shortcut": "-y",
                          "description": "Do not prompt for confirmation"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker trust sign",
                  "description": "Sign an image",
                  "usage": "docker trust sign IMAGE:TAG",
                  "options": [
                      {
                          "option": "--local",
                          "description": "Sign a locally tagged image"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker trust signer",
                  "description": "Manage entities who can sign Docker images",
                  "usage": "Usage:  docker trust signer COMMAND",
                  "subcommands": [
                      {
                          "name": "docker trust signer add",
                          "description": "Add a signer",
                          "usage": "docker trust signer add OPTIONS NAME REPOSITORY [REPOSITORY...]",
                          "options": [
                              {
                                  "option": "--key",
                                  "description": "Path to the signer's public key file",
                                  "value": "list"
                              }
                          ],
                          "subcommands": []
                      },
                      {
                          "name": "docker trust signer remove",
                          "description": "Remove a signer",
                          "usage": "docker trust signer remove [OPTIONS] NAME REPOSITORY [REPOSITORY...]",
                          "options": [
                              {
                                  "option": "--force",
                                  "shortcut": "-f",
                                  "description": "Do not prompt for confirmation before removing the most recent signer"
                              }
                          ],
                          "subcommands": []
                      }
                  ]
              }
          ]
      },
      {
          "name": "docker unpause",
          "description": "Unpause all processes within one or more containers",
          "usage": "docker unpause CONTAINER [CONTAINER...]",
          "subcommands": [],
          "options": []
      },
      {
          "name": "docker update",
          "description": "Update configuration of one or more containers",
          "usage": "docker update [OPTIONS] CONTAINER [CONTAINER...]",
          "options": [
              {
                  "option": "--blkio-weight",
                  "description": "Block IO (relative weight), between 10 and 1000, or 0 to disable",
                  "value": "uint16",
                  "default": "0"
              },
              {
                  "option": "--cpu-period",
                  "description": "Limit CPU CFS (Completely Fair Scheduler) period",
                  "value": "int"
              },
              {
                  "option": "--cpu-quota",
                  "description": "Limit CPU CFS (Completely Fair Scheduler) quota",
                  "value": "int"
              },
              {
                  "option": "--cpu-rt-period",
                  "description": "Limit the CPU real-time period in microseconds",
                  "value": "int"
              },
              {
                  "option": "--cpu-rt-runtime",
                  "description": "Limit the CPU real-time runtime in microseconds",
                  "value": "int"
              },
              {
                  "option": "--cpus",
                  "description": "Number of CPUs",
                  "value": "decimal"
              },
              {
                  "option": "--cpuset-cpus",
                  "description": "CPUs in which to allow execution (0-3, 0,1)",
                  "value": "string"
              },
              {
                  "option": "--cpuset-mems",
                  "description": "MEMs in which to allow execution (0-3, 0,1)",
                  "value": "string"
              },
              {
                  "option": "--memory",
                  "shortcut": "-m",
                  "description": "Memory limit",
                  "value": "bytes"
              },
              {
                  "option": "--memory-reservation",
                  "description": "Memory soft limit",
                  "value": "bytes"
              },
              {
                  "option": "--memory-swap",
                  "description": "Swap limit equal to memory plus swap: -1 to enable unlimited swap",
                  "value": "bytes"
              },
              {
                  "option": "--pids-limit",
                  "description": "Tune container pids limit (set -1 for unlimited)",
                  "value": "int"
              },
              {
                  "option": "--restart",
                  "description": "Restart policy to apply when a container exits",
                  "value": "string"
              },
              {
                  "option": "--cpu-shares",
                  "shortcut": "-c",
                  "description": "CPU shares (relative weight)",
                  "value": "int"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker version",
          "description": "Show the Docker version information",
          "usage": "docker version [OPTIONS]",
          "options": [
              {
                  "option": "--format",
                  "shortcut": "-f",
                  "description": "Format output using a custom template:\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template.\nRefer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                  "value": "string"
              }
          ],
          "subcommands": []
      },
      {
          "name": "docker volume",
          "description": "Manage volumes",
          "usage": "docker volume COMMAND",
          "subcommands": [
              {
                  "name": "docker volume create",
                  "description": "Create a volume",
                  "usage": "docker volume create [OPTIONS] [VOLUME]",
                  "options": [
                      {
                          "option": "--driver",
                          "shortcut": "-d",
                          "description": "Specify volume driver name",
                          "value": "string",
                          "default": "local"
                      },
                      {
                          "option": "--label",
                          "description": "Set metadata for a volume",
                          "value": "list"
                      },
                      {
                          "option": "--opt",
                          "shortcut": "-o",
                          "description": "Set driver specific options",
                          "value": "map",
                          "default": "map[]"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker volume inspect",
                  "description": "Display detailed information on one or more volumes",
                  "usage": "docker volume inspect [OPTIONS] VOLUME [VOLUME...]",
                  "options": [
                      {
                          "option": "--format",
                          "shortcut": "-f",
                          "description": "Format output using a custom template",
                          "value": "string",
                          "tags": [
                              "'json': Print in JSON format",
                              "'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates"
                          ]
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker volume ls",
                  "description": "List volumes",
                  "usage": "docker volume ls [OPTIONS]",
                  "options": [
                      {
                          "option": "--filter",
                          "shortcut": "-f",
                          "description": "Provide filter values (e.g. \"dangling=true\")",
                          "value": "filter"
                      },
                      {
                          "option": "--format",
                          "description": "Format output using a custom template:\n'table': Print output in table format with column headers (default)\n'table TEMPLATE': Print output in table format using the given Go template\n'json': Print in JSON format\n'TEMPLATE': Print output using the given Go template. Refer to https://docs.docker.com/go/formatting/ for more information about formatting output with templates",
                          "value": "string"
                      },
                      {
                          "option": "--quiet",
                          "shortcut": "-q",
                          "description": "Only display volume names"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker volume prune",
                  "description": "Remove unused local volumes",
                  "usage": "docker volume prune [OPTIONS]",
                  "options": [
                      {
                          "option": "--all",
                          "shortcut": "-a",
                          "description": "Remove all unused volumes, not just anonymous ones"
                      },
                      {
                          "option": "--filter",
                          "description": "Provide filter values (e.g. \"label=<label>\")",
                          "value": "filter"
                      },
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Do not prompt for confirmation"
                      }
                  ],
                  "subcommands": []
              },
              {
                  "name": "docker volume rm",
                  "description": "Remove one or more volumes. You cannot remove a volume that is in use by a container.",
                  "usage": "docker volume rm [OPTIONS] VOLUME [VOLUME...]",
                  "options": [
                      {
                          "option": "--force",
                          "shortcut": "-f",
                          "description": "Force the removal of one or more volumes"
                      }
                  ],
                  "subcommands": []
              }
          ]
      },
      {
          "name": "docker wait",
          "description": "Block until one or more containers stop, then print their exit codes",
          "usage": "docker wait CONTAINER [CONTAINER...]",
          "subcommands": [],
          "options": []
      }
  ],
  "options": [
      {
          "option": "--config",
          "description": "Location of client config files",
          "value": "string",
          "default": "/home/ahmad/.docker"
      },
      {
          "option": "--context",
          "shortcut": "-c",
          "description": "Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with \"docker context use\")",
          "value": "string"
      },
      {
          "option": "--debug",
          "shortcut": "-D",
          "description": "Enable debug mode"
      },
      {
          "option": "--host",
          "shortcut": "-H",
          "description": "Daemon socket to connect to",
          "value": "list"
      },
      {
          "option": "--log-level",
          "shortcut": "-l",
          "description": "Set the logging level (\"debug\", \"info\", \"warn\", \"error\", \"fatal\")",
          "value": "string",
          "default": "info"
      },
      {
          "option": "--tls",
          "description": "Use TLS; implied by --tlsverify"
      },
      {
          "option": "--tlscacert",
          "description": "Trust certs signed only by this CA",
          "value": "string",
          "default": "/home/ahmad/.docker/ca.pem"
      },
      {
          "option": "--tlscert",
          "description": "Path to TLS certificate file",
          "value": "string",
          "default": "/home/ahmad/.docker/cert.pem"
      },
      {
          "option": "--tlskey",
          "description": "Path to TLS key file",
          "value": "string",
          "default": "/home/ahmad/.docker/key.pem"
      },
      {
          "option": "--tlsverify",
          "description": "Use TLS and verify the remote"
      },
      {
          "option": "--version",
          "shortcut": "-v",
          "description": "Print version information and quit"
      }
  ],
  "version": "27.4.1"
}
