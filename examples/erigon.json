{
    "name": "erigon",
    "description": "erigon",
    "usage": "erigon [command] [flags]",
    "subcommands": [
        {
            "name": "erigon h",
            "description": "erigon",
            "usage": "erigon [command] [flags]",
            "subcommands": [
                {
                    "name": "erigon h import",
                    "description": "Import a blockchain file",
                    "usage": "erigon import [command options]<filename> (<filename 2> ... <filename N>)",
                    "options": [
                        {
                            "description": "name of the network to join",
                            "option": "--chain",
                            "default": "\"mainnet\"",
                            "value": "value"
                        },
                        {
                            "default": "/home/ahmad/.local/share/erigon",
                            "description": "Data directory for the databases",
                            "option": "--datadir",
                            "value": "value"
                        },
                        {
                            "description": "show help",
                            "option": "--help",
                            "shortcut": "-h"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "erigon h init",
                    "description": "The init command initializes a new genesis block and definition for the network. This is a destructive action and changes the network in which you will be participating. It expects the genesis file as argument.",
                    "usage": "erigon init [command options]<genesisPath>",
                    "options": [
                        {
                            "option": "--datadir",
                            "description": "Data directory for the databases",
                            "value": "value",
                            "default": "/home/ahmad/.local/share/erigon"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "erigon h snapshots",
                    "description": "Managing snapshots (historical data partitions)",
                    "usage": "erigon snapshots command [command options]",
                    "subcommands": [],
                    "options": []
                },
                {
                    "name": "erigon h support",
                    "description": "Connect Erigon instance to a diagnostics system for support",
                    "usage": "erigon support [command options]--diagnostics.addr <URL for the diagnostics system> --ids <diagnostic session ids allowed to connect> --metrics.urls <http://erigon_host:metrics_port>",
                    "options": [
                        {
                            "option": "--debug.addrs",
                            "description": "Comma separated list of URLs to the debug endpoints thats are being diagnosed",
                            "value": "value",
                            "default": "localhost:6060"
                        },
                        {
                            "option": "--diagnostics.addr",
                            "description": "Address of the diagnostics system provided by the support team, include unique session PIN",
                            "value": "value",
                            "default": "localhost:8080"
                        },
                        {
                            "option": "--diagnostics.sessions",
                            "description": "Comma separated list of support session ids to connect to",
                            "value": "value"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--insecure",
                            "description": "Allows communication with diagnostics system using self-signed TLS certificates",
                            "default": false
                        },
                        {
                            "option": "--pprof",
                            "description": "Enable the pprof HTTP server",
                            "default": false
                        },
                        {
                            "option": "--pprof.addr",
                            "description": "pprof HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--pprof.cpuprofile",
                            "description": "Write CPU profile to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--pprof.port",
                            "description": "pprof HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--trace",
                            "description": "Write execution trace to the given file",
                            "value": "value"
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--allow-insecure-unlock",
                    "description": "Allow insecure account unlocking when account-related RPCs are exposed by http",
                    "default": "false"
                },
                {
                    "option": "--authrpc.addr",
                    "description": "HTTP-RPC server listening interface for the Engine API",
                    "default": "\"localhost\""
                },
                {
                    "option": "--authrpc.jwtsecret",
                    "description": "Path to the token that ensures safe connection between CL and EL"
                },
                {
                    "option": "--authrpc.port",
                    "description": "HTTP-RPC server listening port for the Engine API",
                    "default": "8551"
                },
                {
                    "option": "--authrpc.timeouts.idle",
                    "description": "Maximum amount of time to wait for the next request when keep-alives are enabled. If authrpc.timeouts.idle is zero, the value of authrpc.timeouts.read is used.",
                    "default": "2m0s"
                },
                {
                    "option": "--authrpc.timeouts.read",
                    "description": "Maximum duration for reading the entire request, including the body.",
                    "default": "30s"
                },
                {
                    "option": "--authrpc.timeouts.write",
                    "description": "Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read.",
                    "default": "30m0s"
                },
                {
                    "option": "--authrpc.vhosts",
                    "description": "Comma separated list of virtual hostnames from which to accept Engine API requests (server enforced). Accepts 'any' or '*' as wildcard.",
                    "default": "\"localhost\""
                },
                {
                    "option": "--bad.block",
                    "description": "Marks block with given hex string as bad and forces initial reorg before normal staged sync"
                },
                {
                    "option": "--batchSize",
                    "description": "Batch size for the execution stage",
                    "default": "\"256M\""
                },
                {
                    "option": "--beacon.api",
                    "description": "Enable beacon API (avaiable endpoints: beacon, builder, config, debug, events, node, validator, lighthouse)"
                },
                {
                    "option": "--beacon.api.addr",
                    "description": "sets the host to listen for beacon api requests",
                    "default": "\"localhost\""
                },
                {
                    "option": "--beacon.api.cors.allow-credentials",
                    "description": "set the cors' allow credentials",
                    "default": "false"
                },
                {
                    "option": "--beacon.api.cors.allow-methods",
                    "description": "set the cors' allow methods",
                    "default": "\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\""
                },
                {
                    "option": "--beacon.api.cors.allow-origins",
                    "description": "set the cors' allow origins"
                },
                {
                    "option": "--beacon.api.ide.timeout",
                    "description": "Sets the seconds for a write time out in the beacon api",
                    "default": "25"
                },
                {
                    "option": "--beacon.api.port",
                    "description": "sets the port to listen for beacon api requests",
                    "default": "5555"
                },
                {
                    "option": "--beacon.api.protocol",
                    "description": "Protocol for beacon API",
                    "default": "\"tcp\""
                },
                {
                    "option": "--beacon.api.read.timeout",
                    "description": "Sets the seconds for a read time out in the beacon api",
                    "default": "5"
                },
                {
                    "option": "--beacon.api.write.timeout",
                    "description": "Sets the seconds for a write time out in the beacon api",
                    "default": "5"
                },
                {
                    "option": "--bodies.cache",
                    "description": "Limit on the cache for block bodies",
                    "default": "\"268435456\""
                },
                {
                    "option": "--bootnodes",
                    "description": "Comma separated enode URLs for P2P discovery bootstrap"
                },
                {
                    "option": "--bor.heimdall",
                    "description": "URL of Heimdall service",
                    "default": "\"http://localhost:1317\""
                },
                {
                    "option": "--bor.milestone",
                    "description": "Enabling bor milestone processing",
                    "default": "true"
                },
                {
                    "option": "--bor.minblocksize",
                    "description": "Ignore the bor block period and wait for 'blocksize' transactions (for testing purposes)",
                    "default": "false"
                },
                {
                    "option": "--bor.period",
                    "description": "Override the bor block period (for testing purposes)",
                    "default": "false"
                },
                {
                    "option": "--bor.waypoints",
                    "description": "Enabling bor waypont recording",
                    "default": "false"
                },
                {
                    "option": "--bor.withoutheimdall",
                    "description": "Run without Heimdall service (for testing purposes)",
                    "default": "false"
                },
                {
                    "option": "--caplin.archive",
                    "description": "enables archival node in caplin",
                    "default": "false"
                },
                {
                    "option": "--caplin.backfilling",
                    "description": "sets whether backfilling is enabled for caplin",
                    "default": "false"
                },
                {
                    "option": "--caplin.backfilling.blob",
                    "description": "sets whether backfilling is enabled for caplin",
                    "default": "false"
                },
                {
                    "option": "--caplin.backfilling.blob.no-pruning",
                    "description": "disable blob pruning in caplin",
                    "default": "false"
                },
                {
                    "option": "--chain",
                    "description": "name of the network to join",
                    "default": "\"mainnet\""
                },
                {
                    "option": "--clique.checkpoint",
                    "description": "Number of blocks after which to save the vote snapshot to the database",
                    "default": "10"
                },
                {
                    "option": "--clique.datadir",
                    "description": "Path to clique db folder"
                },
                {
                    "option": "--clique.signatures",
                    "description": "Number of recent block signatures to keep in memory",
                    "default": "16384"
                },
                {
                    "option": "--clique.snapshots",
                    "description": "Number of recent vote snapshots to keep in memory",
                    "default": "1024"
                },
                {
                    "option": "--config",
                    "description": "Sets erigon flags from YAML/TOML file"
                },
                {
                    "option": "--datadir",
                    "description": "Data directory for the databases",
                    "default": "/home/ahmad/.local/share/erigon"
                },
                {
                    "option": "--database.verbosity",
                    "description": "Enabling internal db logs. Very high verbosity levels may require recompile db. Default: 2, means warning.",
                    "default": "2"
                },
                {
                    "option": "--db.pagesize",
                    "description": "DB is splitted to 'pages' of fixed size. Can't change DB creation. Must be power of 2 and '256b <= pagesize <= 64kb'. Default: equal to OperationSystem's pageSize. Bigger pageSize causing: 1. More writes to disk during commit 2. Smaller b-tree high 3. Less fragmentation 4. Less overhead on 'free-pages list' maintainance (a bit faster Put/Commit) 5. If expecting DB-size > 8Tb then set pageSize >= 8Kb",
                    "default": "\"8KB\""
                },
                {
                    "option": "--db.read.concurrency",
                    "description": "Does limit amount of parallel db reads. Default: equal to GOMAXPROCS (or number of CPU)",
                    "default": "768"
                },
                {
                    "option": "--db.size.limit",
                    "description": "Runtime limit of chaindata db size. You can change value of this flag at any time.",
                    "default": "\"12TB\""
                },
                {
                    "option": "--diagnostics.disabled",
                    "description": "Disable diagnostics",
                    "default": "false"
                },
                {
                    "option": "--diagnostics.endpoint.addr",
                    "description": "Diagnostics HTTP server listening interface",
                    "default": "\"0.0.0.0\""
                },
                {
                    "option": "--diagnostics.endpoint.port",
                    "description": "Diagnostics HTTP server listening port",
                    "default": "6060"
                },
                {
                    "option": "--diagnostics.speedtest",
                    "description": "Enable speed test",
                    "default": "false"
                },
                {
                    "option": "--discovery.dns",
                    "description": "Sets DNS discovery entry points (use \"\" to disable DNS)"
                },
                {
                    "option": "--downloader.api.addr",
                    "description": "downloader address '<host>:<port>'"
                },
                {
                    "option": "--downloader.disable.ipv4",
                    "description": "Turns off ipv4 for the downloader",
                    "default": "false"
                },
                {
                    "option": "--downloader.disable.ipv6",
                    "description": "Turns off ipv6 for the downloader",
                    "default": "false"
                },
                {
                    "option": "--downloader.verify",
                    "description": "Verify snapshots on startup. It will not report problems found, but re-download broken pieces.",
                    "default": "false"
                },
                {
                    "option": "--ethash.dagdir",
                    "description": "Directory to store the ethash mining DAGs",
                    "default": "/home/ahmad/.local/share/erigon-ethash"
                },
                {
                    "option": "--ethstats",
                    "description": "Reporting URL of a ethstats service (nodename:secret@host:port)"
                },
                {
                    "option": "--etl.bufferSize",
                    "description": "Buffer size for ETL operations.",
                    "default": "\"256MB\""
                },
                {
                    "option": "--fakepow",
                    "description": "Disables proof-of-work verification",
                    "default": "false"
                },
                {
                    "option": "--force.partial.commit",
                    "description": "Force data commit after each stage (or even do multiple commits per 1 stage - to save it's progress). Don't use this flag if node is synced. Meaning: readers (users of RPC) would like to see 'fully consistent' data (block is executed and all indices are updated). Erigon guarantee this level of data-consistency. But 1 downside: after restore node from backup - it can't save partial progress (non-committed progress will be lost at restart). This flag will be removed in future if we can find automatic way to detect corner-cases.",
                    "default": "false"
                },
                {
                    "option": "--force.partial.commit",
                    "description": "Force data commit after each stage (or even do multiple commits per 1 stage - to save it's progress). Don't use this flag if node is synced. Meaning: readers (users of RPC) would like to see 'fully consistent' data (block is executed and all indices are updated). Erigon guarantee this level of data-consistency. But 1 downside: after restore node from backup - it can't save partial progress (non-committed progress will be lost at restart). This flag will be removed in future if we can find automatic way to detect corner-cases.",
                    "default": "false"
                },
                {
                    "option": "--gpo.blocks",
                    "description": "Number of recent blocks to check for gas prices",
                    "default": "20"
                },
                {
                    "option": "--gpo.percentile",
                    "description": "Suggested gas price is the given percentile of a set of recent transaction gas prices",
                    "default": "60"
                },
                {
                    "option": "--graphql",
                    "description": "Enable the graphql endpoint",
                    "default": "false"
                },
                {
                    "option": "--healthcheck",
                    "description": "Enable grpc health check",
                    "default": "false"
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                },
                {
                    "option": "--http",
                    "description": "JSON-RPC server (enabled by default). Use --http=false to disable it",
                    "default": "true"
                },
                {
                    "option": "--http.addr",
                    "description": "HTTP-RPC server listening interface",
                    "default": "\"localhost\""
                },
                {
                    "option": "--http.api",
                    "description": "API's offered over the HTTP-RPC interface",
                    "default": "\"eth,erigon,engine\""
                },
                {
                    "option": "--http.compression",
                    "description": "Enable compression over HTTP-RPC",
                    "default": "false"
                },
                {
                    "option": "--http.corsdomain",
                    "description": "Comma separated list of domains from which to accept cross origin requests (browser enforced)"
                },
                {
                    "option": "--http.dbg.single",
                    "description": "Allow pass HTTP header 'dbg: true' to printt more detailed logs - how this request was executed",
                    "default": "false"
                },
                {
                    "option": "--http.enabled",
                    "description": "JSON-RPC HTTP server (enabled by default). Use --http.enabled=false to disable it",
                    "default": "true"
                },
                {
                    "option": "--http.port",
                    "description": "HTTP-RPC server listening port",
                    "default": "8545"
                },
                {
                    "option": "--http.timeouts.idle",
                    "description": "Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used.",
                    "default": "2m0s"
                },
                {
                    "option": "--http.timeouts.read",
                    "description": "Maximum duration for reading the entire request, including the body.",
                    "default": "30s"
                },
                {
                    "option": "--http.timeouts.write",
                    "description": "Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read.",
                    "default": "30m0s"
                },
                {
                    "option": "--http.trace",
                    "description": "Print all HTTP requests to logs with INFO level",
                    "default": "false"
                },
                {
                    "option": "--http.vhosts",
                    "description": "Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts 'any' or '*' as wildcard.",
                    "default": "\"localhost\""
                },
                {
                    "option": "--identity",
                    "description": "Custom node name"
                },
                {
                    "option": "--internalcl",
                    "description": "Enables internal consensus",
                    "default": "false"
                },
                {
                    "option": "--lightclient.discovery.addr",
                    "description": "Address for lightclient DISCV5 protocol",
                    "default": "\"127.0.0.1\""
                },
                {
                    "option": "--lightclient.discovery.port",
                    "description": "Port for lightclient DISCV5 protocol",
                    "default": "4000"
                },
                {
                    "option": "--lightclient.discovery.tcpport",
                    "description": "TCP Port for lightclient DISCV5 protocol",
                    "default": "4001"
                },
                {
                    "option": "--log.console.json",
                    "description": "Format console logs with JSON",
                    "default": "false"
                },
                {
                    "option": "--log.console.verbosity",
                    "description": "Set the log level for console logs",
                    "default": "\"info\""
                },
                {
                    "option": "--log.delays",
                    "description": "Enable block delay logging",
                    "default": "false"
                },
                {
                    "option": "--log.dir.disable",
                    "description": "disable disk logging",
                    "default": "false"
                },
                {
                    "option": "--log.dir.json",
                    "description": "Format file logs with JSON",
                    "default": "false"
                },
                {
                    "option": "--log.dir.path",
                    "description": "Path to store user and error logs to disk"
                },
                {
                    "option": "--log.dir.prefix",
                    "description": "The file name prefix for logs stored to disk"
                },
                {
                    "option": "--log.dir.verbosity",
                    "description": "Set the log verbosity for logs stored to disk",
                    "default": "\"info\""
                },
                {
                    "option": "--log.json",
                    "description": "Format console logs with JSON",
                    "default": "false"
                },
                {
                    "option": "--maxpeers",
                    "description": "Maximum number of network peers (network disabled if set to 0)",
                    "default": "100"
                },
                {
                    "option": "--metrics",
                    "description": "Enable metrics collection and reporting",
                    "default": "false"
                },
                {
                    "option": "--metrics.addr",
                    "description": "Enable stand-alone metrics HTTP server listening interface",
                    "default": "\"0.0.0.0\""
                },
                {
                    "option": "--metrics.port",
                    "description": "Metrics HTTP server listening port",
                    "default": "6060"
                },
                {
                    "option": "--mine",
                    "description": "Enable mining",
                    "default": "false"
                },
                {
                    "option": "--miner.etherbase",
                    "description": "Public address for block mining rewards",
                    "default": "\"0\""
                },
                {
                    "option": "--miner.extradata",
                    "description": "Block extra data set by the miner (default = client version)"
                },
                {
                    "option": "--miner.gaslimit",
                    "description": "Target gas limit for mined blocks",
                    "default": "30000000"
                },
                {
                    "option": "--miner.gasprice",
                    "description": "Minimum gas price for mining a transaction",
                    "default": "1"
                },
                {
                    "option": "--miner.noverify",
                    "description": "Disable remote sealing verification",
                    "default": "false"
                },
                {
                    "option": "--miner.notify",
                    "description": "Comma separated HTTP URL list to notify of new work packages"
                },
                {
                    "option": "--miner.recommit",
                    "description": "Time interval to recreate the block being mined",
                    "default": "3s"
                },
                {
                    "option": "--miner.sigfile",
                    "description": "Private key to sign blocks with"
                },
                {
                    "option": "--nat",
                    "description": "NAT port mapping mechanism (any|none|upnp|pmp|stun|extip:<IP>)\n\"\" or \"none\"         Default - do not nat\n\"extip:77.12.33.4\"   Will assume the local machine is reachable on the given IP\n\"any\"                Uses the first auto-detected mechanism\n\"upnp\"               Uses the Universal Plug and Play protocol\n\"pmp\"                Uses NAT-PMP with an auto-detected gateway address\n\"pmp:192.168.0.1\"    Uses NAT-PMP with the given gateway address\n\"stun\"               Uses STUN to detect an external IP using a default server\n\"stun:<server>\"      Uses STUN to detect an external IP using the given server (host:port)"
                },
                {
                    "option": "--netrestrict",
                    "description": "Restricts network communication to the given IP networks (CIDR masks)"
                },
                {
                    "option": "--networkid",
                    "description": "Explicitly set network id (integer)(For testnets: use --chain <testnet_name> instead)",
                    "default": "1"
                },
                {
                    "option": "--no-downloader",
                    "description": "Disables downloader component",
                    "default": "false"
                },
                {
                    "option": "--nodiscover",
                    "description": "Disables the peer discovery mechanism (manual peer addition)",
                    "default": "false"
                },
                {
                    "option": "--override.prague",
                    "description": "Manually specify the Prague fork time, overriding the bundled setting",
                    "default": "0"
                },
                {
                    "option": "--p2p.allowed-ports",
                    "description": "Allowed ports to pick for different eth p2p protocol versions as follows <porta>,<portb>,..,<porti>",
                    "default": "30303, 30304, 30305, 30306, 30307"
                },
                {
                    "option": "--p2p.protocol",
                    "description": "Version of eth p2p protocol",
                    "default": "68, 67"
                },
                {
                    "option": "--polygon.sync",
                    "description": "Enabling syncing using the new polygon sync component",
                    "default": "false"
                },
                {
                    "option": "--port",
                    "description": "Network listening port",
                    "default": "30303"
                },
                {
                    "option": "--pprof",
                    "description": "Enable the pprof HTTP server",
                    "default": "false"
                },
                {
                    "option": "--pprof.addr",
                    "description": "pprof HTTP server listening interface",
                    "default": "\"0.0.0.0\""
                },
                {
                    "option": "--pprof.cpuprofile",
                    "description": "Write CPU profile to the given file"
                },
                {
                    "option": "--pprof.port",
                    "description": "pprof HTTP server listening port",
                    "default": "6060"
                },
                {
                    "option": "--prune",
                    "description": "Choose which ancient data delete from DB:\nh - prune history (ChangeSets, HistoryIndices - used by historical state access, like eth_getStorageAt, eth_getBalanceAt, debug_traceTransaction, trace_block, trace_transaction, etc.)\nr - prune receipts (Receipts, Logs, LogTopicIndex, LogAddressIndex - used by eth_getLogs and similar RPC methods)\nt - prune transaction by it's hash index\nc - prune call traces (used by trace_filter method)\nDoes delete data older than 90K blocks, --prune=h is shortcut for: --prune.h.older=90000.\nSimilarly, --prune=t is shortcut for: --prune.t.older=90000 and --prune=c is shortcut for: --prune.c.older=90000.\nHowever, --prune=r means to prune receipts before the Beacon Chain genesis (Consensus Layer might need receipts after that).\nIf an item is NOT on the list - means NO pruning for this data.\nExample: --prune=htc",
                    "default": "\"disabled\""
                },
                {
                    "option": "--prune.c.before",
                    "description": "Prune data before this block",
                    "default": "0"
                },
                {
                    "option": "--prune.c.older",
                    "description": "Prune data older than this number of blocks from the tip of the chain (if --prune flag has 'c', then default is 90K)",
                    "default": "0"
                },
                {
                    "option": "--prune.h.before",
                    "description": "Prune data before this block",
                    "default": "0"
                },
                {
                    "option": "--prune.h.older",
                    "description": "Prune data older than this number of blocks from the tip of the chain (if --prune flag has 'h', then default is 90K)",
                    "default": "0"
                },
                {
                    "option": "--prune.r.before",
                    "description": "Prune data before this block",
                    "default": "0"
                },
                {
                    "option": "--prune.r.older",
                    "description": "Prune data older than this number of blocks from the tip of the chain",
                    "default": "0"
                },
                {
                    "option": "--prune.t.before",
                    "description": "Prune data before this block",
                    "default": "0"
                },
                {
                    "option": "--prune.t.older",
                    "description": "Prune data older than this number of blocks from the tip of the chain (if --prune flag has 't', then default is 90K)",
                    "default": "0"
                },
                {
                    "option": "--private.api.addr",
                    "description": "Erigon's components (txpool, rpcdaemon, sentry, downloader, ...) can be deployed as independent Processes on same/another server. Then components will connect to erigon by this internal grpc API. example: 127.0.0.1:9090, empty string means not to start the listener. do not expose to public network. serves remote database interface",
                    "default": "\"127.0.0.1:9090\""
                },
                {
                    "option": "--private.api.ratelimit",
                    "description": "Amount of requests server handle simultaneously - requests over this limit will wait. Increase it - if clients see 'request timeout' while server load is low - it means your 'hot data' is small or have much RAM.",
                    "default": "31872"
                },
                {
                    "option": "--proposer.disable",
                    "description": "Disables PoS proposer",
                    "default": "false"
                },
                {
                    "option": "--rpc.accessList",
                    "description": "Specify granular (method-by-method) API allowlist"
                },
                {
                    "option": "--rpc.allow-unprotected-txs",
                    "description": "Allow for unprotected (non-EIP155 signed) transactions to be submitted via RPC",
                    "default": "false"
                },
                {
                    "option": "--rpc.batch.concurrency",
                    "description": "Does limit amount of goroutines to process 1 batch request. Means 1 bach request can't overload server. 1 batch still can have unlimited amount of request",
                    "default": "2"
                },
                {
                    "option": "--rpc.batch.limit",
                    "description": "Maximum number of requests in a batch",
                    "default": "100"
                },
                {
                    "option": "--rpc.evmtimeout",
                    "description": "Maximum amount of time to wait for the answer from EVM call.",
                    "default": "5m0s"
                },
                {
                    "option": "--rpc.gascap",
                    "description": "Sets a cap on gas that can be used in eth_call/estimateGas",
                    "default": "50000000"
                },
                {
                    "option": "--rpc.maxgetproofrewindblockcount.limit",
                    "description": "Max GetProof rewind block count",
                    "default": "100000"
                },
                {
                    "option": "--rpc.overlay.getlogstimeout",
                    "description": "Maximum amount of time to wait for the answer from the overlay_getLogs call.",
                    "default": "5m0s"
                },
                {
                    "option": "--rpc.overlay.replayblocktimeout",
                    "description": "Maximum amount of time to wait for the answer to replay a single block when called from an overlay_getLogs call.",
                    "default": "10s"
                },
                {
                    "option": "--rpc.returndata.limit",
                    "description": "Maximum number of bytes returned from eth_call or similar invocations",
                    "default": "100000"
                },
                {
                    "option": "--rpc.slow",
                    "description": "Print in logs RPC requests slower than given threshold: 100ms, 1s, 1m. Exluded methods: eth_getBlock,eth_getBlockByNumber,eth_getBlockByHash,eth_blockNumber,erigon_blockNumber,erigon_getHeaderByNumber,erigon_getHeaderByHash,erigon_getBlockByTimestamp,eth_call",
                    "default": "0s"
                },
                {
                    "option": "--rpc.streaming.disable",
                    "description": "Erigon has enabled json streaming for some heavy endpoints (like trace_*). It's a trade-off: greatly reduce amount of RAM (in some cases from 30GB to 30mb), but it produce invalid json format if error happened in the middle of streaming (because json is not streaming-friendly format)",
                    "default": "false"
                },
                {
                    "option": "--rpc.subscription.filters.maxaddresses",
                    "description": "Maximum number of addresses per subscription to filter logs by.",
                    "default": "0"
                },
                {
                    "option": "--rpc.subscription.filters.maxheaders",
                    "description": "Maximum number of block headers to store per subscription.",
                    "default": "0"
                },
                {
                    "option": "--rpc.subscription.filters.maxlogs",
                    "description": "Maximum number of logs to store per subscription.",
                    "default": "0"
                },
                {
                    "option": "--rpc.subscription.filters.maxtopics",
                    "description": "Maximum number of topics per subscription to filter logs by.",
                    "default": "0"
                },
                {
                    "option": "--rpc.subscription.filters.maxtxs",
                    "description": "Maximum number of transactions to store per subscription.",
                    "default": "0"
                },
                {
                    "option": "--rpc.txfeecap",
                    "description": "Sets a cap on transaction fee (in ether) that can be sent via the RPC APIs (0 = no cap)",
                    "default": "1"
                },
                {
                    "option": "--sentry.api.addr",
                    "description": "Comma separated sentry addresses '<host>:<port>,<host>:<port>'"
                },
                {
                    "option": "--sentry.log-peer-info",
                    "description": "Log detailed peer info when a peer connects or disconnects. Enable to integrate with observer.",
                    "default": "false"
                },
                {
                    "option": "--silkworm.contexts",
                    "description": "Number of I/O contexts used in embedded Silkworm RPC and Sentry services (zero means use default in Silkworm)",
                    "default": "0"
                },
                {
                    "option": "--silkworm.exec",
                    "description": "Enable Silkworm block execution",
                    "default": "false"
                },
                {
                    "option": "--silkworm.rpc",
                    "description": "Enable embedded Silkworm RPC service",
                    "default": "false"
                },
                {
                    "option": "--silkworm.rpc.compatibility",
                    "description": "Preserve JSON-RPC compatibility using embedded Silkworm RPC service",
                    "default": "true"
                },
                {
                    "option": "--silkworm.rpc.log",
                    "description": "Enable interface log for embedded Silkworm RPC service",
                    "default": "false"
                },
                {
                    "option": "--silkworm.rpc.log.maxfiles",
                    "description": "Max interface log files for embedded Silkworm RPC service",
                    "default": "100"
                },
                {
                    "option": "--silkworm.rpc.log.maxsize",
                    "description": "Max interface log file size in MB for embedded Silkworm RPC service",
                    "default": "1"
                },
                {
                    "option": "--silkworm.rpc.log.response",
                    "description": "Dump responses in interface logs for embedded Silkworm RPC service",
                    "default": "false"
                },
                {
                    "option": "--silkworm.rpc.workers",
                    "description": "Number of worker threads used in embedded Silkworm RPC service (zero means use default in Silkworm)",
                    "default": "0"
                },
                {
                    "option": "--silkworm.sentry",
                    "description": "Enable embedded Silkworm Sentry service",
                    "default": "false"
                },
                {
                    "option": "--silkworm.verbosity",
                    "description": "Set the log level for Silkworm console logs",
                    "default": "\"info\""
                },
                {
                    "option": "--snap.keepblocks",
                    "description": "Keep ancient blocks in db (useful for debug)",
                    "default": "false"
                },
                {
                    "option": "--snap.stop",
                    "description": "Workaround to stop producing new snapshots, if you meet some snapshots-related critical bug. It will stop move historical data from DB to new immutable snapshots. DB will grow and may slightly slow-down - and removing this flag in future will not fix this effect (db size will not greatly reduce).",
                    "default": "false"
                },
                {
                    "option": "--snapshots",
                    "description": "Default: use snapshots \"true\" for Mainnet, Goerli, Gnosis Chain and Chiado. use snapshots \"false\" in all other cases",
                    "default": "true"
                },
                {
                    "option": "--state.cache",
                    "description": "Amount of data to store in StateCache (enabled if no --datadir set). Set 0 to disable StateCache. Defaults to 0MB",
                    "default": "\"0MB\""
                },
                {
                    "option": "--state.stream.disable",
                    "description": "Disable streaming of state changes from core to RPC daemon",
                    "default": "false"
                },
                {
                    "option": "--staticpeers",
                    "description": "Comma separated enode URLs to connect to"
                },
                {
                    "option": "--sync.loop.block.limit",
                    "description": "Sets the maximum number of blocks to process per loop iteration",
                    "default": "0"
                },
                {
                    "option": "--sync.loop.break.after",
                    "description": "Sets the last stage of the sync loop to run"
                },
                {
                    "option": "--sync.loop.prune.limit",
                    "description": "Sets the maximum number of block to prune per loop iteration",
                    "default": "100"
                },
                {
                    "option": "--tls",
                    "description": "Enable TLS handshake",
                    "default": "false"
                },
                {
                    "option": "--tls.cacert",
                    "description": "Specify certificate authority"
                },
                {
                    "option": "--tls.cert",
                    "description": "Specify certificate"
                },
                {
                    "option": "--tls.key",
                    "description": "Specify key file"
                },
                {
                    "option": "--torrent.conns.perfile",
                    "description": "Number of connections per file",
                    "default": "10"
                },
                {
                    "option": "--torrent.download.rate",
                    "description": "Bytes per second, example: 32mb",
                    "default": "\"16mb\""
                },
                {
                    "option": "--torrent.download.slots",
                    "description": "Amount of files to download in parallel. If network has enough seeders 1-3 slot enough, if network has lack of seeders increase to 5-7 (too big value will slow down everything).",
                    "default": "3"
                },
                {
                    "option": "--torrent.maxpeers",
                    "description": "Unused parameter (reserved for future use)",
                    "default": "100"
                },
                {
                    "option": "--torrent.port",
                    "description": "Port to listen and serve BitTorrent protocol",
                    "default": "42069"
                },
                {
                    "option": "--torrent.staticpeers",
                    "description": "Comma separated enode URLs to connect to"
                },
                {
                    "option": "--torrent.upload.rate",
                    "description": "Bytes per second, example: 32mb",
                    "default": "\"4mb\""
                },
                {
                    "option": "--torrent.verbosity",
                    "description": "0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=detail (must set --verbosity to equal or higher level and has default: 2)",
                    "default": "2"
                },
                {
                    "option": "--trace",
                    "description": "Write execution trace to the given file"
                },
                {
                    "option": "--trace.compat",
                    "description": "Bug for bug compatibility with OE for trace_ routines",
                    "default": "false"
                },
                {
                    "option": "--trace.maxtraces",
                    "description": "Sets a limit on traces that can be returned in trace_filter",
                    "default": "200"
                },
                {
                    "option": "--txpool.accountqueue",
                    "description": "Maximum number of non-executable transaction slots permitted per account",
                    "default": "64"
                },
                {
                    "option": "--txpool.accountslots",
                    "description": "Minimum number of executable transaction slots guaranteed per account",
                    "default": "16"
                },
                {
                    "option": "--txpool.api.addr",
                    "description": "TxPool api network address, for example: 127.0.0.1:9090",
                    "default": "use value of --private.api.addr"
                },
                {
                    "option": "--txpool.blobpricebump",
                    "description": "Price bump percentage to replace existing (type-3) blob transaction",
                    "default": "100"
                },
                {
                    "option": "--txpool.blobslots",
                    "description": "Max allowed total number of blobs (within type-3 txs) per account",
                    "default": "48"
                },
                {
                    "option": "--txpool.commit.every",
                    "description": "How often transactions should be committed to the storage",
                    "default": "15s"
                },
                {
                    "option": "--txpool.disable",
                    "description": "Experimental external pool and block producer, see ./cmd/txpool/readme.md for more info. Disabling internal txpool and block producer.",
                    "default": "false"
                },
                {
                    "option": "--txpool.gossip.disable",
                    "description": "Disabling p2p gossip of txs. Any txs received by p2p - will be dropped. Some networks like 'Optimism execution engine'/'Optimistic Rollup' - using it to protect against MEV attacks",
                    "default": "false"
                },
                {
                    "option": "--txpool.globalbasefeeslots",
                    "description": "Maximum number of non-executable transactions where only not enough baseFee",
                    "default": "30000"
                },
                {
                    "option": "--txpool.globalqueue",
                    "description": "Maximum number of non-executable transaction slots for all accounts",
                    "default": "30000"
                },
                {
                    "option": "--txpool.globalslots",
                    "description": "Maximum number of executable transaction slots for all accounts",
                    "default": "10000"
                },
                {
                    "option": "--txpool.lifetime",
                    "description": "Maximum amount of time non-executable transaction are queued",
                    "default": "3h0m0s"
                },
                {
                    "option": "--txpool.locals",
                    "description": "Comma separated accounts to treat as locals (no flush, priority inclusion)"
                },
                {
                    "option": "--txpool.nolocals",
                    "description": "Disables price exemptions for locally submitted transactions",
                    "default": "false"
                },
                {
                    "option": "--txpool.pricelimit",
                    "description": "Minimum gas price (fee cap) limit to enforce for acceptance into the pool",
                    "default": "1"
                },
                {
                    "option": "--txpool.pricebump",
                    "description": "Price bump percentage to replace an already existing transaction",
                    "default": "10"
                },
                {
                    "option": "--txpool.totalblobpoollimit",
                    "description": "Total limit of number of all blobs in txs within the txpool",
                    "default": "480"
                },
                {
                    "option": "--txpool.trace.senders",
                    "description": "Comma separated list of addresses, whose transactions will traced in transaction pool with debug printing"
                },
                {
                    "option": "--v5disc",
                    "description": "Enables the experimental RLPx V5 (Topic Discovery) mechanism",
                    "default": "false"
                },
                {
                    "option": "--verbosity",
                    "description": "Set the log level for console logs",
                    "default": "\"info\""
                },
                {
                    "option": "--version",
                    "shortcut": "-v",
                    "description": "print the version"
                },
                {
                    "option": "--vmdebug",
                    "description": "Record information useful for VM and contract debugging",
                    "default": "false"
                },
                {
                    "option": "--webseed",
                    "description": "Comma-separated URL's, holding metadata about network-support infrastructure (like S3 buckets with snapshots, bootnodes, etc...)"
                },
                {
                    "option": "--ws",
                    "description": "Enable the WS-RPC server",
                    "default": "false"
                },
                {
                    "option": "--ws.compression",
                    "description": "Enable compression over WebSocket",
                    "default": "false"
                },
                {
                    "option": "--ws.port",
                    "description": "WS-RPC server listening port",
                    "default": "8546"
                }
            ]
        },
        {
            "name": "erigon import",
            "description": "Import a blockchain file",
            "usage": "erigon import [command options]<filename> (<filename 2> ... <filename N>)",
            "options": [
                {
                    "option": "--chain",
                    "description": "name of the network to join",
                    "value": "value",
                    "default": "\"mainnet\""
                },
                {
                    "option": "--datadir",
                    "description": "Data directory for the databases",
                    "value": "value",
                    "default": "/home/ahmad/.local/share/erigon"
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                }
            ],
            "subcommands": []
        },
        {
            "name": "erigon init",
            "description": "Bootstrap and initialize a new genesis block",
            "usage": "erigon init [command options]<genesisPath>",
            "options": [
                {
                    "option": "--datadir",
                    "description": "Data directory for the databases",
                    "value": "value",
                    "default": "/home/ahmad/.local/share/erigon"
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                }
            ],
            "subcommands": []
        },
        {
            "name": "erigon snapshots",
            "description": "Managing snapshots (historical data partitions)",
            "usage": "erigon snapshots command [command options]",
            "subcommands": [
                {
                    "name": "erigon snapshots compress",
                    "usage": "erigon snapshots compress [command options]",
                    "options": [
                        {
                            "option": "--datadir",
                            "description": "Data directory for the databases",
                            "value": "value",
                            "default": "/home/ahmad/.local/share/erigon"
                        },
                        {
                            "option": "--diagnostics.disabled",
                            "description": "Disable diagnostics",
                            "default": false
                        },
                        {
                            "option": "--diagnostics.endpoint.addr",
                            "description": "Diagnostics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--diagnostics.endpoint.port",
                            "description": "Diagnostics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--diagnostics.speedtest",
                            "description": "Enable speed test",
                            "default": false
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--log.console.json",
                            "description": "Format console logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--log.console.verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.delays",
                            "description": "Enable block delay logging",
                            "default": false
                        },
                        {
                            "option": "--log.dir.disable",
                            "description": "disable disk logging",
                            "default": false
                        },
                        {
                            "option": "--log.dir.json",
                            "description": "Format file logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--log.dir.path",
                            "description": "Path to store user and error logs to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.prefix",
                            "description": "The file name prefix for logs stored to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.verbosity",
                            "description": "Set the log verbosity for logs stored to disk",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.json",
                            "description": "Format console logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--metrics",
                            "description": "Enable metrics collection and reporting",
                            "default": false
                        },
                        {
                            "option": "--metrics.addr",
                            "description": "Enable stand-alone metrics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--metrics.port",
                            "description": "Metrics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--pprof",
                            "description": "Enable the pprof HTTP server",
                            "default": false
                        },
                        {
                            "option": "--pprof.addr",
                            "description": "pprof HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--pprof.cpuprofile",
                            "description": "Write CPU profile to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--pprof.port",
                            "description": "pprof HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--trace",
                            "description": "Write execution trace to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "erigon snapshots decompress_speed",
                    "description": "erigon snapshots decompress_speed",
                    "usage": "erigon snapshots decompress_speed [command options]",
                    "options": [
                        {
                            "option": "--datadir",
                            "description": "Data directory for the databases",
                            "value": "value",
                            "default": "/home/ahmad/.local/share/erigon"
                        },
                        {
                            "option": "--diagnostics.disabled",
                            "description": "Disable diagnostics",
                            "default": false
                        },
                        {
                            "option": "--diagnostics.endpoint.addr",
                            "description": "Diagnostics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--diagnostics.endpoint.port",
                            "description": "Diagnostics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--diagnostics.speedtest",
                            "description": "Enable speed test",
                            "default": false
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--log.console.json",
                            "description": "Format console logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--log.console.verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.delays",
                            "description": "Enable block delay logging",
                            "default": false
                        },
                        {
                            "option": "--log.dir.disable",
                            "description": "disable disk logging",
                            "default": false
                        },
                        {
                            "option": "--log.dir.json",
                            "description": "Format file logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--log.dir.path",
                            "description": "Path to store user and error logs to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.prefix",
                            "description": "The file name prefix for logs stored to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.verbosity",
                            "description": "Set the log verbosity for logs stored to disk",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.json",
                            "description": "Format console logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--metrics",
                            "description": "Enable metrics collection and reporting",
                            "default": false
                        },
                        {
                            "option": "--metrics.addr",
                            "description": "Enable stand-alone metrics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--metrics.port",
                            "description": "Metrics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--pprof",
                            "description": "Enable the pprof HTTP server",
                            "default": false
                        },
                        {
                            "option": "--pprof.addr",
                            "description": "pprof HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--pprof.cpuprofile",
                            "description": "Write CPU profile to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--pprof.port",
                            "description": "pprof HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--trace",
                            "description": "Write execution trace to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "erigon snapshots diff",
                    "usage": "erigon snapshots diff [command options]",
                    "subcommands": [],
                    "options": [
                        {
                            "option": "--diagnostics.disabled",
                            "description": "Disable diagnostics",
                            "default": "false"
                        },
                        {
                            "option": "--diagnostics.endpoint.addr",
                            "description": "Diagnostics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--diagnostics.endpoint.port",
                            "description": "Diagnostics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--diagnostics.speedtest",
                            "description": "Enable speed test",
                            "default": "false"
                        },
                        {
                            "option": "--dst",
                            "value": "value"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--log.console.json",
                            "description": "Format console logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--log.console.verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.delays",
                            "description": "Enable block delay logging",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.disable",
                            "description": "disable disk logging",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.json",
                            "description": "Format file logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.path",
                            "description": "Path to store user and error logs to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.prefix",
                            "description": "The file name prefix for logs stored to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.verbosity",
                            "description": "Set the log verbosity for logs stored to disk",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.json",
                            "description": "Format console logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--metrics",
                            "description": "Enable metrics collection and reporting",
                            "default": "false"
                        },
                        {
                            "option": "--metrics.addr",
                            "description": "Enable stand-alone metrics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--metrics.port",
                            "description": "Metrics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--pprof",
                            "description": "Enable the pprof HTTP server",
                            "default": "false"
                        },
                        {
                            "option": "--pprof.addr",
                            "description": "pprof HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--pprof.cpuprofile",
                            "description": "Write CPU profile to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--pprof.port",
                            "description": "pprof HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--src",
                            "value": "value"
                        },
                        {
                            "option": "--trace",
                            "description": "Write execution trace to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        }
                    ]
                },
                {
                    "name": "erigon snapshots index",
                    "description": "Create all missed indices for snapshots. It also removing unsupported versions of existing indices and re-build them",
                    "usage": "erigon snapshots index [command options]",
                    "options": [
                        {
                            "option": "--datadir",
                            "description": "Data directory for the databases",
                            "value": "value",
                            "default": "/home/ahmad/.local/share/erigon"
                        },
                        {
                            "option": "--diagnostics.disabled",
                            "description": "Disable diagnostics",
                            "default": false
                        },
                        {
                            "option": "--diagnostics.endpoint.addr",
                            "description": "Diagnostics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--diagnostics.endpoint.port",
                            "description": "Diagnostics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--diagnostics.speedtest",
                            "description": "Enable speed test",
                            "default": false
                        },
                        {
                            "option": "--from",
                            "description": "From block number",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--log.console.json",
                            "description": "Format console logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--log.console.verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.delays",
                            "description": "Enable block delay logging",
                            "default": false
                        },
                        {
                            "option": "--log.dir.disable",
                            "description": "disable disk logging",
                            "default": false
                        },
                        {
                            "option": "--log.dir.json",
                            "description": "Format file logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--log.dir.path",
                            "description": "Path to store user and error logs to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.prefix",
                            "description": "The file name prefix for logs stored to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.verbosity",
                            "description": "Set the log verbosity for logs stored to disk",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.json",
                            "description": "Format console logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--metrics",
                            "description": "Enable metrics collection and reporting",
                            "default": false
                        },
                        {
                            "option": "--metrics.addr",
                            "description": "Enable stand-alone metrics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--metrics.port",
                            "description": "Metrics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--pprof",
                            "description": "Enable the pprof HTTP server",
                            "default": false
                        },
                        {
                            "option": "--pprof.addr",
                            "description": "pprof HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--pprof.cpuprofile",
                            "description": "Write CPU profile to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--pprof.port",
                            "description": "pprof HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--rebuild",
                            "description": "Force rebuild",
                            "default": false
                        },
                        {
                            "option": "--trace",
                            "description": "Write execution trace to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "erigon snapshots integrity",
                    "description": "erigon snapshots integrity",
                    "usage": "erigon snapshots integrity [command options]",
                    "options": [
                        {
                            "option": "--datadir",
                            "description": "Data directory for the databases",
                            "value": "value",
                            "default": "/home/ahmad/.local/share/erigon"
                        },
                        {
                            "option": "--diagnostics.disabled",
                            "description": "Disable diagnostics",
                            "default": "false"
                        },
                        {
                            "option": "--diagnostics.endpoint.addr",
                            "description": "Diagnostics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--diagnostics.endpoint.port",
                            "description": "Diagnostics HTTP server listening port",
                            "value": "value",
                            "default": "6060"
                        },
                        {
                            "option": "--diagnostics.speedtest",
                            "description": "Enable speed test",
                            "default": "false"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--log.console.json",
                            "description": "Format console logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--log.console.verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.delays",
                            "description": "Enable block delay logging",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.disable",
                            "description": "disable disk logging",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.json",
                            "description": "Format file logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.path",
                            "description": "Path to store user and error logs to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.prefix",
                            "description": "The file name prefix for logs stored to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.verbosity",
                            "description": "Set the log verbosity for logs stored to disk",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.json",
                            "description": "Format console logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--metrics",
                            "description": "Enable metrics collection and reporting",
                            "default": "false"
                        },
                        {
                            "option": "--metrics.addr",
                            "description": "Enable stand-alone metrics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--metrics.port",
                            "description": "Metrics HTTP server listening port",
                            "value": "value",
                            "default": "6060"
                        },
                        {
                            "option": "--pprof",
                            "description": "Enable the pprof HTTP server",
                            "default": "false"
                        },
                        {
                            "option": "--pprof.addr",
                            "description": "pprof HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--pprof.cpuprofile",
                            "description": "Write CPU profile to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--pprof.port",
                            "description": "pprof HTTP server listening port",
                            "value": "value",
                            "default": "6060"
                        },
                        {
                            "option": "--trace",
                            "description": "Write execution trace to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "erigon snapshots ram",
                    "usage": "erigon snapshots ram [command options]",
                    "options": [
                        {
                            "option": "--datadir",
                            "description": "Data directory for the databases",
                            "value": "value",
                            "default": "/home/ahmad/.local/share/erigon"
                        },
                        {
                            "option": "--diagnostics.disabled",
                            "description": "Disable diagnostics",
                            "default": false
                        },
                        {
                            "option": "--diagnostics.endpoint.addr",
                            "description": "Diagnostics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--diagnostics.endpoint.port",
                            "description": "Diagnostics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--diagnostics.speedtest",
                            "description": "Enable speed test",
                            "default": false
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--log.console.json",
                            "description": "Format console logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--log.console.verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.delays",
                            "description": "Enable block delay logging",
                            "default": false
                        },
                        {
                            "option": "--log.dir.disable",
                            "description": "disable disk logging",
                            "default": false
                        },
                        {
                            "option": "--log.dir.json",
                            "description": "Format file logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--log.dir.path",
                            "description": "Path to store user and error logs to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.prefix",
                            "description": "The file name prefix for logs stored to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.verbosity",
                            "description": "Set the log verbosity for logs stored to disk",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.json",
                            "description": "Format console logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--metrics",
                            "description": "Enable metrics collection and reporting",
                            "default": false
                        },
                        {
                            "option": "--metrics.addr",
                            "description": "Enable stand-alone metrics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--metrics.port",
                            "description": "Metrics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--pprof",
                            "description": "Enable the pprof HTTP server",
                            "default": false
                        },
                        {
                            "option": "--pprof.addr",
                            "description": "pprof HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--pprof.cpuprofile",
                            "description": "Write CPU profile to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--pprof.port",
                            "description": "pprof HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--trace",
                            "description": "Write execution trace to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "erigon snapshots retire",
                    "description": "erigon snapshots uncompress a.seg | erigon snapshots compress b.seg",
                    "usage": "erigon snapshots retire [command options]",
                    "options": [
                        {
                            "option": "--datadir",
                            "description": "Data directory for the databases",
                            "value": "value",
                            "default": "/home/ahmad/.local/share/erigon"
                        },
                        {
                            "option": "--diagnostics.disabled",
                            "description": "Disable diagnostics",
                            "default": "false"
                        },
                        {
                            "option": "--diagnostics.endpoint.addr",
                            "description": "Diagnostics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--diagnostics.endpoint.port",
                            "description": "Diagnostics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--diagnostics.speedtest",
                            "description": "Enable speed test",
                            "default": "false"
                        },
                        {
                            "option": "--every",
                            "description": "Do operation every N blocks",
                            "value": "value",
                            "default": 1000
                        },
                        {
                            "option": "--from",
                            "description": "From block number",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--log.console.json",
                            "description": "Format console logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--log.console.verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.delays",
                            "description": "Enable block delay logging",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.disable",
                            "description": "disable disk logging",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.json",
                            "description": "Format file logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.path",
                            "description": "Path to store user and error logs to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.prefix",
                            "description": "The file name prefix for logs stored to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.verbosity",
                            "description": "Set the log verbosity for logs stored to disk",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.json",
                            "description": "Format console logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--metrics",
                            "description": "Enable metrics collection and reporting",
                            "default": "false"
                        },
                        {
                            "option": "--metrics.addr",
                            "description": "Enable stand-alone metrics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--metrics.port",
                            "description": "Metrics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--pprof",
                            "description": "Enable the pprof HTTP server",
                            "default": "false"
                        },
                        {
                            "option": "--pprof.addr",
                            "description": "pprof HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--pprof.cpuprofile",
                            "description": "Write CPU profile to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--pprof.port",
                            "description": "pprof HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--to",
                            "description": "To block number. Zero - means unlimited.",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--trace",
                            "description": "Write execution trace to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "erigon snapshots uncompress",
                    "description": "erigon snapshots uncompress a.seg | erigon snapshots compress b.seg",
                    "usage": "erigon snapshots uncompress [command options]",
                    "options": [
                        {
                            "option": "--diagnostics.disabled",
                            "description": "Disable diagnostics",
                            "default": false
                        },
                        {
                            "option": "--diagnostics.endpoint.addr",
                            "description": "Diagnostics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--diagnostics.endpoint.port",
                            "description": "Diagnostics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--diagnostics.speedtest",
                            "description": "Enable speed test",
                            "default": false
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--log.console.json",
                            "description": "Format console logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--log.console.verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.delays",
                            "description": "Enable block delay logging",
                            "default": false
                        },
                        {
                            "option": "--log.dir.disable",
                            "description": "disable disk logging",
                            "default": false
                        },
                        {
                            "option": "--log.dir.json",
                            "description": "Format file logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--log.dir.path",
                            "description": "Path to store user and error logs to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.prefix",
                            "description": "The file name prefix for logs stored to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.verbosity",
                            "description": "Set the log verbosity for logs stored to disk",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.json",
                            "description": "Format console logs with JSON",
                            "default": false
                        },
                        {
                            "option": "--metrics",
                            "description": "Enable metrics collection and reporting",
                            "default": false
                        },
                        {
                            "option": "--metrics.addr",
                            "description": "Enable stand-alone metrics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--metrics.port",
                            "description": "Metrics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--pprof",
                            "description": "Enable the pprof HTTP server",
                            "default": false
                        },
                        {
                            "option": "--pprof.addr",
                            "description": "pprof HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--pprof.cpuprofile",
                            "description": "Write CPU profile to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--pprof.port",
                            "description": "pprof HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--trace",
                            "description": "Write execution trace to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "erigon snapshots uploader",
                    "description": "run erigon in snapshot upload mode (no execution)",
                    "usage": "erigon snapshots uploader [command options]",
                    "options": [
                        {
                            "option": "--allow-insecure-unlock",
                            "description": "Allow insecure account unlocking when account-related RPCs are exposed by http",
                            "default": "false"
                        },
                        {
                            "option": "--authrpc.addr",
                            "description": "HTTP-RPC server listening interface for the Engine API",
                            "value": "value",
                            "default": "localhost"
                        },
                        {
                            "option": "--authrpc.jwtsecret",
                            "description": "Path to the token that ensures safe connection between CL and EL",
                            "value": "value"
                        },
                        {
                            "option": "--authrpc.port",
                            "description": "HTTP-RPC server listening port for the Engine API",
                            "value": "value",
                            "default": "8551"
                        },
                        {
                            "option": "--authrpc.timeouts.idle",
                            "description": "Maximum amount of time to wait for the next request when keep-alives are enabled. If authrpc.timeouts.idle is zero, the value of authrpc.timeouts.read is used.",
                            "value": "value",
                            "default": "2m0s"
                        },
                        {
                            "option": "--authrpc.timeouts.read",
                            "description": "Maximum duration for reading the entire request, including the body.",
                            "value": "value",
                            "default": "30s"
                        },
                        {
                            "option": "--authrpc.timeouts.write",
                            "description": "Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read.",
                            "value": "value",
                            "default": "30m0s"
                        },
                        {
                            "option": "--authrpc.vhosts",
                            "description": "Comma separated list of virtual hostnames from which to accept Engine API requests (server enforced). Accepts 'any' or '*' as wildcard.",
                            "value": "value",
                            "default": "localhost"
                        },
                        {
                            "option": "--bad.block",
                            "description": "Marks block with given hex string as bad and forces initial reorg before normal staged sync",
                            "value": "value"
                        },
                        {
                            "option": "--batchSize",
                            "description": "Batch size for the execution stage",
                            "value": "value",
                            "default": "256M"
                        },
                        {
                            "option": "--beacon.api",
                            "description": "Enable beacon API (avaiable endpoints: beacon, builder, config, debug, events, node, validator, lighthouse)",
                            "value": "value"
                        },
                        {
                            "option": "--beacon.api.addr",
                            "description": "sets the host to listen for beacon api requests",
                            "value": "value",
                            "default": "localhost"
                        },
                        {
                            "option": "--beacon.api.cors.allow-credentials",
                            "description": "set the cors' allow credentials",
                            "default": "false"
                        },
                        {
                            "option": "--beacon.api.cors.allow-methods",
                            "description": "set the cors' allow methods",
                            "value": "value",
                            "default": "GET, POST, PUT, DELETE, OPTIONS"
                        },
                        {
                            "option": "--beacon.api.cors.allow-origins",
                            "description": "set the cors' allow origins",
                            "value": "value"
                        },
                        {
                            "option": "--beacon.api.ide.timeout",
                            "description": "Sets the seconds for a write time out in the beacon api",
                            "value": "value",
                            "default": 25
                        },
                        {
                            "option": "--beacon.api.port",
                            "description": "sets the port to listen for beacon api requests",
                            "value": "value",
                            "default": 5555
                        },
                        {
                            "option": "--beacon.api.protocol",
                            "description": "Protocol for beacon API",
                            "value": "value",
                            "default": "tcp"
                        },
                        {
                            "option": "--beacon.api.read.timeout",
                            "description": "Sets the seconds for a read time out in the beacon api",
                            "value": "value",
                            "default": 5
                        },
                        {
                            "option": "--beacon.api.write.timeout",
                            "description": "Sets the seconds for a write time out in the beacon api",
                            "value": "value",
                            "default": 5
                        },
                        {
                            "option": "--bodies.cache",
                            "description": "Limit on the cache for block bodies",
                            "value": "value",
                            "default": "268435456"
                        },
                        {
                            "option": "--bootnodes",
                            "description": "Comma separated enode URLs for P2P discovery bootstrap",
                            "value": "value"
                        },
                        {
                            "option": "--bor.heimdall",
                            "description": "URL of Heimdall service",
                            "value": "value",
                            "default": "http://localhost:1317"
                        },
                        {
                            "option": "--bor.milestone",
                            "description": "Enabling bor milestone processing",
                            "default": "true"
                        },
                        {
                            "option": "--bor.minblocksize",
                            "description": "Ignore the bor block period and wait for 'blocksize' transactions (for testing purposes)",
                            "default": "false"
                        },
                        {
                            "option": "--bor.milestone",
                            "description": "Enabling bor milestone processing",
                            "default": "true"
                        },
                        {
                            "option": "--bor.period",
                            "description": "Override the bor block period (for testing purposes)",
                            "default": "false"
                        },
                        {
                            "option": "--bor.waypoints",
                            "description": "Enabling bor waypont recording",
                            "default": "false"
                        },
                        {
                            "option": "--bor.withoutheimdall",
                            "description": "Run without Heimdall service (for testing purposes)",
                            "default": "false"
                        },
                        {
                            "option": "--caplin.archive",
                            "description": "enables archival node in caplin",
                            "default": "false"
                        },
                        {
                            "option": "--caplin.backfilling",
                            "description": "sets whether backfilling is enabled for caplin",
                            "default": "false"
                        },
                        {
                            "option": "--caplin.backfilling.blob",
                            "description": "sets whether backfilling is enabled for caplin",
                            "default": "false"
                        },
                        {
                            "option": "--caplin.backfilling.blob.no-pruning",
                            "description": "disable blob pruning in caplin",
                            "default": "false"
                        },
                        {
                            "option": "--chain",
                            "description": "name of the network to join",
                            "value": "value",
                            "default": "mainnet"
                        },
                        {
                            "option": "--clique.checkpoint",
                            "description": "Number of blocks after which to save the vote snapshot to the database",
                            "value": "value",
                            "default": 10
                        },
                        {
                            "option": "--clique.datadir",
                            "description": "Path to clique db folder",
                            "value": "value"
                        },
                        {
                            "option": "--clique.signatures",
                            "description": "Number of recent block signatures to keep in memory",
                            "value": "value",
                            "default": 16384
                        },
                        {
                            "option": "--clique.snapshots",
                            "description": "Number of recent vote snapshots to keep in memory",
                            "value": "value",
                            "default": 1024
                        },
                        {
                            "option": "--database.verbosity",
                            "description": "Enabling internal db logs. Very high verbosity levels may require recompile db. Default: 2, means warning.",
                            "value": "value",
                            "default": 2
                        },
                        {
                            "option": "--datadir",
                            "description": "Data directory for the databases",
                            "value": "value",
                            "default": "/home/ahmad/.local/share/erigon"
                        },
                        {
                            "option": "--db.pagesize",
                            "description": "DB is splitted to 'pages' of fixed size. Can't change DB creation. Must be power of 2 and '256b <= pagesize <= 64kb'. Default: equal to OperationSystem's pageSize. Bigger pageSize causing: 1. More writes to disk during commit 2. Smaller b-tree high 3. Less fragmentation 4. Less overhead on 'free-pages list' maintainance (a bit faster Put/Commit) 5. If expecting DB-size > 8Tb then set pageSize >= 8Kb",
                            "value": "value",
                            "default": "8KB"
                        },
                        {
                            "option": "--db.read.concurrency",
                            "description": "Does limit amount of parallel db reads. Default: equal to GOMAXPROCS (or number of CPU)",
                            "value": "value",
                            "default": 768
                        },
                        {
                            "option": "--db.size.limit",
                            "description": "Runtime limit of chaindata db size. You can change value of this flag at any time.",
                            "value": "value",
                            "default": "12TB"
                        },
                        {
                            "option": "--diagnostics.disabled",
                            "description": "Disable diagnostics",
                            "default": "false"
                        },
                        {
                            "option": "--diagnostics.endpoint.addr",
                            "description": "Diagnostics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--diagnostics.endpoint.port",
                            "description": "Diagnostics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--diagnostics.speedtest",
                            "description": "Enable speed test",
                            "default": "false"
                        },
                        {
                            "option": "--discovery.dns",
                            "description": "Sets DNS discovery entry points (use \"\" to disable DNS)",
                            "value": "value"
                        },
                        {
                            "option": "--downloader.api.addr",
                            "description": "downloader address '<host>:<port>'",
                            "value": "value"
                        },
                        {
                            "option": "--downloader.disable.ipv4",
                            "description": "Turns off ipv4 for the downloader",
                            "default": "false"
                        },
                        {
                            "option": "--downloader.disable.ipv6",
                            "description": "Turns off ipv6 for the downloader",
                            "default": "false"
                        },
                        {
                            "option": "--downloader.verify",
                            "description": "Verify snapshots on startup. It will not report problems found, but re-download broken pieces.",
                            "default": "false"
                        },
                        {
                            "option": "--download.location",
                            "description": "Location to upload snapshot segments to",
                            "value": "value"
                        },
                        {
                            "option": "--download.rate",
                            "description": "Bytes per second, example: 32mb",
                            "value": "value",
                            "default": "16mb"
                        },
                        {
                            "option": "--download.slots",
                            "description": "Amount of files to download in parallel. If network has enough seeders 1-3 slot enough, if network has lack of seeders increase to 5-7 (too big value will slow down everything).",
                            "value": "value",
                            "default": 3
                        },
                        {
                            "option": "--ethash.dagdir",
                            "description": "Directory to store the ethash mining DAGs",
                            "value": "value",
                            "default": "/home/ahmad/.local/share/erigon-ethash"
                        },
                        {
                            "option": "--ethstats",
                            "description": "Reporting URL of a ethstats service (nodename:secret@host:port)",
                            "value": "value"
                        },
                        {
                            "option": "--etl.bufferSize",
                            "description": "Buffer size for ETL operations.",
                            "value": "value",
                            "default": "256MB"
                        },
                        {
                            "option": "--fakepow",
                            "description": "Disables proof-of-work verification",
                            "default": "false"
                        },
                        {
                            "option": "--force.partial.commit",
                            "description": "Force data commit after each stage (or even do multiple commits per 1 stage - to save it's progress). Don't use this flag if node is synced. Meaning: readers (users of RPC) would like to see 'fully consistent' data (block is executed and all indices are updated). Erigon guarantee this level of data-consistency. But 1 downside: after restore node from backup - it can't save partial progress (non-committed progress will be lost at restart). This flag will be removed in future if we can find automatic way to detect corner-cases.",
                            "default": "false"
                        },
                        {
                            "option": "--gpo.blocks",
                            "description": "Number of recent blocks to check for gas prices",
                            "value": "value",
                            "default": 20
                        },
                        {
                            "option": "--gpo.percentile",
                            "description": "Suggested gas price is the given percentile of a set of recent transaction gas prices",
                            "value": "value",
                            "default": 60
                        },
                        {
                            "option": "--graphql",
                            "description": "Enable the graphql endpoint",
                            "default": "false"
                        },
                        {
                            "option": "--healthcheck",
                            "description": "Enable grpc health check",
                            "default": "false"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--http",
                            "description": "JSON-RPC server (enabled by default). Use --http=false to disable it",
                            "default": "true"
                        },
                        {
                            "option": "--http.addr",
                            "description": "HTTP-RPC server listening interface",
                            "value": "value",
                            "default": "localhost"
                        },
                        {
                            "option": "--http.api",
                            "description": "API's offered over the HTTP-RPC interface",
                            "value": "value",
                            "default": "eth,erigon,engine"
                        },
                        {
                            "option": "--http.compression",
                            "description": "Enable compression over HTTP-RPC",
                            "default": "false"
                        },
                        {
                            "option": "--http.corsdomain",
                            "description": "Comma separated list of domains from which to accept cross origin requests (browser enforced)",
                            "value": "value"
                        },
                        {
                            "option": "--http.dbg.single",
                            "description": "Allow pass HTTP header 'dbg: true' to printt more detailed logs - how this request was executed",
                            "default": "false"
                        },
                        {
                            "option": "--http.enabled",
                            "description": "JSON-RPC HTTP server (enabled by default). Use --http.enabled=false to disable it",
                            "default": "true"
                        },
                        {
                            "option": "--http.port",
                            "description": "HTTP-RPC server listening port",
                            "value": "value",
                            "default": 8545
                        },
                        {
                            "option": "--http.timeouts.idle",
                            "description": "Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used.",
                            "value": "value",
                            "default": "2m0s"
                        },
                        {
                            "option": "--http.timeouts.read",
                            "description": "Maximum duration for reading the entire request, including the body.",
                            "value": "value",
                            "default": "30s"
                        },
                        {
                            "option": "--http.timeouts.write",
                            "description": "Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read.",
                            "value": "value",
                            "default": "30m0s"
                        },
                        {
                            "option": "--http.trace",
                            "description": "Print all HTTP requests to logs with INFO level",
                            "default": "false"
                        },
                        {
                            "option": "--http.vhosts",
                            "description": "Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts 'any' or '*' as wildcard.",
                            "value": "value",
                            "default": "localhost"
                        },
                        {
                            "option": "--identity",
                            "description": "Custom node name",
                            "value": "value"
                        },
                        {
                            "option": "--internalcl",
                            "description": "Enables internal consensus",
                            "default": "false"
                        },
                        {
                            "option": "--lightclient.discovery.addr",
                            "description": "Address for lightclient DISCV5 protocol",
                            "value": "value",
                            "default": "127.0.0.1"
                        },
                        {
                            "option": "--lightclient.discovery.port",
                            "description": "Port for lightclient DISCV5 protocol",
                            "value": "value",
                            "default": 4000
                        },
                        {
                            "option": "--lightclient.discovery.tcpport",
                            "description": "TCP Port for lightclient DISCV5 protocol",
                            "value": "value",
                            "default": 4001
                        },
                        {
                            "option": "--log.console.json",
                            "description": "Format console logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--log.console.verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.delays",
                            "description": "Enable block delay logging",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.disable",
                            "description": "disable disk logging",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.json",
                            "description": "Format file logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--log.dir.path",
                            "description": "Path to store user and error logs to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.prefix",
                            "description": "The file name prefix for logs stored to disk",
                            "value": "value"
                        },
                        {
                            "option": "--log.dir.verbosity",
                            "description": "Set the log verbosity for logs stored to disk",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--log.json",
                            "description": "Format console logs with JSON",
                            "default": "false"
                        },
                        {
                            "option": "--maxpeers",
                            "description": "Maximum number of network peers (network disabled if set to 0)",
                            "value": "value",
                            "default": 100
                        },
                        {
                            "option": "--metrics",
                            "description": "Enable metrics collection and reporting",
                            "default": "false"
                        },
                        {
                            "option": "--metrics.addr",
                            "description": "Enable stand-alone metrics HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--metrics.port",
                            "description": "Metrics HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--mine",
                            "description": "Enable mining",
                            "default": "false"
                        },
                        {
                            "option": "--miner.etherbase",
                            "description": "Public address for block mining rewards",
                            "value": "value",
                            "default": "0"
                        },
                        {
                            "option": "--miner.extradata",
                            "description": "Block extra data set by the miner (default = client version)",
                            "value": "value"
                        },
                        {
                            "option": "--miner.gaslimit",
                            "description": "Target gas limit for mined blocks",
                            "value": "value",
                            "default": 30000000
                        },
                        {
                            "option": "--miner.noverify",
                            "description": "Disable remote sealing verification",
                            "default": "false"
                        },
                        {
                            "option": "--miner.notify",
                            "description": "Comma separated HTTP URL list to notify of new work packages",
                            "value": "value"
                        },
                        {
                            "option": "--miner.recommit",
                            "description": "Time interval to recreate the block being mined",
                            "value": "value",
                            "default": "3s"
                        },
                        {
                            "option": "--miner.sigfile",
                            "description": "Private key to sign blocks with",
                            "value": "value"
                        },
                        {
                            "option": "--nat",
                            "description": "NAT port mapping mechanism (any|none|upnp|pmp|stun|extip:<IP>)\n\"\" or \"none\" Default - do not nat\n\"extip:77.12.33.4\" Will assume the local machine is reachable on the given IP\n\"any\" Uses the first auto-detected mechanism\n\"upnp\" Uses the Universal Plug and Play protocol\n\"pmp\" Uses NAT-PMP with an auto-detected gateway address\n\"pmp:192.168.0.1\" Uses NAT-PMP with the given gateway address\n\"stun\" Uses STUN to detect an external IP using a default server\n\"stun:<server>\" Uses STUN to detect an external IP using the given server (host:port)",
                            "value": "value"
                        },
                        {
                            "option": "--netrestrict",
                            "description": "Restricts network communication to the given IP networks (CIDR masks)",
                            "value": "value"
                        },
                        {
                            "option": "--networkid",
                            "description": "Explicitly set network id (integer)(For testnets: use --chain <testnet_name> instead)",
                            "value": "value",
                            "default": 1
                        },
                        {
                            "option": "--no-downloader",
                            "description": "Disables downloader component",
                            "default": "false"
                        },
                        {
                            "option": "--nodiscover",
                            "description": "Disables the peer discovery mechanism (manual peer addition)",
                            "default": "false"
                        },
                        {
                            "option": "--nodekey",
                            "description": "P2P node key file",
                            "value": "value"
                        },
                        {
                            "option": "--nodekeyhex",
                            "description": "P2P node key as hex (for testing)",
                            "value": "value"
                        },
                        {
                            "option": "--override.prague",
                            "description": "Manually specify the Prague fork time, overriding the bundled setting",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--p2p.allowed-ports",
                            "description": "Allowed ports to pick for different eth p2p protocol versions as follows <porta>,<portb>,..,<porti>",
                            "value": "value",
                            "default": "30303, 30304, 30305, 30306, 30307"
                        },
                        {
                            "option": "--p2p.protocol",
                            "description": "Version of eth p2p protocol",
                            "value": "value",
                            "default": "68, 67"
                        },
                        {
                            "option": "--polygon.sync",
                            "description": "Enabling syncing using the new polygon sync component",
                            "default": "false"
                        },
                        {
                            "option": "--port",
                            "description": "Network listening port",
                            "value": "value",
                            "default": 30303
                        },
                        {
                            "option": "--pprof",
                            "description": "Enable the pprof HTTP server",
                            "default": "false"
                        },
                        {
                            "option": "--pprof.addr",
                            "description": "pprof HTTP server listening interface",
                            "value": "value",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--pprof.cpuprofile",
                            "description": "Write CPU profile to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--pprof.port",
                            "description": "pprof HTTP server listening port",
                            "value": "value",
                            "default": 6060
                        },
                        {
                            "option": "--private.api.addr",
                            "description": "Erigon's components (txpool, rpcdaemon, sentry, downloader, ...) can be deployed as independent Processes on same/another server. Then components will connect to erigon by this internal grpc API. example: 127.0.0.1:9090, empty string means not to start the listener. do not expose to public network. serves remote database interface",
                            "value": "value",
                            "default": "127.0.0.1:9090"
                        },
                        {
                            "option": "--private.api.ratelimit",
                            "description": "Amount of requests server handle simultaneously - requests over this limit will wait. Increase it - if clients see 'request timeout' while server load is low - it means your 'hot data' is small or have much RAM.",
                            "value": "value",
                            "default": 31872
                        },
                        {
                            "option": "--prune",
                            "description": "Choose which ancient data delete from DB:\nh - prune history (ChangeSets, HistoryIndices - used by historical state access, like eth_getStorageAt, eth_getBalanceAt, debug_traceTransaction, trace_block, trace_transaction, etc.)\nr - prune receipts (Receipts, Logs, LogTopicIndex, LogAddressIndex - used by eth_getLogs and similar RPC methods)\nt - prune transaction by it's hash index\nc - prune call traces (used by trace_filter method)\nDoes delete data older than 90K blocks, --prune=h is shortcut for: --prune.h.older=90000.\nSimilarly, --prune=t is shortcut for: --prune.t.older=90000 and --prune=c is shortcut for: --prune.c.older=90000.\nHowever, --prune=r means to prune receipts before the Beacon Chain genesis (Consensus Layer might need receipts after that).\nIf an item is NOT on the list - means NO pruning for this data.\nExample: --prune=htc",
                            "value": "value",
                            "default": "disabled"
                        },
                        {
                            "option": "--prune.c.before",
                            "description": "Prune data before this block",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--prune.c.older",
                            "description": "Prune data older than this number of blocks from the tip of the chain (if --prune flag has 'c', then default is 90K)",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--prune.h.before",
                            "description": "Prune data before this block",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--prune.h.older",
                            "description": "Prune data older than this number of blocks from the tip of the chain (if --prune flag has 'h', then default is 90K)",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--prune.r.before",
                            "description": "Prune data before this block",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--prune.r.older",
                            "description": "Prune data older than this number of blocks from the tip of the chain",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--prune.t.before",
                            "description": "Prune data before this block",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--prune.t.older",
                            "description": "Prune data older than this number of blocks from the tip of the chain (if --prune flag has 't', then default is 90K)",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--proposer.disable",
                            "description": "Disables PoS proposer",
                            "default": "false"
                        },
                        {
                            "option": "--rpc.accessList",
                            "description": "Specify granular (method-by-method) API allowlist",
                            "value": "value"
                        },
                        {
                            "option": "--rpc.allow-unprotected-txs",
                            "description": "Allow for unprotected (non-EIP155 signed) transactions to be submitted via RPC",
                            "default": "false"
                        },
                        {
                            "option": "--rpc.batch.concurrency",
                            "description": "Does limit amount of goroutines to process 1 batch request. Means 1 bach request can't overload server. 1 batch still can have unlimited amount of request",
                            "value": "value",
                            "default": 2
                        },
                        {
                            "option": "--rpc.batch.limit",
                            "description": "Maximum number of requests in a batch",
                            "value": "value",
                            "default": 100
                        },
                        {
                            "option": "--rpc.evmtimeout",
                            "description": "Maximum amount of time to wait for the answer from EVM call.",
                            "value": "value",
                            "default": "5m0s"
                        },
                        {
                            "option": "--rpc.gascap",
                            "description": "Sets a cap on gas that can be used in eth_call/estimateGas",
                            "value": "value",
                            "default": 50000000
                        },
                        {
                            "option": "--rpc.maxgetproofrewindblockcount.limit",
                            "description": "Max GetProof rewind block count",
                            "value": "value",
                            "default": 100000
                        },
                        {
                            "option": "--rpc.overlay.getlogstimeout",
                            "description": "Maximum amount of time to wait for the answer from the overlay_getLogs call.",
                            "value": "value",
                            "default": "5m0s"
                        },
                        {
                            "option": "--rpc.overlay.replayblocktimeout",
                            "description": "Maximum amount of time to wait for the answer to replay a single block when called from an overlay_getLogs call.",
                            "value": "value",
                            "default": "10s"
                        },
                        {
                            "option": "--rpc.returndata.limit",
                            "description": "Maximum number of bytes returned from eth_call or similar invocations",
                            "value": "value",
                            "default": 100000
                        },
                        {
                            "option": "--rpc.slow",
                            "description": "Print in logs RPC requests slower than given threshold: 100ms, 1s, 1m. Exluded methods: eth_getBlock,eth_getBlockByNumber,eth_getBlockByHash,eth_blockNumber,erigon_blockNumber,erigon_getHeaderByNumber,erigon_getHeaderByHash,erigon_getBlockByTimestamp,eth_call",
                            "value": "value",
                            "default": "0s"
                        },
                        {
                            "option": "--rpc.streaming.disable",
                            "description": "Erigon has enabled json streaming for some heavy endpoints (like trace_*). It's a trade-off: greatly reduce amount of RAM (in some cases from 30GB to 30mb), but it produce invalid json format if error happened in the middle of streaming (because json is not streaming-friendly format)",
                            "default": "false"
                        },
                        {
                            "option": "--rpc.subscription.filters.maxaddresses",
                            "description": "Maximum number of addresses per subscription to filter logs by.",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--rpc.subscription.filters.maxheaders",
                            "description": "Maximum number of block headers to store per subscription.",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--rpc.subscription.filters.maxlogs",
                            "description": "Maximum number of logs to store per subscription.",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--rpc.subscription.filters.maxtopics",
                            "description": "Maximum number of topics per subscription to filter logs by.",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--rpc.subscription.filters.maxtxs",
                            "description": "Maximum number of transactions to store per subscription.",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--rpc.txfeecap",
                            "description": "Sets a cap on transaction fee (in ether) that can be sent via the RPC APIs (0 = no cap)",
                            "value": "value",
                            "default": 1
                        },
                        {
                            "option": "--sentry.api.addr",
                            "description": "Comma separated sentry addresses '<host>:<port>,<host>:<port>'",
                            "value": "value"
                        },
                        {
                            "option": "--sentry.log-peer-info",
                            "description": "Log detailed peer info when a peer connects or disconnects. Enable to integrate with observer.",
                            "default": "false"
                        },
                        {
                            "option": "--sentinel.addr",
                            "description": "Address for sentinel",
                            "value": "value",
                            "default": "localhost"
                        },
                        {
                            "option": "--sentinel.port",
                            "description": "Port for sentinel",
                            "value": "value",
                            "default": 7777
                        },
                        {
                            "option": "--silkworm.contexts",
                            "description": "Number of I/O contexts used in embedded Silkworm RPC and Sentry services (zero means use default in Silkworm)",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--silkworm.exec",
                            "description": "Enable Silkworm block execution",
                            "default": "false"
                        },
                        {
                            "option": "--silkworm.rpc",
                            "description": "Enable embedded Silkworm RPC service",
                            "default": "false"
                        },
                        {
                            "option": "--silkworm.rpc.compatibility",
                            "description": "Preserve JSON-RPC compatibility using embedded Silkworm RPC service",
                            "default": "true"
                        },
                        {
                            "option": "--silkworm.rpc.log",
                            "description": "Enable interface log for embedded Silkworm RPC service",
                            "default": "false"
                        },
                        {
                            "option": "--silkworm.rpc.log.maxfiles",
                            "description": "Max interface log files for embedded Silkworm RPC service",
                            "value": "value",
                            "default": 100
                        },
                        {
                            "option": "--silkworm.rpc.log.maxsize",
                            "description": "Max interface log file size in MB for embedded Silkworm RPC service",
                            "value": "value",
                            "default": 1
                        },
                        {
                            "option": "--silkworm.rpc.log.response",
                            "description": "Dump responses in interface logs for embedded Silkworm RPC service",
                            "default": "false"
                        },
                        {
                            "option": "--silkworm.rpc.workers",
                            "description": "Number of worker threads used in embedded Silkworm RPC service (zero means use default in Silkworm)",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--silkworm.sentry",
                            "description": "Enable embedded Silkworm Sentry service",
                            "default": "false"
                        },
                        {
                            "option": "--silkworm.verbosity",
                            "description": "Set the log level for Silkworm console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--snap.keepblocks",
                            "description": "Keep ancient blocks in db (useful for debug)",
                            "default": "false"
                        },
                        {
                            "option": "--snap.stop",
                            "description": "Workaround to stop producing new snapshots, if you meet some snapshots-related critical bug. It will stop move historical data from DB to new immutable snapshots. DB will grow and may slightly slow-down - and removing this flag in future will not fix this effect (db size will not greatly reduce).",
                            "default": "false"
                        },
                        {
                            "option": "--snapshots",
                            "description": "Default: use snapshots \"true\" for Mainnet, Goerli, Gnosis Chain and Chiado. use snapshots \"false\" in all other cases",
                            "default": "true"
                        },
                        {
                            "option": "--state.cache",
                            "description": "Amount of data to store in StateCache (enabled if no --datadir set). Set 0 to disable StateCache. Defaults to 0MB",
                            "value": "value",
                            "default": "0MB"
                        },
                        {
                            "option": "--state.stream.disable",
                            "description": "Disable streaming of state changes from core to RPC daemon",
                            "default": "false"
                        },
                        {
                            "option": "--staticpeers",
                            "description": "Comma separated enode URLs to connect to",
                            "value": "value"
                        },
                        {
                            "option": "--sync.loop.block.limit",
                            "description": "Sets the maximum number of blocks to process per loop iteration",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--sync.loop.break.after",
                            "description": "Sets the last stage of the sync loop to run",
                            "value": "value"
                        },
                        {
                            "option": "--sync.loop.prune.limit",
                            "description": "Sets the maximum number of block to prune per loop iteration",
                            "value": "value",
                            "default": 100
                        },
                        {
                            "option": "--tls",
                            "description": "Enable TLS handshake",
                            "default": "false"
                        },
                        {
                            "option": "--tls.cacert",
                            "description": "Specify certificate authority",
                            "value": "value"
                        },
                        {
                            "option": "--tls.cert",
                            "description": "Specify certificate",
                            "value": "value"
                        },
                        {
                            "option": "--tls.key",
                            "description": "Specify key file",
                            "value": "value"
                        },
                        {
                            "option": "--torrent.conns.perfile",
                            "description": "Number of connections per file",
                            "value": "value",
                            "default": 10
                        },
                        {
                            "option": "--torrent.download.rate",
                            "description": "Bytes per second, example: 32mb",
                            "value": "value",
                            "default": "16mb"
                        },
                        {
                            "option": "--torrent.download.slots",
                            "description": "Amount of files to download in parallel. If network has enough seeders 1-3 slot enough, if network has lack of seeders increase to 5-7 (too big value will slow down everything).",
                            "value": "value",
                            "default": 3
                        },
                        {
                            "option": "--torrent.maxpeers",
                            "description": "Unused parameter (reserved for future use)",
                            "value": "value",
                            "default": 100
                        },
                        {
                            "option": "--torrent.port",
                            "description": "Port to listen and serve BitTorrent protocol",
                            "value": "value",
                            "default": 42069
                        },
                        {
                            "option": "--torrent.staticpeers",
                            "description": "Comma separated enode URLs to connect to",
                            "value": "value"
                        },
                        {
                            "option": "--torrent.upload.rate",
                            "description": "Bytes per second, example: 32mb",
                            "value": "value",
                            "default": "4mb"
                        },
                        {
                            "option": "--torrent.verbosity",
                            "description": "0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=detail (must set --verbosity to equal or higher level and has default: 2)",
                            "value": "value",
                            "default": 2
                        },
                        {
                            "option": "--trace",
                            "description": "Write execution trace to the given file",
                            "value": "value"
                        },
                        {
                            "option": "--trace.compat",
                            "description": "Bug for bug compatibility with OE for trace_ routines",
                            "default": "false"
                        },
                        {
                            "option": "--trace.maxtraces",
                            "description": "Sets a limit on traces that can be returned in trace_filter",
                            "value": "value",
                            "default": 200
                        },
                        {
                            "option": "--trusted-setup-file",
                            "description": "Absolute path to trusted_setup.json file",
                            "value": "value"
                        },
                        {
                            "option": "--trustedpeers",
                            "description": "Comma separated enode URLs which are always allowed to connect, even above the peer limit",
                            "value": "value"
                        },
                        {
                            "option": "--txpool.accountqueue",
                            "description": "Maximum number of non-executable transaction slots permitted per account",
                            "value": "value",
                            "default": 64
                        },
                        {
                            "option": "--txpool.accountslots",
                            "description": "Minimum number of executable transaction slots guaranteed per account",
                            "value": "value",
                            "default": 16
                        },
                        {
                            "option": "--txpool.api.addr",
                            "description": "TxPool api network address, for example: 127.0.0.1:9090",
                            "value": "value",
                            "default": "use value of --private.api.addr"
                        },
                        {
                            "option": "--txpool.blobpricebump",
                            "description": "Price bump percentage to replace existing (type-3) blob transaction",
                            "value": "value",
                            "default": 100
                        },
                        {
                            "option": "--txpool.blobslots",
                            "description": "Max allowed total number of blobs (within type-3 txs) per account",
                            "value": "value",
                            "default": 48
                        },
                        {
                            "option": "--txpool.commit.every",
                            "description": "How often transactions should be committed to the storage",
                            "value": "value",
                            "default": "15s"
                        },
                        {
                            "option": "--txpool.disable",
                            "description": "Experimental external pool and block producer, see ./cmd/txpool/readme.md for more info. Disabling internal txpool and block producer.",
                            "default": "false"
                        },
                        {
                            "option": "--txpool.gossip.disable",
                            "description": "Disabling p2p gossip of txs. Any txs received by p2p - will be dropped. Some networks like 'Optimism execution engine'/'Optimistic Rollup' - using it to protect against MEV attacks",
                            "default": "false"
                        },
                        {
                            "option": "--txpool.globalbasefeeslots",
                            "description": "Maximum number of non-executable transactions where only not enough baseFee",
                            "value": "value",
                            "default": 30000
                        },
                        {
                            "option": "--txpool.globalqueue",
                            "description": "Maximum number of non-executable transaction slots for all accounts",
                            "value": "value",
                            "default": 30000
                        },
                        {
                            "option": "--txpool.globalslots",
                            "description": "Maximum number of executable transaction slots for all accounts",
                            "value": "value",
                            "default": 10000
                        },
                        {
                            "option": "--txpool.locals",
                            "description": "Comma separated accounts to treat as locals (no flush, priority inclusion)",
                            "value": "value"
                        },
                        {
                            "option": "--txpool.lifetime",
                            "description": "Maximum amount of time non-executable transaction are queued",
                            "value": "value",
                            "default": "3h0m0s"
                        },
                        {
                            "option": "--txpool.nolocals",
                            "description": "Disables price exemptions for locally submitted transactions",
                            "default": "false"
                        },
                        {
                            "option": "--txpool.pricelimit",
                            "description": "Minimum gas price (fee cap) limit to enforce for acceptance into the pool",
                            "value": "value",
                            "default": 1
                        },
                        {
                            "option": "--txpool.pricebump",
                            "description": "Price bump percentage to replace an already existing transaction",
                            "value": "value",
                            "default": 10
                        },
                        {
                            "option": "--txpool.trace.senders",
                            "description": "Comma separated list of addresses, whose transactions will traced in transaction pool with debug printing",
                            "value": "value"
                        },
                        {
                            "option": "--upload.from",
                            "description": "Blocks to upload from: number, or 'earliest' (start of the chain), 'latest' (last segment previously uploaded)",
                            "value": "value",
                            "default": "latest"
                        },
                        {
                            "option": "--upload.location",
                            "description": "Location to upload snapshot segments to",
                            "value": "value"
                        },
                        {
                            "option": "--upload.snapshot.limit",
                            "description": "Sets the maximum number of snapshot blocks to hold on the local disk when uploading",
                            "value": "value",
                            "default": 1500000
                        },
                        {
                            "option": "--v5disc",
                            "description": "Enables the experimental RLPx V5 (Topic Discovery) mechanism",
                            "default": "false"
                        },
                        {
                            "option": "--verbosity",
                            "description": "Set the log level for console logs",
                            "value": "value",
                            "default": "info"
                        },
                        {
                            "option": "--vmdebug",
                            "description": "Record information useful for VM and contract debugging",
                            "default": "false"
                        },
                        {
                            "option": "--webseed",
                            "description": "Comma-separated URL's, holding metadata about network-support infrastructure (like S3 buckets with snapshots, bootnodes, etc...)",
                            "value": "value"
                        },
                        {
                            "option": "--ws",
                            "description": "Enable the WS-RPC server",
                            "default": "false"
                        },
                        {
                            "option": "--ws.compression",
                            "description": "Enable compression over WebSocket",
                            "default": "false"
                        },
                        {
                            "option": "--ws.port",
                            "description": "WS-RPC server listening port",
                            "value": "value",
                            "default": 8546
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                }
            ]
        },
        {
            "name": "erigon support",
            "description": "The support command connects a running Erigon instances to a diagnostics system specified by the URL.",
            "usage": "erigon support [command options]--diagnostics.addr <URL for the diagnostics system> --ids <diagnostic session ids allowed to connect> --metrics.urls <http://erigon_host:metrics_port>",
            "options": [
                {
                    "option": "--debug.addrs",
                    "description": "Comma separated list of URLs to the debug endpoints thats are being diagnosed",
                    "value": "value",
                    "default": "localhost:6060"
                },
                {
                    "option": "--diagnostics.addr",
                    "description": "Address of the diagnostics system provided by the support team, include unique session PIN",
                    "value": "value",
                    "default": "localhost:8080"
                },
                {
                    "option": "--diagnostics.sessions",
                    "description": "Comma separated list of support session ids to connect to",
                    "value": "value"
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                },
                {
                    "option": "--insecure",
                    "description": "Allows communication with diagnostics system using self-signed TLS certificates",
                    "default": false
                },
                {
                    "option": "--pprof",
                    "description": "Enable the pprof HTTP server",
                    "default": false
                },
                {
                    "option": "--pprof.addr",
                    "description": "pprof HTTP server listening interface",
                    "value": "value",
                    "default": "0.0.0.0"
                },
                {
                    "option": "--pprof.cpuprofile",
                    "description": "Write CPU profile to the given file",
                    "value": "value"
                },
                {
                    "option": "--pprof.port",
                    "description": "pprof HTTP server listening port",
                    "value": "value",
                    "default": 6060
                },
                {
                    "option": "--trace",
                    "description": "Write execution trace to the given file",
                    "value": "value"
                }
            ],
            "subcommands": []
        }
    ],
    "options": [
        {
            "option": "--allow-insecure-unlock",
            "description": "Allow insecure account unlocking when account-related RPCs are exposed by http",
            "default": false
        },
        {
            "option": "--authrpc.addr",
            "description": "HTTP-RPC server listening interface for the Engine API",
            "default": "localhost"
        },
        {
            "option": "--authrpc.jwtsecret",
            "description": "Path to the token that ensures safe connection between CL and EL"
        },
        {
            "option": "--authrpc.port",
            "description": "HTTP-RPC server listening port for the Engine API",
            "default": 8551
        },
        {
            "option": "--authrpc.timeouts.idle",
            "description": "Maximum amount of time to wait for the next request when keep-alives are enabled. If authrpc.timeouts.idle is zero, the value of authrpc.timeouts.read is used.",
            "default": "2m0s"
        },
        {
            "option": "--authrpc.timeouts.read",
            "description": "Maximum duration for reading the entire request, including the body.",
            "default": "30s"
        },
        {
            "option": "--authrpc.timeouts.write",
            "description": "Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read.",
            "default": "30m0s"
        },
        {
            "option": "--bad.block",
            "description": "Marks block with given hex string as bad and forces initial reorg before normal staged sync"
        },
        {
            "option": "--batchSize",
            "description": "Batch size for the execution stage",
            "default": "256M"
        },
        {
            "option": "--beacon.api",
            "description": "Enable beacon API (avaiable endpoints: beacon, builder, config, debug, events, node, validator, lighthouse)"
        },
        {
            "option": "--beacon.api.addr",
            "description": "sets the host to listen for beacon api requests",
            "default": "localhost"
        },
        {
            "option": "--beacon.api.cors.allow-credentials",
            "description": "set the cors' allow credentials",
            "default": false
        },
        {
            "option": "--beacon.api.cors.allow-methods",
            "description": "set the cors' allow methods",
            "default": "GET, POST, PUT, DELETE, OPTIONS"
        },
        {
            "option": "--beacon.api.cors.allow-origins",
            "description": "set the cors' allow origins"
        },
        {
            "option": "--beacon.api.ide.timeout",
            "description": "Sets the seconds for a write time out in the beacon api",
            "default": 25
        },
        {
            "option": "--beacon.api.port",
            "description": "sets the port to listen for beacon api requests",
            "default": 5555
        },
        {
            "option": "--beacon.api.protocol",
            "description": "Protocol for beacon API",
            "default": "tcp"
        },
        {
            "option": "--beacon.api.read.timeout",
            "description": "Sets the seconds for a read time out in the beacon api",
            "default": 5
        },
        {
            "option": "--beacon.api.write.timeout",
            "description": "Sets the seconds for a write time out in the beacon api",
            "default": 5
        },
        {
            "option": "--bodies.cache",
            "description": "Limit on the cache for block bodies",
            "default": "268435456"
        },
        {
            "option": "--bootnodes",
            "description": "Comma separated enode URLs for P2P discovery bootstrap"
        },
        {
            "option": "--bor.heimdall",
            "description": "URL of Heimdall service",
            "default": "http://localhost:1317"
        },
        {
            "option": "--bor.milestone",
            "description": "Enabling bor milestone processing",
            "default": true
        },
        {
            "option": "--bor.minblocksize",
            "description": "Ignore the bor block period and wait for 'blocksize' transactions (for testing purposes)",
            "default": false
        },
        {
            "option": "--bor.period",
            "description": "Override the bor block period (for testing purposes)",
            "default": false
        },
        {
            "option": "--bor.waypoints",
            "description": "Enabling bor waypont recording",
            "default": false
        },
        {
            "option": "--bor.withoutheimdall",
            "description": "Run without Heimdall service (for testing purposes)",
            "default": false
        },
        {
            "option": "--caplin.archive",
            "description": "enables archival node in caplin",
            "default": false
        },
        {
            "option": "--caplin.backfilling",
            "description": "sets whether backfilling is enabled for caplin",
            "default": false
        },
        {
            "option": "--caplin.backfilling.blob",
            "description": "sets whether backfilling is enabled for caplin",
            "default": false
        },
        {
            "option": "--caplin.backfilling.blob.no-pruning",
            "description": "disable blob pruning in caplin",
            "default": false
        },
        {
            "option": "--chain",
            "description": "name of the network to join",
            "default": "mainnet"
        },
        {
            "option": "--clique.checkpoint",
            "description": "Number of blocks after which to save the vote snapshot to the database",
            "default": 10
        },
        {
            "option": "--clique.datadir",
            "description": "Path to clique db folder"
        },
        {
            "option": "--clique.signatures",
            "description": "Number of recent block signatures to keep in memory",
            "default": 16384
        },
        {
            "option": "--clique.snapshots",
            "description": "Number of recent vote snapshots to keep in memory",
            "default": 1024
        },
        {
            "option": "--config",
            "description": "Sets erigon flags from YAML/TOML file"
        },
        {
            "option": "--datadir",
            "description": "Data directory for the databases",
            "default": "/home/ahmad/.local/share/erigon"
        },
        {
            "option": "--database.verbosity",
            "description": "Enabling internal db logs. Very high verbosity levels may require recompile db. Default: 2, means warning.",
            "default": 2
        },
        {
            "option": "--db.pagesize",
            "description": "DB is splitted to 'pages' of fixed size. Can't change DB creation. Must be power of 2 and '256b <= pagesize <= 64kb'. Default: equal to OperationSystem's pageSize. Bigger pageSize causing: 1. More writes to disk during commit 2. Smaller b-tree high 3. Less fragmentation 4. Less overhead on 'free-pages list' maintainance (a bit faster Put/Commit) 5. If expecting DB-size > 8Tb then set pageSize >= 8Kb",
            "default": "8KB"
        },
        {
            "option": "--db.read.concurrency",
            "description": "Does limit amount of parallel db reads. Default: equal to GOMAXPROCS (or number of CPU)",
            "default": 768
        },
        {
            "option": "--db.size.limit",
            "description": "Runtime limit of chaindata db size. You can change value of this flag at any time.",
            "default": "12TB"
        },
        {
            "option": "--dev.period",
            "description": "Block period to use in developer mode (0 = mine only if transaction pending)",
            "default": 0
        },
        {
            "option": "--diagnostics.disabled",
            "description": "Disable diagnostics",
            "default": false
        },
        {
            "option": "--diagnostics.endpoint.addr",
            "description": "Diagnostics HTTP server listening interface",
            "default": "0.0.0.0"
        },
        {
            "option": "--diagnostics.endpoint.port",
            "description": "Diagnostics HTTP server listening port",
            "default": 6060
        },
        {
            "option": "--diagnostics.speedtest",
            "description": "Enable speed test",
            "default": false
        },
        {
            "option": "--discovery.dns",
            "description": "Sets DNS discovery entry points (use \"\" to disable DNS)"
        },
        {
            "option": "--downloader.api.addr",
            "description": "downloader address '<host>:<port>'"
        },
        {
            "option": "--downloader.disable.ipv4",
            "description": "Turns off ipv4 for the downloader",
            "default": false
        },
        {
            "option": "--downloader.disable.ipv6",
            "description": "Turns off ipv6 for the downloader",
            "default": false
        },
        {
            "option": "--downloader.verify",
            "description": "Verify snapshots on startup. It will not report problems found, but re-download broken pieces.",
            "default": false
        },
        {
            "option": "--ethash.dagdir",
            "description": "Directory to store the ethash mining DAGs",
            "default": "/home/ahmad/.local/share/erigon-ethash"
        },
        {
            "option": "--ethstats",
            "description": "Reporting URL of a ethstats service (nodename:secret@host:port)"
        },
        {
            "option": "--etl.bufferSize",
            "description": "Buffer size for ETL operations.",
            "default": "256MB"
        },
        {
            "option": "--fakepow",
            "description": "Disables proof-of-work verification",
            "default": false
        },
        {
            "option": "--force.partial.commit",
            "description": "Force data commit after each stage (or even do multiple commits per 1 stage - to save it's progress). Don't use this flag if node is synced. Meaning: readers (users of RPC) would like to see 'fully consistent' data (block is executed and all indices are updated). Erigon guarantee this level of data-consistency. But 1 downside: after restore node from backup - it can't save partial progress (non-committed progress will be lost at restart). This flag will be removed in future if we can find automatic way to detect corner-cases.",
            "default": false
        },
        {
            "option": "--gpo.blocks",
            "description": "Number of recent blocks to check for gas prices",
            "default": 20
        },
        {
            "option": "--gpo.percentile",
            "description": "Suggested gas price is the given percentile of a set of recent transaction gas prices",
            "default": 60
        },
        {
            "option": "--graphql",
            "description": "Enable the graphql endpoint",
            "default": false
        },
        {
            "option": "--healthcheck",
            "description": "Enable grpc health check",
            "default": false
        },
        {
            "option": "--help",
            "shortcut": "-h",
            "description": "show help"
        },
        {
            "option": "--http",
            "description": "JSON-RPC server (enabled by default). Use --http=false to disable it",
            "default": true
        },
        {
            "option": "--http.addr",
            "description": "HTTP-RPC server listening interface",
            "default": "localhost"
        },
        {
            "option": "--http.api",
            "description": "API's offered over the HTTP-RPC interface",
            "default": "eth,erigon,engine"
        },
        {
            "option": "--http.compression",
            "description": "Enable compression over HTTP-RPC",
            "default": false
        },
        {
            "option": "--http.corsdomain",
            "description": "Comma separated list of domains from which to accept cross origin requests (browser enforced)"
        },
        {
            "option": "--http.dbg.single",
            "description": "Allow pass HTTP header 'dbg: true' to printt more detailed logs - how this request was executed",
            "default": false
        },
        {
            "option": "--http.enabled",
            "description": "JSON-RPC HTTP server (enabled by default). Use --http.enabled=false to disable it",
            "default": true
        },
        {
            "option": "--http.port",
            "description": "HTTP-RPC server listening port",
            "default": 8545
        },
        {
            "option": "--http.timeouts.idle",
            "description": "Maximum amount of time to wait for the next request when keep-alives are enabled. If http.timeouts.idle is zero, the value of http.timeouts.read is used.",
            "default": "2m0s"
        },
        {
            "option": "--http.timeouts.read",
            "description": "Maximum duration for reading the entire request, including the body.",
            "default": "30s"
        },
        {
            "option": "--http.timeouts.write",
            "description": "Maximum duration before timing out writes of the response. It is reset whenever a new request's header is read.",
            "default": "30m0s"
        },
        {
            "option": "--http.trace",
            "description": "Print all HTTP requests to logs with INFO level",
            "default": false
        },
        {
            "option": "--http.vhosts",
            "description": "Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts 'any' or '*' as wildcard.",
            "default": "localhost"
        },
        {
            "option": "--identity",
            "description": "Custom node name"
        },
        {
            "option": "--internalcl",
            "description": "Enables internal consensus",
            "default": false
        },
        {
            "option": "--lightclient.discovery.addr",
            "description": "Address for lightclient DISCV5 protocol",
            "default": "127.0.0.1"
        },
        {
            "option": "--lightclient.discovery.port",
            "description": "Port for lightclient DISCV5 protocol",
            "default": 4000
        },
        {
            "option": "--lightclient.discovery.tcpport",
            "description": "TCP Port for lightclient DISCV5 protocol",
            "default": 4001
        },
        {
            "option": "--log.console.json",
            "description": "Format console logs with JSON",
            "default": false
        },
        {
            "option": "--log.console.verbosity",
            "description": "Set the log level for console logs",
            "default": "info"
        },
        {
            "option": "--log.delays",
            "description": "Enable block delay logging",
            "default": false
        },
        {
            "option": "--log.dir.disable",
            "description": "disable disk logging",
            "default": false
        },
        {
            "option": "--log.dir.json",
            "description": "Format file logs with JSON",
            "default": false
        },
        {
            "option": "--log.dir.path",
            "description": "Path to store user and error logs to disk"
        },
        {
            "option": "--log.dir.prefix",
            "description": "The file name prefix for logs stored to disk"
        },
        {
            "option": "--log.dir.verbosity",
            "description": "Set the log verbosity for logs stored to disk",
            "default": "info"
        },
        {
            "option": "--log.json",
            "description": "Format console logs with JSON",
            "default": false
        },
        {
            "option": "--maxpeers",
            "description": "Maximum number of network peers (network disabled if set to 0)",
            "default": 100
        },
        {
            "option": "--metrics",
            "description": "Enable metrics collection and reporting",
            "default": false
        },
        {
            "option": "--metrics.addr",
            "description": "Enable stand-alone metrics HTTP server listening interface",
            "default": "0.0.0.0"
        },
        {
            "option": "--metrics.port",
            "description": "Metrics HTTP server listening port",
            "default": 6060
        },
        {
            "option": "--mine",
            "description": "Enable mining",
            "default": false
        },
        {
            "option": "--miner.etherbase",
            "description": "Public address for block mining rewards",
            "default": "0"
        },
        {
            "option": "--miner.extradata",
            "description": "Block extra data set by the miner (default = client version)"
        },
        {
            "option": "--miner.gaslimit",
            "description": "Target gas limit for mined blocks",
            "default": 30000000
        },
        {
            "option": "--miner.noverify",
            "description": "Disable remote sealing verification",
            "default": false
        },
        {
            "option": "--miner.notify",
            "description": "Comma separated HTTP URL list to notify of new work packages"
        },
        {
            "option": "--miner.recommit",
            "description": "Time interval to recreate the block being mined",
            "default": "3s"
        },
        {
            "option": "--miner.sigfile",
            "description": "Private key to sign blocks with"
        },
        {
            "option": "--nat",
            "description": "NAT port mapping mechanism (any|none|upnp|pmp|stun|extip:<IP>)\n    \"\" or \"none\"         Default - do not nat\n    \"extip:77.12.33.4\"   Will assume the local machine is reachable on the given IP\n    \"any\"                Uses the first auto-detected mechanism\n    \"upnp\"               Uses the Universal Plug and Play protocol\n    \"pmp\"                Uses NAT-PMP with an auto-detected gateway address\n    \"pmp:192.168.0.1\"    Uses NAT-PMP with the given gateway address\n    \"stun\"               Uses STUN to detect an external IP using a default server\n    \"stun:<server>\"      Uses STUN to detect an external IP using the given server (host:port)"
        },
        {
            "option": "--netrestrict",
            "description": "Restricts network communication to the given IP networks (CIDR masks)"
        },
        {
            "option": "--networkid",
            "description": "Explicitly set network id (integer)(For testnets: use --chain <testnet_name> instead)",
            "default": 1
        },
        {
            "option": "--no-downloader",
            "description": "Disables downloader component",
            "default": false
        },
        {
            "option": "--nodiscover",
            "description": "Disables the peer discovery mechanism (manual peer addition)",
            "default": false
        },
        {
            "option": "--nodekey",
            "description": "P2P node key file"
        },
        {
            "option": "--nodekeyhex",
            "description": "P2P node key as hex (for testing)"
        },
        {
            "option": "--override.prague",
            "description": "Manually specify the Prague fork time, overriding the bundled setting",
            "default": 0
        },
        {
            "option": "--p2p.allowed-ports",
            "description": "Allowed ports to pick for different eth p2p protocol versions as follows <porta>,<portb>,..,<porti>",
            "default": "30303, 30304, 30305, 30306, 30307"
        },
        {
            "option": "--p2p.protocol",
            "description": "Version of eth p2p protocol",
            "default": "68, 67"
        },
        {
            "option": "--polygon.sync",
            "description": "Enabling syncing using the new polygon sync component",
            "default": false
        },
        {
            "option": "--port",
            "description": "Network listening port",
            "default": 30303
        },
        {
            "option": "--pprof",
            "description": "Enable the pprof HTTP server",
            "default": false
        },
        {
            "option": "--pprof.addr",
            "description": "pprof HTTP server listening interface",
            "default": "0.0.0.0"
        },
        {
            "option": "--pprof.cpuprofile",
            "description": "Write CPU profile to the given file"
        },
        {
            "option": "--pprof.port",
            "description": "pprof HTTP server listening port",
            "default": 6060
        },
        {
            "option": "--private.api.addr",
            "description": "Erigon's components (txpool, rpcdaemon, sentry, downloader, ...) can be deployed as independent Processes on same/another server. Then components will connect to erigon by this internal grpc API. example: 127.0.0.1:9090, empty string means not to start the listener. do not expose to public network. serves remote database interface",
            "default": "127.0.0.1:9090"
        },
        {
            "option": "--private.api.ratelimit",
            "description": "Amount of requests server handle simultaneously - requests over this limit will wait. Increase it - if clients see 'request timeout' while server load is low - it means your 'hot data' is small or have much RAM.",
            "default": 31872
        },
        {
            "option": "--prune",
            "description": "Choose which ancient data delete from DB:\n    h - prune history (ChangeSets, HistoryIndices - used by historical state access, like eth_getStorageAt, eth_getBalanceAt, debug_traceTransaction, trace_block, trace_transaction, etc.)\n    r - prune receipts (Receipts, Logs, LogTopicIndex, LogAddressIndex - used by eth_getLogs and similar RPC methods)\n    t - prune transaction by it's hash index\n    c - prune call traces (used by trace_filter method)\n    Does delete data older than 90K blocks, --prune=h is shortcut for: --prune.h.older=90000.\n    Similarly, --prune=t is shortcut for: --prune.t.older=90000 and --prune=c is shortcut for: --prune.c.older=90000.\n    However, --prune=r means to prune receipts before the Beacon Chain genesis (Consensus Layer might need receipts after that).\n    If an item is NOT on the list - means NO pruning for this data.\n    Example: --prune=htc",
            "default": "disabled"
        },
        {
            "option": "--prune.c.before",
            "description": "Prune data before this block",
            "default": 0
        },
        {
            "option": "--prune.c.older",
            "description": "Prune data older than this number of blocks from the tip of the chain (if --prune flag has 'c', then default is 90K)",
            "default": 0
        },
        {
            "option": "--prune.h.before",
            "description": "Prune data before this block",
            "default": 0
        },
        {
            "option": "--prune.h.older",
            "description": "Prune data older than this number of blocks from the tip of the chain (if --prune flag has 'h', then default is 90K)",
            "default": 0
        },
        {
            "option": "--prune.r.before",
            "description": "Prune data before this block",
            "default": 0
        },
        {
            "option": "--prune.r.older",
            "description": "Prune data older than this number of blocks from the tip of the chain",
            "default": 0
        },
        {
            "option": "--prune.t.before",
            "description": "Prune data before this block",
            "default": 0
        },
        {
            "option": "--prune.t.older",
            "description": "Prune data older than this number of blocks from the tip of the chain (if --prune flag has 't', then default is 90K)",
            "default": 0
        },
        {
            "option": "--proposer.disable",
            "description": "Disables PoS proposer",
            "default": false
        },
        {
            "option": "--rpc.accessList",
            "description": "Specify granular (method-by-method) API allowlist"
        },
        {
            "option": "--rpc.allow-unprotected-txs",
            "description": "Allow for unprotected (non-EIP155 signed) transactions to be submitted via RPC",
            "default": false
        },
        {
            "option": "--rpc.batch.concurrency",
            "description": "Does limit amount of goroutines to process 1 batch request. Means 1 bach request can't overload server. 1 batch still can have unlimited amount of request",
            "default": 2
        },
        {
            "option": "--rpc.batch.limit",
            "description": "Maximum number of requests in a batch",
            "default": 100
        },
        {
            "option": "--rpc.evmtimeout",
            "description": "Maximum amount of time to wait for the answer from EVM call.",
            "default": "5m0s"
        },
        {
            "option": "--rpc.gascap",
            "description": "Sets a cap on gas that can be used in eth_call/estimateGas",
            "default": 50000000
        },
        {
            "option": "--rpc.maxgetproofrewindblockcount.limit",
            "description": "Max GetProof rewind block count",
            "default": 100000
        },
        {
            "option": "--rpc.overlay.getlogstimeout",
            "description": "Maximum amount of time to wait for the answer from the overlay_getLogs call.",
            "default": "5m0s"
        },
        {
            "option": "--rpc.overlay.replayblocktimeout",
            "description": "Maximum amount of time to wait for the answer to replay a single block when called from an overlay_getLogs call.",
            "default": "10s"
        },
        {
            "option": "--rpc.returndata.limit",
            "description": "Maximum number of bytes returned from eth_call or similar invocations",
            "default": 100000
        },
        {
            "option": "--rpc.slow",
            "description": "Print in logs RPC requests slower than given threshold: 100ms, 1s, 1m. Exluded methods: eth_getBlock,eth_getBlockByNumber,eth_getBlockByHash,eth_blockNumber,erigon_blockNumber,erigon_getHeaderByNumber,erigon_getHeaderByHash,erigon_getBlockByTimestamp,eth_call",
            "default": "0s"
        },
        {
            "option": "--rpc.streaming.disable",
            "description": "Erigon has enabled json streaming for some heavy endpoints (like trace_*). It's a trade-off: greatly reduce amount of RAM (in some cases from 30GB to 30mb), but it produce invalid json format if error happened in the middle of streaming (because json is not streaming-friendly format)",
            "default": false
        },
        {
            "option": "--rpc.subscription.filters.maxaddresses",
            "description": "Maximum number of addresses per subscription to filter logs by.",
            "default": 0
        },
        {
            "option": "--rpc.subscription.filters.maxheaders",
            "description": "Maximum number of block headers to store per subscription.",
            "default": 0
        },
        {
            "option": "--rpc.subscription.filters.maxlogs",
            "description": "Maximum number of logs to store per subscription.",
            "default": 0
        },
        {
            "option": "--rpc.subscription.filters.maxtopics",
            "description": "Maximum number of topics per subscription to filter logs by.",
            "default": 0
        },
        {
            "option": "--rpc.subscription.filters.maxtxs",
            "description": "Maximum number of transactions to store per subscription.",
            "default": 0
        },
        {
            "option": "--rpc.txfeecap",
            "description": "Sets a cap on transaction fee (in ether) that can be sent via the RPC APIs (0 = no cap)",
            "default": 1
        },
        {
            "option": "--sentry.api.addr",
            "description": "Comma separated sentry addresses '<host>:<port>,<host>:<port>'"
        },
        {
            "option": "--sentry.log-peer-info",
            "description": "Log detailed peer info when a peer connects or disconnects. Enable to integrate with observer.",
            "default": false
        },
        {
            "option": "--sentinel.addr",
            "description": "Address for sentinel",
            "default": "localhost"
        },
        {
            "option": "--sentinel.port",
            "description": "Port for sentinel",
            "default": 7777
        },
        {
            "option": "--silkworm.contexts",
            "description": "Number of I/O contexts used in embedded Silkworm RPC and Sentry services (zero means use default in Silkworm)",
            "default": 0
        },
        {
            "option": "--silkworm.exec",
            "description": "Enable Silkworm block execution",
            "default": false
        },
        {
            "option": "--silkworm.rpc",
            "description": "Enable embedded Silkworm RPC service",
            "default": false
        },
        {
            "option": "--silkworm.rpc.compatibility",
            "description": "Preserve JSON-RPC compatibility using embedded Silkworm RPC service",
            "default": true
        },
        {
            "option": "--silkworm.rpc.log",
            "description": "Enable interface log for embedded Silkworm RPC service",
            "default": false
        },
        {
            "option": "--silkworm.rpc.log.maxfiles",
            "description": "Max interface log files for embedded Silkworm RPC service",
            "default": 100
        },
        {
            "option": "--silkworm.rpc.log.maxsize",
            "description": "Max interface log file size in MB for embedded Silkworm RPC service",
            "default": 1
        },
        {
            "option": "--silkworm.rpc.log.response",
            "description": "Dump responses in interface logs for embedded Silkworm RPC service",
            "default": false
        },
        {
            "option": "--silkworm.rpc.workers",
            "description": "Number of worker threads used in embedded Silkworm RPC service (zero means use default in Silkworm)",
            "default": 0
        },
        {
            "option": "--silkworm.sentry",
            "description": "Enable embedded Silkworm Sentry service",
            "default": false
        },
        {
            "option": "--silkworm.verbosity",
            "description": "Set the log level for Silkworm console logs",
            "default": "info"
        },
        {
            "option": "--snap.keepblocks",
            "description": "Keep ancient blocks in db (useful for debug)",
            "default": false
        },
        {
            "option": "--snap.stop",
            "description": "Workaround to stop producing new snapshots, if you meet some snapshots-related critical bug. It will stop move historical data from DB to new immutable snapshots. DB will grow and may slightly slow-down - and removing this flag in future will not fix this effect (db size will not greatly reduce).",
            "default": false
        },
        {
            "option": "--snapshots",
            "description": "Default: use snapshots \"true\" for Mainnet, Goerli, Gnosis Chain and Chiado. use snapshots \"false\" in all other cases",
            "default": true
        },
        {
            "option": "--state.cache",
            "description": "Amount of data to store in StateCache (enabled if no --datadir set). Set 0 to disable StateCache. Defaults to 0MB",
            "default": "0MB"
        },
        {
            "option": "--state.stream.disable",
            "description": "Disable streaming of state changes from core to RPC daemon",
            "default": false
        },
        {
            "option": "--staticpeers",
            "description": "Comma separated enode URLs to connect to"
        },
        {
            "option": "--sync.loop.block.limit",
            "description": "Sets the maximum number of blocks to process per loop iteration",
            "default": 0
        },
        {
            "option": "--sync.loop.break.after",
            "description": "Sets the last stage of the sync loop to run"
        },
        {
            "option": "--sync.loop.prune.limit",
            "description": "Sets the maximum number of block to prune per loop iteration",
            "default": 100
        },
        {
            "option": "--sync.loop.throttle",
            "description": "Sets the minimum time between sync loop starts (e.g. 1h30m, default is none)"
        },
        {
            "option": "--tls",
            "description": "Enable TLS handshake",
            "default": false
        },
        {
            "option": "--tls.cacert",
            "description": "Specify certificate authority"
        },
        {
            "option": "--tls.cert",
            "description": "Specify certificate"
        },
        {
            "option": "--tls.key",
            "description": "Specify key file"
        },
        {
            "option": "--torrent.conns.perfile",
            "description": "Number of connections per file",
            "default": 10
        },
        {
            "option": "--torrent.download.rate",
            "description": "Bytes per second, example: 32mb",
            "default": "16mb"
        },
        {
            "option": "--torrent.download.slots",
            "description": "Amount of files to download in parallel. If network has enough seeders 1-3 slot enough, if network has lack of seeders increase to 5-7 (too big value will slow down everything).",
            "default": 3
        },
        {
            "option": "--torrent.maxpeers",
            "description": "Unused parameter (reserved for future use)",
            "default": 100
        },
        {
            "option": "--torrent.port",
            "description": "Port to listen and serve BitTorrent protocol",
            "default": 42069
        },
        {
            "option": "--torrent.staticpeers",
            "description": "Comma separated enode URLs to connect to"
        },
        {
            "option": "--torrent.upload.rate",
            "description": "Bytes per second, example: 32mb",
            "default": "4mb"
        },
        {
            "option": "--torrent.verbosity",
            "description": "0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=detail (must set --verbosity to equal or higher level and has default: 2)",
            "default": 2
        },
        {
            "option": "--trace",
            "description": "Write execution trace to the given file"
        },
        {
            "option": "--trace.compat",
            "description": "Bug for bug compatibility with OE for trace_ routines",
            "default": false
        },
        {
            "option": "--trace.maxtraces",
            "description": "Sets a limit on traces that can be returned in trace_filter",
            "default": 200
        },
        {
            "option": "--trusted-setup-file",
            "description": "Absolute path to trusted_setup.json file"
        },
        {
            "option": "--trustedpeers",
            "description": "Comma separated enode URLs which are always allowed to connect, even above the peer limit"
        },
        {
            "option": "--txpool.accountqueue",
            "description": "Maximum number of non-executable transaction slots permitted per account",
            "default": 64
        },
        {
            "option": "--txpool.accountslots",
            "description": "Minimum number of executable transaction slots guaranteed per account",
            "default": 16
        },
        {
            "option": "--txpool.api.addr",
            "description": "TxPool api network address, for example: 127.0.0.1:9090",
            "default": "use value of --private.api.addr"
        },
        {
            "option": "--txpool.blobpricebump",
            "description": "Price bump percentage to replace existing (type-3) blob transaction",
            "default": 100
        },
        {
            "option": "--txpool.blobslots",
            "description": "Max allowed total number of blobs (within type-3 txs) per account",
            "default": 48
        },
        {
            "option": "--txpool.commit.every",
            "description": "How often transactions should be committed to the storage",
            "default": "15s"
        },
        {
            "option": "--txpool.disable",
            "description": "Experimental external pool and block producer, see ./cmd/txpool/readme.md for more info. Disabling internal txpool and block producer.",
            "default": false
        },
        {
            "option": "--txpool.gossip.disable",
            "description": "Disabling p2p gossip of txs. Any txs received by p2p - will be dropped. Some networks like 'Optimism execution engine'/'Optimistic Rollup' - using it to protect against MEV attacks",
            "default": false
        },
        {
            "option": "--txpool.globalbasefeeslots",
            "description": "Maximum number of non-executable transactions where only not enough baseFee",
            "default": 30000
        },
        {
            "option": "--txpool.globalqueue",
            "description": "Maximum number of non-executable transaction slots for all accounts",
            "default": 30000
        },
        {
            "option": "--txpool.globalslots",
            "description": "Maximum number of executable transaction slots for all accounts",
            "default": 10000
        },
        {
            "option": "--txpool.locals",
            "description": "Comma separated accounts to treat as locals (no flush, priority inclusion)"
        },
        {
            "option": "--txpool.lifetime",
            "description": "Maximum amount of time non-executable transaction are queued",
            "default": "3h0m0s"
        },
        {
            "option": "--txpool.nolocals",
            "description": "Disables price exemptions for locally submitted transactions",
            "default": false
        },
        {
            "option": "--txpool.pricebump",
            "description": "Price bump percentage to replace an already existing transaction",
            "default": 10
        },
        {
            "option": "--txpool.pricelimit",
            "description": "Minimum gas price (fee cap) limit to enforce for acceptance into the pool",
            "default": 1
        },
        {
            "option": "--txpool.totalblobpoollimit",
            "description": "Total limit of number of all blobs in txs within the txpool",
            "default": 480
        },
        {
            "option": "--txpool.trace.senders",
            "description": "Comma separated list of addresses, whose transactions will traced in transaction pool with debug printing"
        },
        {
            "option": "--version",
            "shortcut": "-v",
            "description": "print the version"
        },
        {
            "option": "--v5disc",
            "description": "Enables the experimental RLPx V5 (Topic Discovery) mechanism",
            "default": false
        },
        {
            "option": "--verbosity",
            "description": "Set the log level for console logs",
            "default": "info"
        },
        {
            "option": "--vmdebug",
            "description": "Record information useful for VM and contract debugging",
            "default": false
        },
        {
            "option": "--webseed",
            "description": "Comma-separated URL's, holding metadata about network-support infrastructure (like S3 buckets with snapshots, bootnodes, etc...)"
        },
        {
            "option": "--ws",
            "description": "Enable the WS-RPC server",
            "default": false
        },
        {
            "option": "--ws.compression",
            "description": "Enable compression over WebSocket",
            "default": false
        },
        {
            "option": "--ws.port",
            "description": "WS-RPC server listening port",
            "default": 8546
        }
    ],
    "version": "2.60.10-3afee08b"
}
