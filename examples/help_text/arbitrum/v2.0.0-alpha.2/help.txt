# Arbitrum - Help Output
# Image: docker.io/offchainlabs/nitro-node:v2.0.0-alpha.2
# Command: /usr/local/bin/nitro --help
# Exit Code: 0
================================================================================


Sample usage:                  /usr/local/bin/nitro --help 

--- STDERR ---
Usage of :
      --conf.dump                                                       print out currently active configuration file
      --conf.env-prefix string                                          environment variables with given prefix will be loaded as configuration values
      --conf.file strings                                               name of configuration file
      --conf.s3.access-key string                                       S3 access key
      --conf.s3.bucket string                                           S3 bucket
      --conf.s3.object-key string                                       S3 object key
      --conf.s3.region string                                           S3 region
      --conf.s3.secret-key string                                       S3 secret key
      --conf.string string                                              configuration as JSON string
      --dev-init                                                        init with dev data (1 account with balance) instead of file import
      --http.addr string                                                HTTP-RPC server listening interface
      --http.api strings                                                APIs offered over the HTTP-RPC interface (default [net,web3,eth])
      --http.corsdomain strings                                         Comma separated list of domains from which to accept cross origin requests (browser enforced)
      --http.port int                                                   HTTP-RPC server listening port (default 8547)
      --http.rpcprefix string                                           HTTP path path prefix on which JSON-RPC is served. Use '/' to serve on all paths
      --http.vhosts strings                                             Comma separated list of virtual hostnames from which to accept requests (server enforced). Accepts '*' wildcard (default [localhost])
      --import-file string                                              path for json data to import
      --l1.chain-id uint                                                if set other than 0, will be used to validate database and L1 connection
      --l1.connection-attempts int                                      layer 1 RPC connection attempts (spaced out at least 1 second per attempt, 0 to retry infinitely) (default 15)
      --l1.rollup.bridge string                                         the bridge contract address
      --l1.rollup.deployed-at uint                                      the block number at which the rollup was deployed
      --l1.rollup.inbox string                                          the inbox contract address
      --l1.rollup.rollup string                                         the rollup contract address
      --l1.rollup.sequencer-inbox string                                the sequencer inbox contract address
      --l1.rollup.validator-utils string                                the validator utils contract address
      --l1.rollup.validator-wallet-creator string                       the validator wallet creator contract address
      --l1.url string                                                   layer 1 ethereum node RPC URL
      --l1.wallet.account string                                        account to use (default is first account in keystore)
      --l1.wallet.password string                                       wallet passphrase
      --l1.wallet.pathname string                                       pathname for wallet (default "wallet")
      --l1.wallet.private-key string                                    private key for wallet
      --l2.chain-id uint                                                L2 chain ID (determines Arbitrum network)
      --l2.dev-wallet.account string                                    account to use (default is first account in keystore)
      --l2.dev-wallet.password string                                   wallet passphrase
      --l2.dev-wallet.pathname string                                   pathname for wallet
      --l2.dev-wallet.private-key string                                private key for wallet
      --log-level int                                                   log level (default 3)
      --log-type string                                                 log type (plaintext or json) (default "plaintext")
      --metrics                                                         enable metrics
      --metrics-server.addr string                                      metrics server address (default "127.0.0.1")
      --metrics-server.port int                                         metrics server port (default 6070)
      --no-init                                                         Do not init chain. Data must be valid in database.
      --node.archive                                                    retain past block state
      --node.batch-poster.compression-level int                         batch compression level (default 6)
      --node.batch-poster.enable                                        enable posting batches to l1
      --node.batch-poster.error-delay duration                          how long to delay after error posting batch (default 10s)
      --node.batch-poster.max-interval duration                         maximum batch posting interval (default 1h0m0s)
      --node.batch-poster.max-size int                                  maximum batch size (default 100000)
      --node.batch-poster.poll-delay duration                           how long to delay after successfully posting batch (default 10s)
      --node.block-validator.concurrent-runs-limit int                  
      --node.block-validator.current-module-root string                 current wasm module root ('current' read from chain, 'latest' from machines/latest dir, or provide hash) (default "current")
      --node.block-validator.enable                                     enable block validator
      --node.block-validator.output-path string                          (default "./target/output")
      --node.block-validator.pending-upgrade-module-root string         pending upgrade wasm module root to additionally validate (hash, 'latest' or empty) (default "latest")
      --node.dangerous.no-l1-listener                                   DANGEROUS! disables listening to L1. To be used in test nodes only
      --node.data-availability.local-disk-data-dir string               For local mode, the directory of the data store
      --node.data-availability.mode string                              mode (onchain or local) (default "onchain")
      --node.delayed-sequencer.enable                                   enable sequence coordinator
      --node.delayed-sequencer.finalize-distance int                    how many blocks in the past L1 block is considered final (default 12)
      --node.delayed-sequencer.time-aggregate duration                  polling interval for the delayed sequencer (default 1m0s)
      --node.feed.input.timeout duration                                duration to wait before timing out connection to sequencer feed (default 20s)
      --node.feed.input.url strings                                     URL of sequencer feed source
      --node.feed.output.addr string                                    address to bind the relay feed output to
      --node.feed.output.client-timeout duration                        duration to wait before timing out connections to client (default 15s)
      --node.feed.output.enable                                         enable broadcaster
      --node.feed.output.io-timeout duration                            duration to wait before timing out HTTP to WS upgrade (default 5s)
      --node.feed.output.ping duration                                  duration for ping interval (default 5s)
      --node.feed.output.port string                                    port to bind the relay feed output to (default "9642")
      --node.feed.output.queue int                                      queue size (default 100)
      --node.feed.output.workers int                                    number of threads to reserve for HTTP to WS upgrade (default 100)
      --node.forwarding-target string                                   transaction forwarding target URL, or "null" to disable forwarding (iff not sequencer)
      --node.inbox-reader.check-delay duration                          how long to wait between inbox checks (default 2s)
      --node.inbox-reader.delay-blocks uint                             number of latest blocks to ignore to reduce reorgs (default 4)
      --node.inbox-reader.hard-reorg                                    erase future transactions in addition to overwriting existing ones on reorg
      --node.l1-reader.enable                                           enable l1 connection (default true)
      --node.l1-reader.poll-interval duration                           interval when polling L1 (default 15s)
      --node.l1-reader.poll-only                                        do not attempt to subscribe to L1 events
      --node.l1-reader.tx-timeout duration                              timeout when waiting for a transaction (default 5m0s)
      --node.rpc.bloom-bits-blocks uint                                 number of blocks a single bloom bit section vector holds (default 16384)
      --node.rpc.evm-timeout duration                                   timeout used for eth_call (0=infinite) (default 5s)
      --node.rpc.feehistory-max-block-count uint                        max number of blocks a fee history request may cover (default 1024)
      --node.rpc.gas-cap uint                                           cap on computation gas that can be used in eth_call/estimateGas (0=infinite) (default 50000000)
      --node.rpc.tx-fee-cap float                                       cap on transaction fee (in ether) that can be sent via the RPC APIs (0 = no cap) (default 1)
      --node.seq-coordinator.allowed-msg-lag uint16                     will only be marked live if not too far behind (default 200)
      --node.seq-coordinator.chosen-healthcheck-addr string             if non-empty, launch an HTTP service binding to this address that returns status code 200 when chosen and 503 otherwise
      --node.seq-coordinator.dangerous.disable-signature-verification   disable message signature verification
      --node.seq-coordinator.enable                                     enable sequence coordinator
      --node.seq-coordinator.lockout-duration duration                   (default 5m0s)
      --node.seq-coordinator.lockout-spare duration                      (default 30s)
      --node.seq-coordinator.msg-per-poll uint16                        will only be marked live if not too far behind (default 2000)
      --node.seq-coordinator.my-url string                              a 32-byte (64-character) hex string used to sign messages, or a path to a file containing it
      --node.seq-coordinator.retry-interval duration                     (default 1s)
      --node.seq-coordinator.seq-num-duration duration                   (default 24h0m0s)
      --node.seq-coordinator.signing-key string                         
      --node.seq-coordinator.update-interval duration                    (default 5s)
      --node.sequencer.dangerous.no-coordinator                         DANGEROUS! allows sequencer without coordinator.
      --node.sequencer.enable                                           act and post to l1 as sequencer
      --node.sequencer.max-acceptable-timestamp-delta duration          maximum acceptable time difference between the local time and the latest L1 block's timestamp (default 1h0m0s)
      --node.sequencer.max-block-speed duration                         minimum delay between blocks (sets a maximum speed of block production) (default 100ms)
      --node.sequencer.max-revert-gas-reject uint                       maximum gas executed in a revert for the sequencer to reject the transaction instead of posting it (anti-DOS) (default 31000)
      --node.validator.confirmation-blocks int                          confirmation blocks (default 12)
      --node.validator.dangerous.without-block-validator                DANGEROUS! allows running an L1 validator without a block validator
      --node.validator.disable-challenge                                disable validator challenge
      --node.validator.enable                                           enable validator
      --node.validator.posting-strategy.high-gas-delay-blocks int       high gas delay blocks
      --node.validator.posting-strategy.high-gas-threshold float        high gas threshold
      --node.validator.staker-interval duration                         how often the L1 validator should check the status of the L1 rollup and maybe take action with its stake (default 1m0s)
      --node.validator.strategy string                                  L1 validator strategy, either watchtower, defensive, stakeLatest, or makeNodes (default "Watchtower")
      --node.validator.target-machine-count int                         target machine count (default 4)
      --node.validator.withdraw-destination string                      validator withdraw destination
      --node.wasm.root-path string                                      path to machine folders, each containing wasm files (replay.wasm, wasi_stub.wasm, soft-float.wasm, go_stub.wasm, host_io.wasm, brotli.wasm
      --persistent.chain string                                         directory to store chain state
      --persistent.global-config string                                 directory to store global config (default ".arbitrum")
      --ws.addr string                                                  WS-RPC server listening interface
      --ws.api strings                                                  APIs offered over the WS-RPC interface (default [net,web3,eth])
      --ws.expose-all                                                   expose private api via websocket
      --ws.origins strings                                              Origins from which to accept websockets requests
      --ws.port int                                                     WS-RPC server listening port (default 8548)
      --ws.rpcprefix string                                             WS path path prefix on which JSON-RPC is served. Use '/' to serve on all paths
