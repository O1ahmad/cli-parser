{
    "description": "Build, test, fuzz, debug and deploy Solidity contracts",
    "name": "forge",
    "subcommands": [
        {
            "name": "forge bind-json",
            "description": "Generate bindings for serialization/deserialization of project structs via JSON cheatcodes",
            "usage": "Usage: forge bind-json [OPTIONS] [PATH]",
            "subcommands": [],
            "options": [
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output"
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files"
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>"
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "possible values: auto, always, never"
                    ]
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--contracts",
                    "shortcut": "-C",
                    "description": "The contracts source directory",
                    "value": "<PATH>"
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error"
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking"
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>"
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Example keys: evm.assembly, ewasm, ir, irOptimized, metadata"
                    ]
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Valid values: metadata, ir, irOptimized, ewasm, evm.assembly"
                    ]
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout.",
                    "tags": [
                        "aliases: --hh"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "value": "<LIBRARIES>",
                    "tags": [
                        "env: DAPP_LIBRARIES="
                    ]
                },
                {
                    "option": "--no-auto-detect",
                    "description": "Do not auto-detect the `solc` version"
                },
                {
                    "option": "--no-cache",
                    "description": "Disable the cache"
                },
                {
                    "option": "--no-metadata",
                    "description": "Do not append any metadata to the bytecode.",
                    "tags": [
                        "This is equivalent to setting `bytecode_hash` to `none` and `cbor_metadata` to `false`."
                    ]
                },
                {
                    "option": "--offline",
                    "description": "Do not access the network.",
                    "tags": [
                        "Missing solc versions will not be installed."
                    ]
                },
                {
                    "option": "--optimize",
                    "description": "Activate the Solidity optimizer",
                    "value": "[<OPTIMIZE>]",
                    "tags": [
                        "possible values: true, false"
                    ]
                },
                {
                    "option": "--optimizer-runs",
                    "description": "Number of optimizer runs for deployed code",
                    "value": "<RUNS>"
                },
                {
                    "option": "--out",
                    "shortcut": "-o",
                    "description": "The path to the contract artifacts folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--remappings",
                    "shortcut": "-R",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--revert-strings",
                    "description": "Revert string configuration.",
                    "value": "<REVERT>",
                    "tags": [
                        "Possible values are \"default\", \"strip\", \"debug\", and \"verboseDebug\""
                    ]
                },
                {
                    "option": "--root",
                    "description": "The project's root path.",
                    "value": "<PATH>",
                    "tags": [
                        "By default root of the Git repository, if in one, or the current working directory."
                    ]
                },
                {
                    "option": "--skip",
                    "description": "Skip building files whose names contain the given filter.",
                    "value": "<SKIP>...",
                    "tags": [
                        "`test` and `script` are aliases for `.t.sol` and `.s.sol`."
                    ]
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--use",
                    "description": "Specify the solc version, or a path to a local solc, to build with.",
                    "value": "<SOLC_VERSION>",
                    "tags": [
                        "Valid values are in the format `x.y.z`, `solc:x.y.z` or `path/to/solc`."
                    ]
                },
                {
                    "option": "--use-literal-content",
                    "description": "Changes compilation to only use literal content and not URLs"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages.",
                    "tags": [
                        "Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).",
                        "For example, the verbosity levels of the EVM are:",
                        "- 2 (-vv): Print logs for all tests.",
                        "- 3 (-vvv): Print execution traces for failing tests.",
                        "- 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.",
                        "- 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                    ]
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline"
                }
            ]
        },
        {
            "name": "forge bind",
            "description": "Generate Rust bindings for smart contracts",
            "usage": "forge bind [OPTIONS]",
            "options": [
                {
                    "option": "--alloy-rev",
                    "description": "Specify the `alloy` revision on GitHub"
                },
                {
                    "option": "--alloy-version",
                    "description": "Specify the `alloy` version on Crates"
                },
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output"
                },
                {
                    "option": "--bindings-path",
                    "shortcut": "-b",
                    "description": "Path to where the contract artifacts are stored",
                    "value": "<PATH>"
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files"
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>"
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "auto",
                        "always",
                        "never"
                    ]
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--contracts",
                    "shortcut": "-C",
                    "description": "The contracts source directory",
                    "value": "<PATH>"
                },
                {
                    "option": "--crate-description",
                    "description": "The description of the Rust crate to generate.\n\nThis will be added to the package.description field in Cargo.toml.",
                    "value": "<DESCRIPTION>",
                    "default": ""
                },
                {
                    "option": "--crate-license",
                    "description": "The license of the Rust crate to generate.\n\nThis will be added to the package.license field in Cargo.toml.",
                    "value": "<LICENSE>",
                    "default": ""
                },
                {
                    "option": "--crate-name",
                    "description": "The name of the Rust crate to generate.\n\nThis should be a valid crates.io crate name, however, this is not currently validated by this command.",
                    "value": "<NAME>",
                    "default": "foundry-contracts"
                },
                {
                    "option": "--crate-version",
                    "description": "The version of the Rust crate to generate.\n\nThis should be a standard semver version string, however, this is not currently validated by this command.",
                    "value": "<VERSION>",
                    "default": "0.1.0"
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error"
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking"
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>"
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact.\n\nExample keys: evm.assembly, ewasm, ir, irOptimized, metadata\n\nFor a full description, see <https://docs.soliditylang.org/en/v0.8.13/using-the-compiler.html#input-description>",
                    "value": "<SELECTOR>..."
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files.\n\nValid values: metadata, ir, irOptimized, ewasm, evm.assembly",
                    "value": "<SELECTOR>..."
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout.\n\nThis is the same as using: `--contracts contracts --lib-paths node_modules`.",
                    "tags": [
                        "--hh"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "value": "<LIBRARIES>",
                    "tags": [
                        "DAPP_LIBRARIES"
                    ]
                },
                {
                    "option": "--module",
                    "description": "Generate the bindings as a module instead of a crate"
                },
                {
                    "option": "--no-auto-detect",
                    "description": "Do not auto-detect the `solc` version"
                },
                {
                    "option": "--no-cache",
                    "description": "Disable the cache"
                },
                {
                    "option": "--no-metadata",
                    "description": "Do not append any metadata to the bytecode.\n\nThis is equivalent to setting `bytecode_hash` to `none` and `cbor_metadata` to `false`."
                },
                {
                    "option": "--offline",
                    "description": "Do not access the network.\n\nMissing solc versions will not be installed."
                },
                {
                    "option": "--optimize",
                    "description": "Activate the Solidity optimizer",
                    "value": "[<OPTIMIZE>]",
                    "tags": [
                        "true",
                        "false"
                    ]
                },
                {
                    "option": "--optimizer-runs",
                    "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time of the contract. This means it is a trade-off parameter between code size (deploy cost) and code execution cost (cost after deployment). An `optimizer_runs` parameter of `1` will produce short but expensive code. In contrast, a larger `optimizer_runs` parameter will produce longer but more gas efficient code",
                    "value": "<RUNS>"
                },
                {
                    "option": "--out",
                    "shortcut": "-o",
                    "description": "The path to the contract artifacts folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--overwrite",
                    "description": "Overwrite existing generated bindings.\n\nBy default, the command will check that the bindings are correct, and then exit. If --overwrite is passed, it will instead delete and overwrite the bindings."
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--remappings",
                    "shortcut": "-R",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--revert-strings",
                    "description": "Revert string configuration.\n\nPossible values are \"default\", \"strip\" (remove), \"debug\" (Solidity-generated revert strings) and \"verboseDebug\"",
                    "value": "<REVERT>"
                },
                {
                    "option": "--root",
                    "description": "The project's root path.\n\nBy default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>"
                },
                {
                    "option": "--select",
                    "description": "Create bindings only for contracts whose names match the specified filter(s)",
                    "value": "<SELECT>"
                },
                {
                    "option": "--select-all",
                    "description": "Explicitly generate bindings for all contracts\n\nBy default all contracts ending with `Test` or `Script` are excluded."
                },
                {
                    "option": "--single-file",
                    "description": "Generate bindings as a single file"
                },
                {
                    "option": "--skip",
                    "description": "Skip building files whose names contain the given filter.\n\n`test` and `script` are aliases for `.t.sol` and `.s.sol`.",
                    "value": "<SKIP>..."
                },
                {
                    "option": "--skip-build",
                    "description": "Skips running forge build before generating binding"
                },
                {
                    "option": "--skip-cargo-toml",
                    "description": "Skip Cargo.toml consistency checks"
                },
                {
                    "option": "--skip-extra-derives",
                    "description": "Don't add any additional derives to generated bindings"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "--jobs"
                    ]
                },
                {
                    "option": "--use",
                    "description": "Specify the solc version, or a path to a local solc, to build with.\n\nValid values are in the format `x.y.z`, `solc:x.y.z` or `path/to/solc`.",
                    "value": "<SOLC_VERSION>"
                },
                {
                    "option": "--use-literal-content",
                    "description": "Changes compilation to only use literal content and not URLs"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages.\n\nPass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).\n\nDepending on the context the verbosity levels have different meanings.\n\nFor example, the verbosity levels of the EVM are:\n- 2 (-vv): Print logs for all tests.\n- 3 (-vvv): Print execution traces for failing tests.\n- 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.\n- 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline"
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge build",
            "description": "Build the project's smart contracts",
            "usage": "forge build [OPTIONS] [PATHS]...",
            "options": [
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output"
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files"
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>"
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "possible values: auto, always, never"
                    ]
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error"
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking"
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>"
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Example keys: evm.assembly, ewasm, ir, irOptimized, metadata"
                    ]
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Valid values: metadata, ir, irOptimized, ewasm, evm.assembly"
                    ]
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout.",
                    "tags": [
                        "aliases: --hh"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--ignore-eip-3860",
                    "description": "Ignore initcode contract bytecode size limit introduced by EIP-3860"
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "value": "<LIBRARIES>",
                    "tags": [
                        "env: DAPP_LIBRARIES="
                    ]
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--names",
                    "description": "Print compiled contract names"
                },
                {
                    "option": "--no-auto-detect",
                    "description": "Do not auto-detect the `solc` version"
                },
                {
                    "option": "--no-cache",
                    "description": "Disable the cache"
                },
                {
                    "option": "--no-metadata",
                    "description": "Do not append any metadata to the bytecode.",
                    "tags": [
                        "equivalent to setting `bytecode_hash` to `none` and `cbor_metadata` to `false`"
                    ]
                },
                {
                    "option": "--no-restart",
                    "description": "Do not restart the command while it's still running"
                },
                {
                    "option": "--offline",
                    "description": "Do not access the network.",
                    "tags": [
                        "Missing solc versions will not be installed."
                    ]
                },
                {
                    "option": "--optimize",
                    "description": "Activate the Solidity optimizer",
                    "value": "[<OPTIMIZE>]",
                    "tags": [
                        "possible values: true, false"
                    ]
                },
                {
                    "option": "--optimizer-runs",
                    "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time of the contract. This means it is a trade-off parameter between code size (deploy cost) and code execution cost (cost after deployment). An `optimizer_runs` parameter of `1` will produce short but expensive code. In contrast, a larger `optimizer_runs` parameter will produce longer but more gas efficient code",
                    "value": "<RUNS>"
                },
                {
                    "option": "--out",
                    "shortcut": "-o",
                    "description": "The path to the contract artifacts folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--remappings",
                    "shortcut": "-R",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--revert-strings",
                    "description": "Revert string configuration.",
                    "value": "<REVERT>",
                    "tags": [
                        "Possible values are \"default\", \"strip\" (remove), \"debug\" (Solidity-generated revert strings) and \"verboseDebug\""
                    ]
                },
                {
                    "option": "--root",
                    "description": "The project's root path.",
                    "value": "<PATH>",
                    "tags": [
                        "By default root of the Git repository, if in one, or the current working directory."
                    ]
                },
                {
                    "option": "--run-all",
                    "description": "Explicitly re-run all tests when a change is made.",
                    "tags": [
                        "By default, only the tests of the last modified test file are executed."
                    ]
                },
                {
                    "option": "--sizes",
                    "description": "Print compiled contract sizes. Constructor argument length is not included in the calculation of initcode size"
                },
                {
                    "option": "--skip",
                    "description": "Skip building files whose names contain the given filter.",
                    "value": "<SKIP>...",
                    "tags": [
                        "`test` and `script` are aliases for `.t.sol` and `.s.sol`."
                    ]
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--use",
                    "description": "Specify the solc version, or a path to a local solc, to build with.",
                    "value": "<SOLC_VERSION>",
                    "tags": [
                        "Valid values are in the format `x.y.z`, `solc:x.y.z` or `path/to/solc`."
                    ]
                },
                {
                    "option": "--use-literal-content",
                    "description": "Changes compilation to only use literal content and not URLs"
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages.",
                    "tags": [
                        "Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).",
                        "Depending on the context the verbosity levels have different meanings.",
                        "For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                    ]
                },
                {
                    "option": "--watch",
                    "shortcut": "-w",
                    "description": "Watch the given files or directories for changes.",
                    "value": "[<PATH>...]",
                    "tags": [
                        "If no paths are provided, the source and test directories of the project are watched."
                    ]
                },
                {
                    "option": "--watch-delay",
                    "description": "File update debounce delay.",
                    "value": "<DELAY>",
                    "tags": [
                        "During the delay, incoming change events are accumulated and only once the delay has passed, is an action taken. Note that this does not mean a command will be started: if --no-restart is given and a command is already running, the outcome of the action will be to do nothing.",
                        "Defaults to 50ms. Parses as decimal seconds by default, but using an integer with the `ms` suffix may be more convenient.",
                        "When using --poll mode, you'll want a larger duration, or risk overloading disk I/O."
                    ]
                },
                {
                    "option": "[PATHS]...",
                    "description": "Build source files from specified paths"
                },
                {
                    "option": "-C",
                    "description": "The contracts source directory",
                    "value": "<PATH>"
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge cache",
            "description": "Manage the Foundry cache",
            "usage": "forge cache [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "forge cache clean",
                    "description": "Cleans cached data from the global foundry directory",
                    "usage": "forge cache clean [OPTIONS] [CHAINS]...",
                    "arguments": {
                        "CHAINS": {
                            "description": "The chains to clean the cache for. Can also be \"all\" to clean all chains.",
                            "default": "all"
                        }
                    },
                    "options": [
                        {
                            "option": "--blocks",
                            "shortcut": "-b",
                            "description": "The blocks to clean the cache for",
                            "value": "<BLOCKS>..."
                        },
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>",
                            "tags": [
                                "auto",
                                "always",
                                "never"
                            ],
                            "default": "auto"
                        },
                        {
                            "option": "--etherscan",
                            "description": "Whether to clean the Etherscan cache"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "tags": [
                                "--jobs"
                            ]
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "forge cache ls",
                    "description": "Shows cached data from the global foundry directory",
                    "usage": "forge cache ls [OPTIONS] [CHAINS]...",
                    "options": [
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>",
                            "default": "auto",
                            "tags": [
                                "auto",
                                "always",
                                "never"
                            ]
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--jobs",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "aliases": [
                                "--threads"
                            ]
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings.",
                            "tags": [
                                "2 (-vv): Print logs for all tests.",
                                "3 (-vvv): Print execution traces for failing tests.",
                                "4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.",
                                "5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                            ]
                        }
                    ],
                    "arguments": {
                        "chains": {
                            "description": "The chains to list the cache for. Can also be 'all' to list all chains.",
                            "default": "all",
                            "env": "CHAIN"
                        }
                    },
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "COLOR",
                    "default": "auto",
                    "tags": [
                        "auto: Intelligently guess whether to use color output (default)",
                        "always: Force color output",
                        "never: Force disable color output"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "THREADS",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                }
            ]
        },
        {
            "name": "forge clean",
            "description": "Remove the build artifacts and cache directories",
            "usage": "forge clean [OPTIONS]",
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "default": "auto",
                    "tags": [
                        "auto",
                        "always",
                        "never"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--jobs",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--root",
                    "description": "The project's root path.",
                    "value": "<PATH>",
                    "default": "root of the Git repository or current working directory"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings.",
                    "tags": [
                        "2 (-vv): Print logs for all tests.",
                        "3 (-vvv): Print execution traces for failing tests.",
                        "4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.",
                        "5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                    ]
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge clone",
            "description": "Clone a contract from Etherscan",
            "usage": "forge clone [OPTIONS] <ADDRESS> [PATH]",
            "arguments": [
                {
                    "name": "<ADDRESS>",
                    "description": "The contract address to clone"
                },
                {
                    "name": "[PATH]",
                    "description": "The root directory of the cloned project",
                    "default": "."
                }
            ],
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "auto: Intelligently guess whether to use color output (default)",
                        "always: Force color output",
                        "never: Force disable color output"
                    ]
                },
                {
                    "option": "--commit",
                    "description": "Create a commit after installing the dependencies"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--keep-directory-structure",
                    "description": "Keep the original directory structure collected from Etherscan. If this flag is set, the directory structure of the cloned project will be kept as is. By default, the directory structure is re-organized to increase the readability, but may risk some compilation failures."
                },
                {
                    "option": "--no-git",
                    "description": "Install without adding the dependency as a submodule"
                },
                {
                    "option": "--no-remappings-txt",
                    "description": "Do not generate the remappings.txt file. Instead, keep the remappings in the configuration"
                },
                {
                    "shortcut": "-a",
                    "option": "--etherscan-api-version",
                    "description": "The Etherscan API version",
                    "value": "<API_VERSION>",
                    "tags": [
                        "env: ETHERSCAN_API_VERSION="
                    ]
                },
                {
                    "shortcut": "-c",
                    "option": "--chain",
                    "description": "The chain name or EIP-155 chain ID",
                    "value": "<CHAIN>",
                    "tags": [
                        "env: CHAIN="
                    ]
                },
                {
                    "shortcut": "-e",
                    "option": "--etherscan-api-key",
                    "description": "The Etherscan (or equivalent) API key",
                    "value": "<KEY>",
                    "tags": [
                        "env: ETHERSCAN_API_KEY="
                    ]
                },
                {
                    "shortcut": "-h",
                    "option": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "shortcut": "-j",
                    "option": "--threads",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "shortcut": "-q",
                    "option": "--quiet",
                    "description": "Do not print log messages"
                },
                {
                    "shortcut": "-v",
                    "option": "--verbosity",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                },
                {
                    "option": "--shallow",
                    "description": "Perform shallow clones instead of deep ones. Improves performance and reduces disk usage, but prevents switching branches or tags."
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge compiler",
            "description": "Compiler utilities",
            "usage": "forge compiler [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "description": "Retrieves the resolved version(s) of the compiler within the project",
                    "name": "forge compiler resolve",
                    "usage": "Usage: forge compiler resolve [OPTIONS]",
                    "options": [
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>",
                            "default": "auto",
                            "tags": [
                                "display"
                            ]
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--jobs",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>"
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON",
                            "tags": [
                                "display"
                            ]
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--root",
                            "shortcut": "-r",
                            "description": "The root directory",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--skip",
                            "shortcut": "-s",
                            "description": "Skip files that match the given regex pattern",
                            "value": "<REGEX>"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings.",
                            "tags": [
                                "display"
                            ]
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--jobs",
                    "shortcut": "-j",
                    "description": "Number of threads to use",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases"
                    ]
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages.",
                    "tags": [
                        "Display options"
                    ]
                }
            ]
        },
        {
            "name": "forge completions",
            "description": "Generate shell completions script",
            "usage": "Usage: forge completions [OPTIONS] <SHELL>",
            "subcommands": [],
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--jobs",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings.",
                    "tags": [
                        "Display options"
                    ]
                }
            ]
        },
        {
            "name": "forge config",
            "description": "Display the current config",
            "usage": "forge config [OPTIONS] [PATHS]...",
            "options": [
                {
                    "option": "--always-use-create-2-factory",
                    "description": "Use the create 2 factory in all cases including tests and non-broadcasting scripts"
                },
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output"
                },
                {
                    "option": "--basic",
                    "description": "Print only a basic set of the currently set config values"
                },
                {
                    "option": "--block-base-fee-per-gas",
                    "description": "The base fee in a block",
                    "tags": [
                        "aliases: --base-fee"
                    ],
                    "value": "<FEE>"
                },
                {
                    "option": "--block-coinbase",
                    "description": "The coinbase of the block",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--block-difficulty",
                    "description": "The block difficulty",
                    "value": "<DIFFICULTY>"
                },
                {
                    "option": "--block-gas-limit",
                    "description": "The block gas limit",
                    "tags": [
                        "aliases: --gas-limit"
                    ],
                    "value": "<GAS_LIMIT>"
                },
                {
                    "option": "--block-number",
                    "description": "The block number",
                    "value": "<BLOCK>"
                },
                {
                    "option": "--block-prevrandao",
                    "description": "The block prevrandao value. NOTE: Before merge this field was mix_hash",
                    "value": "<PREVRANDAO>"
                },
                {
                    "option": "--block-timestamp",
                    "description": "The timestamp of the block",
                    "value": "<TIMESTAMP>"
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files"
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>"
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--chain",
                    "description": "The chain name or EIP-155 chain ID",
                    "tags": [
                        "aliases: --chain-id"
                    ],
                    "value": "<CHAIN>"
                },
                {
                    "option": "--code-size-limit",
                    "description": "EIP-170: Contract code size limit in bytes. Useful to increase this because of tests. By default, it is 0x6000 (~25kb)",
                    "value": "<CODE_SIZE>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "Possible values: auto, always, never"
                    ]
                },
                {
                    "option": "--compute-units-per-second",
                    "description": "Sets the number of assumed available compute units per second for this provider",
                    "value": "<CUPS>",
                    "default": "330"
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--contracts",
                    "shortcut": "-C",
                    "description": "The contracts source directory",
                    "value": "<PATH>"
                },
                {
                    "option": "--create2-deployer",
                    "description": "The CREATE2 deployer address to use, this will override the one in the config",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error"
                },
                {
                    "option": "--disable-block-gas-limit",
                    "description": "Whether to disable the block gas limit checks",
                    "tags": [
                        "aliases: --no-gas-limit"
                    ]
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking"
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>"
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Example keys: evm.assembly, ewasm, ir, irOptimized, metadata"
                    ]
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Valid values: metadata, ir, irOptimized, ewasm, evm.assembly"
                    ]
                },
                {
                    "option": "--ffi",
                    "description": "Enable the FFI cheatcode"
                },
                {
                    "option": "--fix",
                    "description": "Attempt to fix any configuration warnings"
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile"
                },
                {
                    "option": "--fork-block-number",
                    "description": "Fetch state from a specific block number over a remote endpoint.",
                    "value": "<BLOCK>"
                },
                {
                    "option": "--fork-retries",
                    "description": "Number of retries.",
                    "value": "<RETRIES>"
                },
                {
                    "option": "--fork-retry-backoff",
                    "description": "Initial retry backoff on encountering errors.",
                    "value": "<BACKOFF>"
                },
                {
                    "option": "--fork-url",
                    "shortcut": "-f",
                    "description": "Fetch state over a remote endpoint instead of starting from an empty state.",
                    "value": "<URL>",
                    "tags": [
                        "aliases: --rpc-url"
                    ]
                },
                {
                    "option": "--gas-price",
                    "description": "The gas price",
                    "value": "<GAS_PRICE>"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout.",
                    "tags": [
                        "aliases: --hh"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--ignore-eip-3860",
                    "description": "Ignore initcode contract bytecode size limit introduced by EIP-3860"
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>"
                },
                {
                    "option": "--initial-balance",
                    "description": "The initial balance of deployed test contracts",
                    "value": "<BALANCE>"
                },
                {
                    "option": "--isolate",
                    "description": "Whether to enable isolation of calls. In isolation mode all top-level calls are executed as a separate transaction in a separate EVM context, enabling more precise gas accounting and transaction state changes"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "value": "<LIBRARIES>",
                    "tags": [
                        "env: DAPP_LIBRARIES="
                    ]
                },
                {
                    "option": "--memory-limit",
                    "description": "The memory limit per EVM execution in bytes. If this limit is exceeded, a `MemoryLimitOOG` result is thrown.",
                    "value": "<MEMORY_LIMIT>",
                    "default": "128MiB"
                },
                {
                    "option": "--names",
                    "description": "Print compiled contract names"
                },
                {
                    "option": "--no-auto-detect",
                    "description": "Do not auto-detect the `solc` version"
                },
                {
                    "option": "--no-cache",
                    "description": "Disable the cache"
                },
                {
                    "option": "--no-metadata",
                    "description": "Do not append any metadata to the bytecode."
                },
                {
                    "option": "--no-restart",
                    "description": "Do not restart the command while it's still running"
                },
                {
                    "option": "--no-rpc-rate-limit",
                    "description": "Disables rate limiting for this node's provider.",
                    "tags": [
                        "aliases: --no-rate-limit"
                    ]
                },
                {
                    "option": "--no-storage-caching",
                    "description": "Explicitly disables the use of RPC caching."
                },
                {
                    "option": "--offline",
                    "description": "Do not access the network."
                },
                {
                    "option": "--optimize",
                    "description": "Activate the Solidity optimizer",
                    "value": "[<OPTIMIZE>]",
                    "tags": [
                        "possible values: true, false"
                    ]
                },
                {
                    "option": "--optimizer-runs",
                    "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time of the contract.",
                    "value": "<RUNS>"
                },
                {
                    "option": "--out",
                    "shortcut": "-o",
                    "description": "The path to the contract artifacts folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--remappings",
                    "shortcut": "-R",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--revert-strings",
                    "description": "Revert string configuration.",
                    "value": "<REVERT>"
                },
                {
                    "option": "--run-all",
                    "description": "Explicitly re-run all tests when a change is made."
                },
                {
                    "option": "--sender",
                    "description": "The address which will be executing tests/scripts",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--sizes",
                    "description": "Print compiled contract sizes. Constructor argument length is not included in the calculation of initcode size"
                },
                {
                    "option": "--skip",
                    "description": "Skip building files whose names contain the given filter.",
                    "value": "<SKIP>..."
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--tx-origin",
                    "description": "The transaction origin",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--use",
                    "description": "Specify the solc version, or a path to a local solc, to build with.",
                    "value": "<SOLC_VERSION>"
                },
                {
                    "option": "--use-literal-content",
                    "description": "Changes compilation to only use literal content and not URLs"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages."
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline"
                },
                {
                    "option": "--watch",
                    "shortcut": "-w",
                    "description": "Watch the given files or directories for changes.",
                    "value": "[<PATH>...]"
                },
                {
                    "option": "--watch-delay",
                    "description": "File update debounce delay.",
                    "value": "<DELAY>"
                }
            ],
            "subcommands": []
        },
        {
            "description": "Generate coverage reports",
            "name": "forge coverage",
            "usage": "forge coverage [OPTIONS] [PATH]",
            "options": [
                {
                    "option": "--always-use-create-2-factory",
                    "description": "Use the create 2 factory in all cases including tests and non-broadcasting scripts"
                },
                {
                    "option": "--allow-failure",
                    "description": "Exit with code 0 even if a test fails",
                    "tags": [
                        "env: FORGE_ALLOW_FAILURE"
                    ]
                },
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output"
                },
                {
                    "option": "--block-base-fee-per-gas",
                    "description": "The base fee in a block",
                    "value": "<FEE>",
                    "tags": [
                        "aliases: --base-fee"
                    ]
                },
                {
                    "option": "--block-coinbase",
                    "description": "The coinbase of the block",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--block-difficulty",
                    "description": "The block difficulty",
                    "value": "<DIFFICULTY>"
                },
                {
                    "option": "--block-gas-limit",
                    "description": "The block gas limit",
                    "value": "<GAS_LIMIT>",
                    "tags": [
                        "aliases: --gas-limit"
                    ]
                },
                {
                    "option": "--block-number",
                    "description": "The block number",
                    "value": "<BLOCK>"
                },
                {
                    "option": "--block-prevrandao",
                    "description": "The block prevrandao value. NOTE: Before merge this field was mix_hash",
                    "value": "<PREVRANDAO>"
                },
                {
                    "option": "--block-timestamp",
                    "description": "The timestamp of the block",
                    "value": "<TIMESTAMP>"
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files"
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>"
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--chain",
                    "description": "The chain name or EIP-155 chain ID",
                    "value": "<CHAIN>",
                    "tags": [
                        "aliases: --chain-id"
                    ]
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "possible values: auto, always, never"
                    ]
                },
                {
                    "option": "--code-size-limit",
                    "description": "EIP-170: Contract code size limit in bytes. Useful to increase this because of tests. By default, it is 0x6000 (~25kb)",
                    "value": "<CODE_SIZE>"
                },
                {
                    "option": "--compute-units-per-second",
                    "description": "Sets the number of assumed available compute units per second for this provider",
                    "value": "<CUPS>",
                    "default": "330"
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--contracts",
                    "description": "The contracts source directory",
                    "shortcut": "-C",
                    "value": "<PATH>"
                },
                {
                    "option": "--create2-deployer",
                    "description": "The CREATE2 deployer address to use, this will override the one in the config",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--debug",
                    "description": "Run a single test in the debugger."
                },
                {
                    "option": "--decode-internal",
                    "description": "Identify internal functions in traces."
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error"
                },
                {
                    "option": "--detailed",
                    "description": "Print detailed test summary table"
                },
                {
                    "option": "--disable-block-gas-limit",
                    "description": "Whether to disable the block gas limit checks",
                    "tags": [
                        "aliases: --no-gas-limit"
                    ]
                },
                {
                    "option": "--dump",
                    "description": "Dumps all debugger steps to file",
                    "value": "<PATH>"
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking"
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>"
                },
                {
                    "option": "--exclude-tests",
                    "description": "Whether to exclude tests from the coverage report"
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact.",
                    "value": "<SELECTOR>..."
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files.",
                    "value": "<SELECTOR>..."
                },
                {
                    "option": "--fail-fast",
                    "description": "Stop running tests after the first failure"
                },
                {
                    "option": "--ffi",
                    "description": "Enable the FFI cheatcode"
                },
                {
                    "option": "--flamechart",
                    "description": "Generate a flamechart for a single test. Implies `--decode-internal`."
                },
                {
                    "option": "--flamegraph",
                    "description": "Generate a flamegraph for a single test. Implies `--decode-internal`."
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile"
                },
                {
                    "option": "--fork-block-number",
                    "description": "Fetch state from a specific block number over a remote endpoint.",
                    "value": "<BLOCK>"
                },
                {
                    "option": "--fork-retries",
                    "description": "Number of retries.",
                    "value": "<RETRIES>"
                },
                {
                    "option": "--fork-retry-backoff",
                    "description": "Initial retry backoff on encountering errors.",
                    "value": "<BACKOFF>"
                },
                {
                    "option": "--fork-url",
                    "description": "Fetch state over a remote endpoint instead of starting from an empty state.",
                    "value": "<URL>",
                    "tags": [
                        "aliases: --rpc-url"
                    ]
                },
                {
                    "option": "--fuzz-input-file",
                    "description": "File to rerun fuzz failures from",
                    "value": "<FUZZ_INPUT_FILE>"
                },
                {
                    "option": "--fuzz-runs",
                    "description": "Set number of runs for fuzz testing",
                    "value": "<RUNS>",
                    "tags": [
                        "env: FOUNDRY_FUZZ_RUNS"
                    ]
                },
                {
                    "option": "--fuzz-seed",
                    "description": "Set seed used to generate randomness during your fuzz runs",
                    "value": "<FUZZ_SEED>"
                },
                {
                    "option": "--fuzz-timeout",
                    "description": "Timeout for each fuzz run in seconds",
                    "value": "<TIMEOUT>",
                    "tags": [
                        "env: FOUNDRY_FUZZ_TIMEOUT"
                    ]
                },
                {
                    "option": "--gas-price",
                    "description": "The gas price",
                    "value": "<GAS_PRICE>"
                },
                {
                    "option": "--gas-report",
                    "description": "Print a gas report",
                    "tags": [
                        "env: FORGE_GAS_REPORT"
                    ]
                },
                {
                    "option": "--gas-snapshot-check",
                    "description": "Check gas snapshots against previous runs",
                    "value": "<GAS_SNAPSHOT_CHECK>",
                    "tags": [
                        "env: FORGE_SNAPSHOT_CHECK",
                        "possible values: true, false"
                    ]
                },
                {
                    "option": "--gas-snapshot-emit",
                    "description": "Enable/disable recording of gas snapshot results",
                    "value": "<GAS_SNAPSHOT_EMIT>",
                    "tags": [
                        "env: FORGE_SNAPSHOT_EMIT",
                        "possible values: true, false"
                    ]
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout.",
                    "tags": [
                        "aliases: --hh"
                    ]
                },
                {
                    "option": "--help",
                    "description": "Print help (see a summary with '-h')",
                    "shortcut": "-h"
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>"
                },
                {
                    "option": "--include-libs",
                    "description": "Whether to include libraries in the coverage report"
                },
                {
                    "option": "--initial-balance",
                    "description": "The initial balance of deployed test contracts",
                    "value": "<BALANCE>"
                },
                {
                    "option": "--isolate",
                    "description": "Whether to enable isolation of calls."
                },
                {
                    "option": "--junit",
                    "description": "Output test results as JUnit XML report"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--lcov-version",
                    "description": "The version of the LCOV 'tracefile' format to use.",
                    "value": "<LCOV_VERSION>",
                    "default": "1"
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "value": "<LIBRARIES>",
                    "tags": [
                        "env: DAPP_LIBRARIES"
                    ]
                },
                {
                    "option": "--list",
                    "description": "List tests instead of running them",
                    "shortcut": "-l"
                },
                {
                    "option": "--match-contract",
                    "description": "Only run tests in contracts matching the specified regex pattern",
                    "value": "<REGEX>",
                    "tags": [
                        "aliases: --mc"
                    ]
                },
                {
                    "option": "--match-path",
                    "description": "Only run tests in source files matching the specified glob pattern",
                    "value": "<GLOB>",
                    "tags": [
                        "aliases: --mp"
                    ]
                },
                {
                    "option": "--match-test",
                    "description": "Only run test functions matching the specified regex pattern",
                    "value": "<REGEX>",
                    "tags": [
                        "aliases: --mt"
                    ]
                },
                {
                    "option": "--memory-limit",
                    "description": "The memory limit per EVM execution in bytes. If this limit is exceeded, a `MemoryLimitOOG` result is thrown.",
                    "value": "<MEMORY_LIMIT>",
                    "default": "128MiB"
                },
                {
                    "option": "--no-auto-detect",
                    "description": "Do not auto-detect the `solc` version"
                },
                {
                    "option": "--no-cache",
                    "description": "Disable the cache"
                },
                {
                    "option": "--no-match-contract",
                    "description": "Only run tests in contracts that do not match the specified regex pattern",
                    "value": "<REGEX>",
                    "tags": [
                        "aliases: --nmc"
                    ]
                },
                {
                    "option": "--no-match-coverage",
                    "description": "Only show coverage for files that do not match the specified regex pattern",
                    "value": "<REGEX>",
                    "tags": [
                        "aliases: --nmco"
                    ]
                },
                {
                    "option": "--no-match-path",
                    "description": "Only run tests in source files that do not match the specified glob pattern",
                    "value": "<GLOB>",
                    "tags": [
                        "aliases: --nmp"
                    ]
                },
                {
                    "option": "--no-match-test",
                    "description": "Only run test functions that do not match the specified regex pattern",
                    "value": "<REGEX>",
                    "tags": [
                        "aliases: --nmt"
                    ]
                },
                {
                    "option": "--no-restart",
                    "description": "Do not restart the command while it's still running"
                },
                {
                    "option": "--no-rpc-rate-limit",
                    "description": "Disables rate limiting for this node's provider.",
                    "tags": [
                        "aliases: --no-rate-limit"
                    ]
                },
                {
                    "option": "--no-storage-caching",
                    "description": "Explicitly disables the use of RPC caching."
                },
                {
                    "option": "--no-metadata",
                    "description": "Do not append any metadata to the bytecode."
                },
                {
                    "option": "--offline",
                    "description": "Do not access the network."
                },
                {
                    "option": "--optimize",
                    "description": "Activate the Solidity optimizer",
                    "tags": [
                        "possible values: true, false"
                    ]
                },
                {
                    "option": "--optimizer-runs",
                    "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time of the contract.",
                    "value": "<RUNS>"
                },
                {
                    "option": "--odyssey",
                    "description": "Whether to enable Odyssey features"
                },
                {
                    "option": "--out",
                    "description": "The path to the contract artifacts folder",
                    "shortcut": "-o",
                    "value": "<PATH>"
                },
                {
                    "option": "--quiet",
                    "description": "Do not print log messages",
                    "shortcut": "-q"
                },
                {
                    "option": "--remappings",
                    "description": "The project's remappings",
                    "shortcut": "-R",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--report",
                    "description": "The report type to use for coverage.",
                    "value": "<REPORT>",
                    "default": "summary",
                    "tags": [
                        "possible values: summary, lcov, debug, bytecode"
                    ]
                },
                {
                    "option": "--report-file",
                    "description": "The path to output the report.",
                    "shortcut": "-r",
                    "value": "<PATH>"
                },
                {
                    "option": "--rerun",
                    "description": "Re-run recorded test failures from last run."
                },
                {
                    "option": "--revert-strings",
                    "description": "Revert string configuration.",
                    "value": "<REVERT>"
                },
                {
                    "option": "--root",
                    "description": "The project's root path.",
                    "value": "<PATH>"
                },
                {
                    "option": "--run-all",
                    "description": "Explicitly re-run all tests when a change is made."
                },
                {
                    "option": "--sender",
                    "description": "The address which will be executing tests/scripts",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--show-progress",
                    "description": "Show test execution progress"
                },
                {
                    "option": "--skip",
                    "description": "Skip building files whose names contain the given filter.",
                    "value": "<SKIP>..."
                },
                {
                    "option": "--suppress-successful-traces",
                    "description": "Suppress successful test traces and show only traces for failures",
                    "shortcut": "-s",
                    "tags": [
                        "env: FORGE_SUPPRESS_SUCCESSFUL_TRACES"
                    ]
                },
                {
                    "option": "--summary",
                    "description": "Print test summary table"
                },
                {
                    "option": "--threads",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "shortcut": "-j",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--tx-origin",
                    "description": "The transaction origin",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--use",
                    "description": "Specify the solc version, or a path to a local solc, to build with.",
                    "value": "<SOLC_VERSION>"
                },
                {
                    "option": "--use-literal-content",
                    "description": "Changes compilation to only use literal content and not URLs"
                },
                {
                    "option": "--verbosity",
                    "description": "Verbosity level of the log messages.",
                    "shortcut": "-v"
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline"
                },
                {
                    "option": "--watch",
                    "description": "Watch the given files or directories for changes.",
                    "shortcut": "-w",
                    "value": "[<PATH>...]"
                },
                {
                    "option": "--watch-delay",
                    "description": "File update debounce delay.",
                    "value": "<DELAY>"
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge create",
            "description": "Format log messages as JSON",
            "usage": "forge create [OPTIONS] <CONTRACT>",
            "subcommands": [],
            "options": [
                {
                    "option": "--access-list",
                    "description": "EIP-2930 access list. Accepts either a JSON-encoded access list or an empty value to create the access list via an RPC call to `eth_createAccessList`. To retrieve only the access list portion, use the `cast access-list` command.",
                    "value": "<ACCESS_LIST>"
                },
                {
                    "option": "--account",
                    "description": "Use a keystore from the default keystores folder (~/.foundry/keystores) by its filename",
                    "value": "<ACCOUNT_NAME>",
                    "tags": [
                        "env: ETH_KEYSTORE_ACCOUNT"
                    ]
                },
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output"
                },
                {
                    "option": "--auth",
                    "description": "EIP-7702 authorization list. Can be either a hex-encoded signed authorization or an address.",
                    "value": "<AUTH>"
                },
                {
                    "option": "--aws",
                    "description": "Use AWS Key Management Service"
                },
                {
                    "option": "--blob",
                    "description": "Send a EIP-4844 blob transaction"
                },
                {
                    "option": "--blob-gas-price",
                    "description": "Gas price for EIP-4844 blob transaction",
                    "value": "<BLOB_PRICE>",
                    "tags": [
                        "env: ETH_BLOB_GAS_PRICE"
                    ]
                },
                {
                    "option": "--broadcast",
                    "description": "Broadcast the transaction"
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files"
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>"
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--chain",
                    "shortcut": "-c",
                    "description": "The chain name or EIP-155 chain ID",
                    "value": "<CHAIN>",
                    "tags": [
                        "env: CHAIN"
                    ]
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages Possible values: - auto:   Intelligently guess whether to use color output (default) - always: Force color output - never:  Force disable color output",
                    "value": "<COLOR>"
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--constructor-args",
                    "description": "The constructor arguments",
                    "value": "<ARGS>..."
                },
                {
                    "option": "--constructor-args-path",
                    "description": "The path to a file containing the constructor arguments",
                    "value": "<PATH>"
                },
                {
                    "option": "--contracts",
                    "shortcut": "-C",
                    "description": "The contracts source directory",
                    "value": "<PATH>"
                },
                {
                    "option": "--delay",
                    "description": "Optional delay to apply in between verification attempts, in seconds",
                    "value": "<DELAY>",
                    "default": "5"
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error"
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking"
                },
                {
                    "option": "--etherscan-api-key",
                    "shortcut": "-e",
                    "description": "The Etherscan (or equivalent) API key",
                    "value": "<KEY>",
                    "tags": [
                        "env: ETHERSCAN_API_KEY"
                    ]
                },
                {
                    "option": "--etherscan-api-version",
                    "shortcut": "-a",
                    "description": "The Etherscan API version",
                    "value": "<API_VERSION>",
                    "tags": [
                        "env: ETHERSCAN_API_VERSION"
                    ]
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>"
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact. Example keys: evm.assembly, ewasm, ir, irOptimized, metadata For a full description, see <https://docs.soliditylang.org/en/v0.8.13/using-the-compiler.html#input-description>",
                    "value": "<SELECTOR>..."
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files. Valid values: metadata, ir, irOptimized, ewasm, evm.assembly",
                    "value": "<SELECTOR>..."
                },
                {
                    "option": "--flashbots",
                    "description": "Use the Flashbots RPC URL with fast mode (<https://rpc.flashbots.net/fast>). This shares the transaction privately with all registered builders. See: <https://docs.flashbots.net/flashbots-protect/quick-start#faster-transactions>"
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile"
                },
                {
                    "option": "--from",
                    "shortcut": "-f",
                    "description": "The sender account",
                    "value": "<ADDRESS>",
                    "tags": [
                        "env: ETH_FROM"
                    ]
                },
                {
                    "option": "--gas-limit",
                    "description": "Gas limit for the transaction",
                    "value": "<GAS_LIMIT>",
                    "tags": [
                        "env: ETH_GAS_LIMIT"
                    ]
                },
                {
                    "option": "--gas-price",
                    "description": "Gas price for legacy transactions, or max fee per gas for EIP1559 transactions, either specified in wei, or as a string with a unit type. Examples: 1ether, 10gwei, 0.01ether",
                    "value": "<PRICE>",
                    "tags": [
                        "env: ETH_GAS_PRICE"
                    ]
                },
                {
                    "option": "--gcp",
                    "description": "Use Google Cloud Key Management Service"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout. This is the same as using: `--contracts contracts --lib-paths node_modules`.",
                    "tags": [
                        "aliases: --hh"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>"
                },
                {
                    "option": "--insecure",
                    "shortcut": "-k",
                    "description": "Allow insecure RPC connections (accept invalid HTTPS certificates). When the provider's inner runtime transport variant is HTTP, this configures the reqwest client to accept invalid certificates."
                },
                {
                    "option": "--interactive",
                    "shortcut": "-i",
                    "description": "Open an interactive prompt to enter your private key"
                },
                {
                    "option": "--jwt-secret",
                    "description": "JWT Secret for the RPC endpoint. The JWT secret will be used to create a JWT for a RPC. For example, the following can be used to simulate a CL `engine_forkchoiceUpdated` call: cast rpc --jwt-secret <JWT_SECRET> engine_forkchoiceUpdatedV2 '["
                }
            ],
            "env: ETH_RPC_JWT_SECRET": {
                "option": "--json",
                "description": "Format log messages as JSON"
            },
            "": [
                "--json"
            ],
            "value": "<JSON>"
        },
        {
            "name": "forge doc",
            "description": "Generate documentation for the project",
            "usage": "forge doc [OPTIONS]",
            "options": [
                {
                    "option": "--build",
                    "shortcut": "-b",
                    "description": "Build the `mdbook` from generated files"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "auto",
                        "always",
                        "never"
                    ]
                },
                {
                    "option": "--deployments",
                    "description": "The relative path to the `hardhat-deploy` or `forge-deploy` artifact directory. Leave blank for default",
                    "value": "[<DEPLOYMENTS>]"
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--hostname",
                    "description": "Hostname for serving documentation",
                    "value": "<HOSTNAME>"
                },
                {
                    "option": "--include-libraries",
                    "shortcut": "-i",
                    "description": "Whether to create docs for external libraries"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--open",
                    "description": "Open the documentation in a browser after serving"
                },
                {
                    "option": "--out",
                    "shortcut": "-o",
                    "description": "The doc's output path. By default, it is the `docs/` in project root.",
                    "value": "<PATH>"
                },
                {
                    "option": "--port",
                    "shortcut": "-p",
                    "description": "Port for serving documentation",
                    "value": "<PORT>"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--root",
                    "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>"
                },
                {
                    "option": "--serve",
                    "shortcut": "-s",
                    "description": "Serve the documentation"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "--jobs"
                    ]
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                },
                {
                    "option": "--watch-delay",
                    "description": "File update debounce delay. Defaults to 50ms. Parses as decimal seconds by default, but using an integer with the `ms` suffix may be more convenient. When using --poll mode, you'll want a larger duration, or risk overloading disk I/O.",
                    "value": "<DELAY>"
                }
            ],
            "subcommands": [
                {
                    "name": "forge doc watch",
                    "subcommands": [],
                    "options": []
                }
            ]
        },
        {
            "name": "forge eip712",
            "description": "Generate EIP-712 struct encodings for structs from a given file",
            "usage": "forge eip712 [OPTIONS] <PATH>",
            "subcommands": [],
            "options": [
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output"
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files"
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>"
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "Possible values:",
                        "- auto: Intelligently guess whether to use color output (default)",
                        "- always: Force color output",
                        "- never: Force disable color output"
                    ]
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error"
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking"
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>"
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Example keys: evm.assembly, ewasm, ir, irOptimized, metadata",
                        "For a full description, see <https://docs.soliditylang.org/en/v0.8.13/using-the-compiler.html#input-description>"
                    ]
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Valid values: metadata, ir, irOptimized, ewasm, evm.assembly"
                    ]
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout.",
                    "tags": [
                        "This is the same as using: `--contracts contracts --lib-paths node_modules`",
                        "[aliases: --hh]"
                    ]
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>"
                },
                {
                    "option": "--json",
                    "description": "Output in JSON format"
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "value": "<LIBRARIES>",
                    "tags": [
                        "[env: DAPP_LIBRARIES=]"
                    ]
                },
                {
                    "option": "--no-auto-detect",
                    "description": "Do not auto-detect the `solc` version"
                },
                {
                    "option": "--no-cache",
                    "description": "Disable the cache"
                },
                {
                    "option": "--no-metadata",
                    "description": "Do not append any metadata to the bytecode.",
                    "tags": [
                        "This is equivalent to setting `bytecode_hash` to `none` and `cbor_metadata` to `false`."
                    ]
                },
                {
                    "option": "--offline",
                    "description": "Do not access the network.",
                    "tags": [
                        "Missing solc versions will not be installed."
                    ]
                },
                {
                    "option": "--optimize",
                    "description": "Activate the Solidity optimizer",
                    "value": "[<OPTIMIZE>]",
                    "tags": [
                        "[possible values: true, false]"
                    ]
                },
                {
                    "option": "--optimizer-runs",
                    "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time of the contract. This means it is a trade-off parameter between code size (deploy cost) and code execution cost (cost after deployment). An `optimizer_runs` parameter of `1` will produce short but expensive code. In contrast, a larger `optimizer_runs` parameter will produce longer but more gas efficient code",
                    "value": "<RUNS>"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--revert-strings",
                    "description": "Revert string configuration.",
                    "value": "<REVERT>",
                    "tags": [
                        "Possible values are \"default\", \"strip\" (remove), \"debug\" (Solidity-generated revert strings) and \"verboseDebug\""
                    ]
                },
                {
                    "option": "--root",
                    "description": "The project's root path.",
                    "value": "<PATH>",
                    "tags": [
                        "By default root of the Git repository, if in one, or the current working directory."
                    ]
                },
                {
                    "option": "--skip",
                    "description": "Skip building files whose names contain the given filter.",
                    "value": "<SKIP>...",
                    "tags": [
                        "`test` and `script` are aliases for `.t.sol` and `.s.sol`."
                    ]
                },
                {
                    "option": "--use",
                    "description": "Specify the solc version, or a path to a local solc, to build with.",
                    "value": "<SOLC_VERSION>",
                    "tags": [
                        "Valid values are in the format `x.y.z`, `solc:x.y.z` or `path/to/solc`."
                    ]
                },
                {
                    "option": "--use-literal-content",
                    "description": "Changes compilation to only use literal content and not URLs"
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline"
                },
                {
                    "option": "-C",
                    "shortcut": "--contracts",
                    "description": "The contracts source directory",
                    "value": "<PATH>"
                },
                {
                    "option": "-R",
                    "shortcut": "--remappings",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-j",
                    "shortcut": "--threads",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "[aliases: --jobs]"
                    ]
                },
                {
                    "option": "-o",
                    "shortcut": "--out",
                    "description": "The path to the contract artifacts folder",
                    "value": "<PATH>"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Do not print log messages"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Verbosity level of the log messages.",
                    "tags": [
                        "Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).",
                        "Depending on the context the verbosity levels have different meanings.",
                        "For example, the verbosity levels of the EVM are:",
                        "- 2 (-vv): Print logs for all tests.",
                        "- 3 (-vvv): Print execution traces for failing tests.",
                        "- 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.",
                        "- 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                    ]
                }
            ]
        },
        {
            "name": "forge flatten",
            "description": "Flatten a source file and all of its imports into one file",
            "usage": "Usage: forge flatten [OPTIONS] <PATH>",
            "subcommands": [],
            "options": [
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>"
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--contracts",
                    "shortcut": "-C",
                    "description": "The contracts source directory",
                    "value": "<PATH>"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout. This is the same as using: `--contracts contracts --lib-paths node_modules`.",
                    "tags": [
                        "--hh"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--output",
                    "shortcut": "-o",
                    "description": "The path to output the flattened contract. If not specified, the flattened contract will be output to stdout.",
                    "value": "<PATH>"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--remappings",
                    "shortcut": "-R",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--root",
                    "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "--jobs"
                    ]
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                }
            ]
        },
        {
            "name": "forge fmt",
            "description": "Format Solidity source files",
            "usage": "forge fmt [OPTIONS] [PATH]...",
            "options": [
                {
                    "option": "--check",
                    "description": "Run in 'check' mode. Exits with 0 if input is formatted correctly. Exits with 1 if formatting is required."
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages. Possible values: auto, always, never",
                    "value": "<COLOR>",
                    "default": "auto"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--no-restart",
                    "description": "Do not restart the command while it's still running",
                    "tags": [
                        "watch"
                    ]
                },
                {
                    "option": "--root",
                    "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>"
                },
                {
                    "option": "--run-all",
                    "description": "Explicitly re-run all tests when a change is made. By default, only the tests of the last modified test file are executed.",
                    "tags": [
                        "watch"
                    ]
                },
                {
                    "option": "--watch-delay",
                    "description": "File update debounce delay. Defaults to 50ms. Parses as decimal seconds by default, but using an integer with the `ms` suffix may be more convenient. When using --poll mode, you'll want a larger duration, or risk overloading disk I/O.",
                    "value": "<DELAY>",
                    "default": "50ms",
                    "tags": [
                        "watch"
                    ]
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-j",
                    "shortcut": "--threads",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores [aliases: --jobs]",
                    "value": "<THREADS>"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Do not print log messages"
                },
                {
                    "option": "-r",
                    "shortcut": "--raw",
                    "description": "In 'check' and stdin modes, outputs raw formatted code instead of the diff"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).",
                    "value": "..."
                },
                {
                    "option": "-w",
                    "shortcut": "--watch",
                    "description": "Watch the given files or directories for changes. If no paths are provided, the source and test directories of the project are watched.",
                    "value": "[<PATH>...]",
                    "tags": [
                        "watch"
                    ]
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge geiger",
            "description": "Detects usage of unsafe cheat codes in a project and its dependencies",
            "usage": "forge geiger [OPTIONS] [PATH]...",
            "arguments": [
                {
                    "name": "[PATH]...",
                    "description": "Paths to files or directories to detect"
                }
            ],
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "auto",
                        "always",
                        "never"
                    ]
                },
                {
                    "option": "--ignore",
                    "description": "Globs to ignore",
                    "value": "<PATH>..."
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--root",
                    "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge generate",
            "description": "Generate scaffold files",
            "usage": "forge generate [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "forge generate test",
                    "description": "Scaffolds test file for given contract",
                    "usage": "forge generate test [OPTIONS] --contract-name <CONTRACT_NAME>",
                    "options": [
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "COLOR",
                            "tags": [
                                "auto",
                                "always",
                                "never"
                            ]
                        },
                        {
                            "option": "--contract-name",
                            "shortcut": "-c",
                            "description": "Contract name for test generation",
                            "value": "CONTRACT_NAME"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "THREADS",
                            "tags": [
                                "aliases: --jobs"
                            ]
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages.\nPass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).\nDepending on the context the verbosity levels have different meanings.\nFor example, the verbosity levels of the EVM are:\n- 2 (-vv): Print logs for all tests.\n- 3 (-vvv): Print execution traces for failing tests.\n- 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.\n- 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "display"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON",
                    "tags": [
                        "display"
                    ]
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages.\n\nPass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).\n\nDepending on the context the verbosity levels have different meanings.\n\nFor example, the verbosity levels of the EVM are:\n- 2 (-vv): Print logs for all tests.\n- 3 (-vvv): Print execution traces for failing tests.\n- 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.\n- 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                }
            ]
        },
        {
            "name": "forge generate-fig-spec",
            "description": "Generate Fig autocompletion spec",
            "usage": "forge generate-fig-spec [OPTIONS]",
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "default": "auto",
                    "tags": [
                        "auto: Intelligently guess whether to use color output (default)",
                        "always: Force color output",
                        "never: Force disable color output"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--jobs",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge init",
            "description": "Create a new Forge project",
            "usage": "forge init [OPTIONS] [PATH]",
            "arguments": {
                "PATH": {
                    "description": "The root directory of the new project",
                    "default": "."
                }
            },
            "options": [
                {
                    "option": "--branch",
                    "shortcut": "-b",
                    "description": "Branch argument that can only be used with template option. If not specified, the default branch is used",
                    "value": "<BRANCH>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "auto",
                        "always",
                        "never"
                    ]
                },
                {
                    "option": "--commit",
                    "description": "Create a commit after installing the dependencies"
                },
                {
                    "option": "--force",
                    "description": "Create the project even if the specified root directory is not empty"
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--no-git",
                    "description": "Install without adding the dependency as a submodule"
                },
                {
                    "option": "--offline",
                    "description": "Do not install dependencies from the network",
                    "tags": [
                        "--no-deps"
                    ]
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--shallow",
                    "description": "Perform shallow clones instead of deep ones. Improves performance and reduces disk usage, but prevents switching branches or tags."
                },
                {
                    "option": "--template",
                    "shortcut": "-t",
                    "description": "The template to start from",
                    "value": "<TEMPLATE>"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "--jobs"
                    ]
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                },
                {
                    "option": "--vscode",
                    "description": "Create a .vscode/settings.json file with Solidity settings, and generate a remappings.txt file"
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge inspect",
            "description": "Get specialized information about a smart contract",
            "usage": "forge inspect [OPTIONS] <CONTRACT> <FIELD>",
            "options": [
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output"
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files"
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>"
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "auto: Intelligently guess whether to use color output (default)",
                        "always: Force color output",
                        "never: Force disable color output"
                    ]
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error"
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking"
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>"
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Example keys: evm.assembly, ewasm, ir, irOptimized, metadata",
                        "For a full description, see <https://docs.soliditylang.org/en/v0.8.13/using-the-compiler.html#input-description>"
                    ]
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Valid values: metadata, ir, irOptimized, ewasm, evm.assembly"
                    ]
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout.",
                    "tags": [
                        "This is the same as using: `--contracts contracts --lib-paths node_modules`.",
                        "aliases: --hh"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "value": "<LIBRARIES>",
                    "tags": [
                        "env: DAPP_LIBRARIES="
                    ]
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--no-auto-detect",
                    "description": "Do not auto-detect the `solc` version"
                },
                {
                    "option": "--no-cache",
                    "description": "Disable the cache"
                },
                {
                    "option": "--no-metadata",
                    "description": "Do not append any metadata to the bytecode.",
                    "tags": [
                        "This is equivalent to setting `bytecode_hash` to `none` and `cbor_metadata` to `false`."
                    ]
                },
                {
                    "option": "--offline",
                    "description": "Do not access the network.",
                    "tags": [
                        "Missing solc versions will not be installed."
                    ]
                },
                {
                    "option": "--optimize",
                    "description": "Activate the Solidity optimizer",
                    "value": "[<OPTIMIZE>]",
                    "tags": [
                        "possible values: true, false"
                    ]
                },
                {
                    "option": "--optimizer-runs",
                    "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time of the contract. This means it is a trade-off parameter between code size (deploy cost) and code execution cost (cost after deployment). An `optimizer_runs` parameter of `1` will produce short but expensive code. In contrast, a larger `optimizer_runs` parameter will produce longer but more gas efficient code",
                    "value": "<RUNS>"
                },
                {
                    "option": "--out",
                    "shortcut": "-o",
                    "description": "The path to the contract artifacts folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--remappings",
                    "shortcut": "-R",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--revert-strings",
                    "description": "Revert string configuration.",
                    "value": "<REVERT>",
                    "tags": [
                        "Possible values are \"default\", \"strip\" (remove), \"debug\" (Solidity-generated revert strings) and \"verboseDebug\""
                    ]
                },
                {
                    "option": "--root",
                    "description": "The project's root path.",
                    "value": "<PATH>",
                    "tags": [
                        "By default root of the Git repository, if in one, or the current working directory."
                    ]
                },
                {
                    "option": "--skip",
                    "description": "Skip building files whose names contain the given filter.",
                    "value": "<SKIP>...",
                    "tags": [
                        "`test` and `script` are aliases for `.t.sol` and `.s.sol`."
                    ]
                },
                {
                    "option": "--strip-yul-comments",
                    "shortcut": "-s",
                    "description": "Whether to remove comments when inspecting `ir` and `irOptimized` artifact fields"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--use",
                    "description": "Specify the solc version, or a path to a local solc, to build with.",
                    "value": "<SOLC_VERSION>",
                    "tags": [
                        "Valid values are in the format `x.y.z`, `solc:x.y.z` or `path/to/solc`."
                    ]
                },
                {
                    "option": "--use-literal-content",
                    "description": "Changes compilation to only use literal content and not URLs"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages.",
                    "tags": [
                        "Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).",
                        "Depending on the context the verbosity levels have different meanings.",
                        "For example, the verbosity levels of the EVM are:",
                        "- 2 (-vv): Print logs for all tests.",
                        "- 3 (-vvv): Print execution traces for failing tests.",
                        "- 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.",
                        "- 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                    ]
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline"
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge install",
            "description": "Install one or multiple dependencies. If no arguments are provided, then existing dependencies will be installed.",
            "usage": [
                "forge install [OPTIONS] [DEPENDENCIES]...",
                "forge install [OPTIONS] <github username>/<github project>@<tag>...",
                "forge install [OPTIONS] <alias>=<github username>/<github project>@<tag>...",
                "forge install [OPTIONS] <https://<github token>@git url>...",
                "forge install [OPTIONS] <https:// git url>..."
            ],
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages. Possible values: auto, always, never",
                    "value": "<COLOR>",
                    "default": "auto",
                    "tags": [
                        "display"
                    ]
                },
                {
                    "option": "--commit",
                    "description": "Create a commit after installing the dependencies"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON",
                    "tags": [
                        "display"
                    ]
                },
                {
                    "option": "--no-git",
                    "description": "Install without adding the dependency as a submodule"
                },
                {
                    "option": "--root",
                    "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>"
                },
                {
                    "option": "--shallow",
                    "description": "Perform shallow clones instead of deep ones. Improves performance and reduces disk usage, but prevents switching branches or tags."
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-j",
                    "shortcut": "--threads",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Do not print log messages",
                    "tags": [
                        "display"
                    ]
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings.",
                    "tags": [
                        "display"
                    ]
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge lint",
            "description": "Lint Solidity source files",
            "usage": "Usage: forge lint [OPTIONS] [PATH]...",
            "subcommands": [],
            "options": [
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output"
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files"
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>"
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "possible values: auto, always, never"
                    ]
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--contracts",
                    "shortcut": "-C",
                    "description": "The contracts source directory",
                    "value": "<PATH>"
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error"
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking"
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>"
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Example keys: evm.assembly, ewasm, ir, irOptimized, metadata",
                        "For a full description, see <https://docs.soliditylang.org/en/v0.8.13/using-the-compiler.html#input-description>"
                    ]
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files.",
                    "value": "<SELECTOR>...",
                    "tags": [
                        "Valid values: metadata, ir, irOptimized, ewasm, evm.assembly"
                    ]
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout.",
                    "tags": [
                        "This is the same as using: `--contracts contracts --lib-paths node_modules`.",
                        "aliases: --hh"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>"
                },
                {
                    "option": "--json",
                    "description": "Activates the linter's JSON formatter (rustc-compatible)"
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "value": "<LIBRARIES>",
                    "tags": [
                        "env: DAPP_LIBRARIES="
                    ]
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--no-auto-detect",
                    "description": "Do not auto-detect the `solc` version"
                },
                {
                    "option": "--no-cache",
                    "description": "Disable the cache"
                },
                {
                    "option": "--no-metadata",
                    "description": "Do not append any metadata to the bytecode.",
                    "tags": [
                        "This is equivalent to setting `bytecode_hash` to `none` and `cbor_metadata` to `false`."
                    ]
                },
                {
                    "option": "--offline",
                    "description": "Do not access the network.",
                    "tags": [
                        "Missing solc versions will not be installed."
                    ]
                },
                {
                    "option": "--only-lint",
                    "description": "Specifies which lints to run based on their ID (e.g., \"incorrect-shift\"). Overrides the `exclude_lints` project config",
                    "value": "<LINT_ID>..."
                },
                {
                    "option": "--optimize",
                    "description": "Activate the Solidity optimizer",
                    "value": "[<OPTIMIZE>]",
                    "tags": [
                        "possible values: true, false"
                    ]
                },
                {
                    "option": "--optimizer-runs",
                    "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time of the contract.",
                    "value": "<RUNS>"
                },
                {
                    "option": "--out",
                    "shortcut": "-o",
                    "description": "The path to the contract artifacts folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--remappings",
                    "shortcut": "-R",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--revert-strings",
                    "description": "Revert string configuration.",
                    "value": "<REVERT>",
                    "tags": [
                        "Possible values are \"default\", \"strip\" (remove), \"debug\" (Solidity-generated revert strings) and \"verboseDebug\""
                    ]
                },
                {
                    "option": "--root",
                    "description": "The project's root path.",
                    "value": "<PATH>",
                    "tags": [
                        "By default root of the Git repository, if in one, or the current working directory."
                    ]
                },
                {
                    "option": "--severity",
                    "description": "Specifies which lints to run based on severity. Overrides the `severity` project config.",
                    "value": "<SEVERITY>...",
                    "tags": [
                        "possible values: high, med, low, info, gas"
                    ]
                },
                {
                    "option": "--skip",
                    "description": "Skip building files whose names contain the given filter.",
                    "value": "<SKIP>...",
                    "tags": [
                        "`test` and `script` are aliases for `.t.sol` and `.s.sol`."
                    ]
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--use",
                    "description": "Specify the solc version, or a path to a local solc, to build with.",
                    "value": "<SOLC_VERSION>",
                    "tags": [
                        "Valid values are in the format `x.y.z`, `solc:x.y.z` or `path/to/solc`."
                    ]
                },
                {
                    "option": "--use-literal-content",
                    "description": "Changes compilation to only use literal content and not URLs"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages.",
                    "tags": [
                        "Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).",
                        "Depending on the context the verbosity levels have different meanings.",
                        "For example, the verbosity levels of the EVM are:",
                        "- 2 (-vv): Print logs for all tests.",
                        "- 3 (-vvv): Print execution traces for failing tests.",
                        "- 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.",
                        "- 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                    ]
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline"
                }
            ]
        },
        {
            "name": "forge remappings",
            "description": "Get the automatically inferred remappings for the project",
            "usage": "Usage: forge remappings [OPTIONS]",
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--pretty",
                    "description": "Pretty-print the remappings, grouping each of them by context"
                },
                {
                    "option": "--root",
                    "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-j",
                    "shortcut": "--threads",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Do not print log messages"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings.",
                    "tags": [
                        "2 (-vv): Print logs for all tests.",
                        "3 (-vvv): Print execution traces for failing tests.",
                        "4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.",
                        "5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                    ]
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge remove",
            "description": "Remove one or multiple dependencies",
            "usage": "forge remove [OPTIONS] <DEPENDENCIES>...",
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "default": "auto",
                    "tags": [
                        "display"
                    ]
                },
                {
                    "option": "--force",
                    "shortcut": "-f",
                    "description": "Override the up-to-date check"
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON",
                    "tags": [
                        "display"
                    ]
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--root",
                    "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge script",
            "description": "Run a smart contract as a script, building transactions that can be sent onchain",
            "usage": "forge script [OPTIONS] <PATH> [ARGS]...",
            "subcommands": [],
            "options": [
                {
                    "option": "--account",
                    "description": "Use a keystore from the default keystores folder (~/.foundry/keystores) by its filename",
                    "tags": [
                        "env: ETH_KEYSTORE_ACCOUNT="
                    ],
                    "shortcut": null
                },
                {
                    "option": "--accounts",
                    "description": "Use a keystore from the default keystores folder (~/.foundry/keystores) by its filename",
                    "tags": [
                        "aliases: --account"
                    ],
                    "shortcut": null
                },
                {
                    "option": "--always-use-create-2-factory",
                    "description": "Use the create 2 factory in all cases including tests and non-broadcasting scripts",
                    "shortcut": null
                },
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output",
                    "shortcut": null
                },
                {
                    "option": "--aws",
                    "description": "Use AWS Key Management Service",
                    "shortcut": null
                },
                {
                    "option": "--batch-size",
                    "description": "Batch size of transactions. This is ignored and set to 1 if batching is not available or `--slow` is enabled.",
                    "value": "<BATCH_SIZE>",
                    "default": "100",
                    "shortcut": null
                },
                {
                    "option": "--block-base-fee-per-gas",
                    "description": "The base fee in a block",
                    "tags": [
                        "aliases: --base-fee"
                    ],
                    "value": "<FEE>",
                    "shortcut": null
                },
                {
                    "option": "--block-coinbase",
                    "description": "The coinbase of the block",
                    "value": "<ADDRESS>",
                    "shortcut": null
                },
                {
                    "option": "--block-difficulty",
                    "description": "The block difficulty",
                    "value": "<DIFFICULTY>",
                    "shortcut": null
                },
                {
                    "option": "--block-gas-limit",
                    "description": "The block gas limit",
                    "tags": [
                        "aliases: --gas-limit"
                    ],
                    "value": "<GAS_LIMIT>",
                    "shortcut": null
                },
                {
                    "option": "--block-number",
                    "description": "The block number",
                    "value": "<BLOCK>",
                    "shortcut": null
                },
                {
                    "option": "--block-prevrandao",
                    "description": "The block prevrandao value. NOTE: Before merge this field was mix_hash",
                    "value": "<PREVRANDAO>",
                    "shortcut": null
                },
                {
                    "option": "--block-timestamp",
                    "description": "The timestamp of the block",
                    "value": "<TIMESTAMP>",
                    "shortcut": null
                },
                {
                    "option": "--broadcast",
                    "description": "Broadcasts the transactions",
                    "shortcut": null
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files",
                    "shortcut": null
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>",
                    "shortcut": null
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>",
                    "shortcut": null
                },
                {
                    "option": "--chain",
                    "description": "The chain name or EIP-155 chain ID",
                    "tags": [
                        "aliases: --chain-id"
                    ],
                    "value": "<CHAIN>",
                    "shortcut": null
                },
                {
                    "option": "--code-size-limit",
                    "description": "EIP-170: Contract code size limit in bytes. Useful to increase this because of tests. By default, it is 0x6000 (~25kb)",
                    "value": "<CODE_SIZE>",
                    "shortcut": null
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "shortcut": null
                },
                {
                    "option": "--compute-units-per-second",
                    "description": "Sets the number of assumed available compute units per second for this provider",
                    "value": "<CUPS>",
                    "default": "330",
                    "shortcut": null
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>",
                    "shortcut": null
                },
                {
                    "option": "--contracts",
                    "description": "The contracts source directory",
                    "value": "<PATH>",
                    "shortcut": "-C"
                },
                {
                    "option": "--create2-deployer",
                    "description": "The CREATE2 deployer address to use, this will override the one in the config",
                    "value": "<ADDRESS>",
                    "shortcut": null
                },
                {
                    "option": "--debug",
                    "description": "Open the script in the debugger. Takes precedence over broadcast.",
                    "shortcut": null
                },
                {
                    "option": "--delay",
                    "description": "Optional delay to apply in between verification attempts, in seconds",
                    "value": "<DELAY>",
                    "default": "5",
                    "shortcut": null
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error",
                    "shortcut": null
                },
                {
                    "option": "--disable-block-gas-limit",
                    "description": "Whether to disable the block gas limit checks",
                    "tags": [
                        "aliases: --no-gas-limit"
                    ],
                    "shortcut": null
                },
                {
                    "option": "--disable-code-size-limit",
                    "description": "Disables the contract size limit during script execution",
                    "shortcut": null
                },
                {
                    "option": "--dump",
                    "description": "Dumps all debugger steps to file",
                    "value": "<PATH>",
                    "shortcut": null
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking",
                    "shortcut": null
                },
                {
                    "option": "--etherscan-api-key",
                    "description": "The Etherscan (or equivalent) API key",
                    "tags": [
                        "env: ETHERSCAN_API_KEY="
                    ],
                    "value": "<KEY>",
                    "shortcut": null
                },
                {
                    "option": "--etherscan-api-version",
                    "description": "The Etherscan API version",
                    "tags": [
                        "env: ETHERSCAN_API_VERSION="
                    ],
                    "value": "<VERSION>",
                    "shortcut": null
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>",
                    "shortcut": null
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact.",
                    "value": "<SELECTOR>...",
                    "shortcut": null
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files.",
                    "value": "<SELECTOR>...",
                    "shortcut": null
                },
                {
                    "option": "--ffi",
                    "description": "Enable the FFI cheatcode",
                    "shortcut": null
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile",
                    "shortcut": null
                },
                {
                    "option": "--fork-block-number",
                    "description": "Fetch state from a specific block number over a remote endpoint.",
                    "value": "<BLOCK>",
                    "shortcut": null
                },
                {
                    "option": "--fork-retries",
                    "description": "Number of retries.",
                    "value": "<RETRIES>",
                    "shortcut": null
                },
                {
                    "option": "--fork-retry-backoff",
                    "description": "Initial retry backoff on encountering errors.",
                    "value": "<BACKOFF>",
                    "shortcut": null
                },
                {
                    "option": "--fork-url",
                    "description": "Fetch state over a remote endpoint instead of starting from an empty state.",
                    "tags": [
                        "aliases: --rpc-url"
                    ],
                    "value": "<URL>",
                    "shortcut": "-f"
                },
                {
                    "option": "--froms",
                    "description": "The sender accounts for transactions when using local signers (private keys, keystores, hardware wallets, etc.).",
                    "tags": [
                        "env: ETH_FROM="
                    ],
                    "value": "[<ADDRESSES>...]",
                    "shortcut": "-a"
                },
                {
                    "option": "--gas-estimate-multiplier",
                    "description": "Relative percentage to multiply gas estimates by",
                    "value": "<GAS_ESTIMATE_MULTIPLIER>",
                    "default": "130",
                    "shortcut": "-g"
                },
                {
                    "option": "--gas-price",
                    "description": "The gas price",
                    "value": "<GAS_PRICE>",
                    "shortcut": null
                },
                {
                    "option": "--gcp",
                    "description": "Use Google Cloud Key Management Service",
                    "shortcut": null
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout. This is the same as using: `--contracts contracts --lib-paths node_modules`.",
                    "tags": [
                        "aliases: --hh"
                    ],
                    "shortcut": null
                },
                {
                    "option": "--help",
                    "description": "Print help (see a summary with '-h')",
                    "shortcut": "-h"
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>",
                    "shortcut": null
                },
                {
                    "option": "--initial-balance",
                    "description": "The initial balance of deployed test contracts",
                    "value": "<BALANCE>",
                    "shortcut": null
                },
                {
                    "option": "--interactives",
                    "description": "Open an interactive prompt to enter your private key. Takes a value for the number of keys to enter.",
                    "value": "<NUM>",
                    "default": "0",
                    "shortcut": "-i"
                },
                {
                    "option": "--isolate",
                    "description": "Whether to enable isolation of calls. In isolation mode all top-level calls are executed as a separate transaction in a separate EVM context, enabling more precise gas accounting and transaction state changes",
                    "shortcut": null
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON",
                    "shortcut": null
                },
                {
                    "option": "--keystore",
                    "description": "Use the keystore by its filename in the given folder",
                    "tags": [
                        "env: ETH_KEYSTORE=",
                        "aliases: --keystores"
                    ],
                    "value": "<PATHS>",
                    "shortcut": null
                },
                {
                    "option": "--keystores",
                    "description": "Use the keystore by its filename in the given folder",
                    "tags": [
                        "aliases: --keystore"
                    ],
                    "value": "<PATHS>",
                    "shortcut": null
                },
                {
                    "option": "--ledger",
                    "description": "Use a Ledger hardware wallet",
                    "shortcut": "-l"
                },
                {
                    "option": "--legacy",
                    "description": "Use legacy transactions instead of EIP1559 ones. This is auto-enabled for common networks without EIP1559.",
                    "shortcut": null
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "tags": [
                        "env: DAPP_LIBRARIES="
                    ],
                    "value": "<LIBRARIES>",
                    "shortcut": null
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>",
                    "shortcut": null
                },
                {
                    "option": "--memory-limit",
                    "description": "The memory limit per EVM execution in bytes. If this limit is exceeded, a `MemoryLimitOOG` result is thrown. The default is 128MiB.",
                    "value": "<MEMORY_LIMIT>",
                    "shortcut": null
                },
                {
                    "option": "--mnemonic-derivation-paths",
                    "description": "The wallet derivation path. Works with both --mnemonic-path and hardware wallets.",
                    "value": "<PATH>",
                    "shortcut": null
                },
                {
                    "option": "--mnemonic-indexes",
                    "description": "Use the private key from the given mnemonic index. Can be used with --mnemonics, --ledger, --aws and --trezor.",
                    "value": "<INDEXES>",
                    "default": "0",
                    "shortcut": null
                },
                {
                    "option": "--mnemonic-passphrases",
                    "description": "Use a BIP39 passphrases for the mnemonic",
                    "value": "<PASSPHRASE>",
                    "shortcut": null
                },
                {
                    "option": "--mnemonics",
                    "description": "Use the mnemonic phrases of mnemonic files at the specified paths",
                    "value": "<MNEMONICS>",
                    "shortcut": null
                },
                {
                    "option": "--multi",
                    "description": "If present, --resume or --verify will be assumed to be a multi chain deployment",
                    "shortcut": null
                },
                {
                    "option": "--no-auto-detect",
                    "description": "Do not auto-detect the `solc` version",
                    "shortcut": null
                },
                {
                    "option": "--no-cache",
                    "description": "Disable the cache",
                    "shortcut": null
                },
                {
                    "option": "--no-metadata",
                    "description": "Do not append any metadata to the bytecode. This is equivalent to setting `bytecode_hash` to `none` and `cbor_metadata` to `false`.",
                    "shortcut": null
                },
                {
                    "option": "--no-rpc-rate-limit",
                    "description": "Disables rate limiting for this node's provider.",
                    "tags": [
                        "aliases: --no-rate-limit"
                    ],
                    "shortcut": null
                },
                {
                    "option": "--no-storage-caching",
                    "description": "Explicitly disables the use of RPC caching. All storage slots are read entirely from the endpoint. This flag overrides the project's configuration file.",
                    "shortcut": null
                },
                {
                    "option": "--non-interactive",
                    "description": "Disables interactive prompts that might appear when deploying big contracts.",
                    "shortcut": null
                },
                {
                    "option": "--odyssey",
                    "description": "Whether to enable Odyssey features",
                    "shortcut": null
                },
                {
                    "option": "--offline",
                    "description": "Do not access the network. Missing solc versions will not be installed.",
                    "shortcut": null
                },
                {
                    "option": "--optimize",
                    "description": "Activate the Solidity optimizer",
                    "value": "[<OPTIMIZE>]",
                    "shortcut": null
                },
                {
                    "option": "--optimizer-runs",
                    "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time of the contract.",
                    "value": "<RUNS>",
                    "shortcut": null
                },
                {
                    "option": "--out",
                    "description": "The path to the contract artifacts folder",
                    "value": "<PATH>",
                    "shortcut": "-o"
                },
                {
                    "option": "--password",
                    "description": "The keystore password. Used with --keystore.",
                    "value": "<PASSWORDS>",
                    "shortcut": null
                },
                {
                    "option": "--password-file",
                    "description": "The keystore password file path. Used with --keystore.",
                    "tags": [
                        "env: ETH_PASSWORD="
                    ],
                    "value": "<PATHS>",
                    "shortcut": null
                },
                {
                    "option": "--priority-gas-price",
                    "description": "Max priority fee per gas for EIP1559 transactions",
                    "tags": [
                        "env: ETH_PRIORITY_GAS_PRICE="
                    ],
                    "value": "<PRICE>",
                    "shortcut": null
                },
                {
                    "option": "--private-key",
                    "description": "Use the provided private key",
                    "value": "<RAW_PRIVATE_KEY>",
                    "shortcut": null
                },
                {
                    "option": "--private-keys",
                    "description": "Use the provided private keys",
                    "value": "<RAW_PRIVATE_KEYS>",
                    "shortcut": null
                },
                {
                    "option": "--quiet",
                    "description": "Do not print log messages",
                    "shortcut": "-q"
                },
                {
                    "option": "--remappings",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>",
                    "shortcut": "-R"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>",
                    "shortcut": null
                },
                {
                    "option": "--resume",
                    "description": "Resumes submitting transactions that failed or timed-out previously.",
                    "shortcut": null
                },
                {
                    "option": "--retries",
                    "description": "Number of attempts for retrying verification",
                    "value": "<RETRIES>",
                    "default": "5",
                    "shortcut": null
                },
                {
                    "option": "--revert-strings",
                    "description": "Revert string configuration.",
                    "value": "<REVERT>",
                    "shortcut": null
                },
                {
                    "option": "--root",
                    "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>",
                    "shortcut": null
                },
                {
                    "option": "--sender",
                    "description": "The address which will be executing tests/scripts",
                    "value": "<ADDRESS>",
                    "shortcut": null
                },
                {
                    "option": "--sig",
                    "description": "The signature of the function you want to call in the contract, or raw calldata",
                    "value": "<SIG>",
                    "default": "run()",
                    "shortcut": "-s"
                },
                {
                    "option": "--skip",
                    "description": "Skip building files whose names contain the given filter.",
                    "value": "<SKIP>...",
                    "shortcut": null
                },
                {
                    "option": "--skip-simulation",
                    "description": "Skips on-chain simulation",
                    "shortcut": null
                },
                {
                    "option": "--slow",
                    "description": "Makes sure a transaction is sent, only after its previous one has been confirmed and succeeded",
                    "shortcut": null
                },
                {
                    "option": "--target-contract",
                    "description": "The name of the contract you want to run",
                    "tags": [
                        "aliases: --tc"
                    ],
                    "value": "<CONTRACT_NAME>",
                    "shortcut": null
                },
                {
                    "option": "--tc",
                    "description": "The name of the contract you want to run",
                    "tags": [
                        "aliases: --target-contract"
                    ],
                    "value": "<CONTRACT_NAME>",
                    "shortcut": null
                },
                {
                    "option": "--threads",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "tags": [
                        "aliases: --jobs"
                    ],
                    "value": "<THREADS>",
                    "shortcut": "-j"
                },
                {
                    "option": "--timeout",
                    "description": "Timeout to use for broadcasting transactions",
                    "tags": [
                        "env: ETH_TIMEOUT="
                    ],
                    "value": "<TIMEOUT>",
                    "shortcut": null
                },
                {
                    "option": "--trezor",
                    "description": "Use a Trezor hardware wallet",
                    "shortcut": "-t"
                },
                {
                    "option": "--tx-origin",
                    "description": "The transaction origin",
                    "value": "<ADDRESS>",
                    "shortcut": null
                },
                {
                    "option": "--unlocked",
                    "description": "Send via `eth_sendTransaction` using the `--sender` argument as sender",
                    "shortcut": null
                },
                {
                    "option": "--use",
                    "description": "Specify the solc version, or a path to a local solc, to build with.",
                    "value": "<SOLC_VERSION>",
                    "shortcut": null
                },
                {
                    "option": "--use-literal-content",
                    "description": "Changes compilation to only use literal content and not URLs",
                    "shortcut": null
                },
                {
                    "option": "--verbosity",
                    "description": "Verbosity level of the log messages.",
                    "shortcut": "-v"
                },
                {
                    "option": "--verifier",
                    "description": "The contract verification provider to use",
                    "value": "<VERIFIER>",
                    "default": "sourcify",
                    "shortcut": null
                },
                {
                    "option": "--verifier-api-key",
                    "description": "The verifier API KEY, if using a custom provider",
                    "tags": [
                        "env: VERIFIER_API_KEY="
                    ],
                    "value": "<VERIFIER_API_KEY>",
                    "shortcut": null
                },
                {
                    "option": "--verifier-api-version",
                    "description": "The verifier API version, if using a custom provider",
                    "tags": [
                        "env: VERIFIER_API_VERSION="
                    ],
                    "value": "<VERIFIER_API_VERSION>",
                    "shortcut": null
                },
                {
                    "option": "--verifier-url",
                    "description": "The verifier URL, if using a custom provider",
                    "tags": [
                        "env: VERIFIER_URL="
                    ],
                    "value": "<VERIFIER_URL>",
                    "shortcut": null
                },
                {
                    "option": "--verify",
                    "description": "Verifies all the contracts found in the receipts of a script, if any",
                    "shortcut": null
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline",
                    "shortcut": null
                },
                {
                    "option": "--with-gas-price",
                    "description": "Gas price for legacy transactions, or max fee per gas for EIP1559 transactions, either specified in wei, or as a string with a unit type.",
                    "tags": [
                        "env: ETH_GAS_PRICE="
                    ],
                    "value": "<PRICE>",
                    "shortcut": null
                }
            ]
        },
        {
            "name": "forge selectors",
            "description": "Function selector utilities",
            "usage": "forge selectors [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "forge selectors cache",
                    "description": "Cache project selectors (enables trace with local contracts functions and events)",
                    "usage": "forge selectors cache [OPTIONS]",
                    "options": [
                        {
                            "option": "--cache-path",
                            "description": "The path to the compiler cache",
                            "tags": []
                        },
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "COLOR",
                            "default": "auto",
                            "tags": [
                                "auto",
                                "always",
                                "never"
                            ]
                        },
                        {
                            "option": "--config-path",
                            "description": "Path to the config file",
                            "value": "FILE",
                            "tags": []
                        },
                        {
                            "option": "--contracts",
                            "shortcut": "-C",
                            "description": "The contracts source directory",
                            "value": "PATH",
                            "tags": []
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')",
                            "tags": []
                        },
                        {
                            "option": "--hardhat",
                            "description": "Use the Hardhat-style project layout. This is the same as using: `--contracts contracts --lib-paths node_modules`.",
                            "tags": [
                                "--hh"
                            ]
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON",
                            "tags": []
                        },
                        {
                            "option": "--lib-paths",
                            "description": "The path to the library folder",
                            "value": "PATH",
                            "tags": []
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages",
                            "tags": []
                        },
                        {
                            "option": "--remappings",
                            "shortcut": "-R",
                            "description": "The project's remappings",
                            "value": "REMAPPINGS",
                            "tags": []
                        },
                        {
                            "option": "--remappings-env",
                            "description": "The project's remappings from the environment",
                            "value": "ENV",
                            "tags": []
                        },
                        {
                            "option": "--root",
                            "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                            "value": "PATH",
                            "tags": []
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "THREADS",
                            "tags": [
                                "--jobs"
                            ]
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes.",
                            "tags": []
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "forge selectors collision",
                    "description": "Check for selector collisions between contracts",
                    "usage": "Usage: forge selectors collision [OPTIONS] <FIRST_CONTRACT> <SECOND_CONTRACT>",
                    "options": [
                        {
                            "option": "--ast",
                            "description": "Includes the AST as JSON in the compiler output"
                        },
                        {
                            "option": "--build-info",
                            "description": "Generate build info files"
                        },
                        {
                            "option": "--build-info-path",
                            "description": "Output path to directory that build info files will be written to",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--cache-path",
                            "description": "The path to the compiler cache",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--color",
                            "description": "The color of the log messages\n\nPossible values:\n- auto:   Intelligently guess whether to use color output (default)\n- always: Force color output\n- never:  Force disable color output",
                            "value": "<COLOR>"
                        },
                        {
                            "option": "-C",
                            "shortcut": "-C",
                            "description": "The contracts source directory",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--config-path",
                            "description": "Path to the config file",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--contracts",
                            "shortcut": "-C",
                            "description": "The contracts source directory",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--deny-warnings",
                            "description": "Warnings will trigger a compiler error"
                        },
                        {
                            "option": "--dynamic-test-linking",
                            "description": "Enable dynamic test linking"
                        },
                        {
                            "option": "--evm-version",
                            "description": "The target EVM version",
                            "value": "<VERSION>"
                        },
                        {
                            "option": "--extra-output",
                            "description": "Extra output to include in the contract's artifact.\n\nExample keys: evm.assembly, ewasm, ir, irOptimized, metadata\n\nFor a full description, see <https://docs.soliditylang.org/en/v0.8.13/using-the-compiler.html#input-description>",
                            "value": "<SELECTOR>..."
                        },
                        {
                            "option": "--extra-output-files",
                            "description": "Extra output to write to separate files.\n\nValid values: metadata, ir, irOptimized, ewasm, evm.assembly",
                            "value": "<SELECTOR>..."
                        },
                        {
                            "option": "--force",
                            "description": "Clear the cache and artifacts folder and recompile"
                        },
                        {
                            "option": "--hardhat",
                            "description": "Use the Hardhat-style project layout.\n\nThis is the same as using: `--contracts contracts --lib-paths node_modules`.",
                            "tags": [
                                "aliases: --hh"
                            ]
                        },
                        {
                            "option": "-h",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--ignored-error-codes",
                            "description": "Ignore solc warnings by error code",
                            "value": "<ERROR_CODES>"
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--lib-paths",
                            "description": "The path to the library folder",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--libraries",
                            "description": "Set pre-linked libraries",
                            "value": "<LIBRARIES>",
                            "tags": [
                                "env: DAPP_LIBRARIES="
                            ]
                        },
                        {
                            "option": "--no-auto-detect",
                            "description": "Do not auto-detect the `solc` version"
                        },
                        {
                            "option": "--no-cache",
                            "description": "Disable the cache"
                        },
                        {
                            "option": "--no-metadata",
                            "description": "Do not append any metadata to the bytecode.\n\nThis is equivalent to setting `bytecode_hash` to `none` and `cbor_metadata` to `false`."
                        },
                        {
                            "option": "--offline",
                            "description": "Do not access the network.\n\nMissing solc versions will not be installed."
                        },
                        {
                            "option": "-o",
                            "shortcut": "-o",
                            "description": "The path to the contract artifacts folder",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--optimize",
                            "description": "Activate the Solidity optimizer",
                            "value": "[<OPTIMIZE>]",
                            "tags": [
                                "possible values: true, false"
                            ]
                        },
                        {
                            "option": "--optimizer-runs",
                            "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time of the contract. This means it is a trade-off parameter between code size (deploy cost) and code execution cost (cost after deployment). An `optimizer_runs` parameter of `1` will produce short but expensive code. In contrast, a larger `optimizer_runs` parameter will produce longer but more gas efficient code",
                            "value": "<RUNS>"
                        },
                        {
                            "option": "--out",
                            "shortcut": "-o",
                            "description": "The path to the contract artifacts folder",
                            "value": "<PATH>"
                        },
                        {
                            "option": "-q",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "-R",
                            "shortcut": "-R",
                            "description": "The project's remappings",
                            "value": "<REMAPPINGS>"
                        },
                        {
                            "option": "--remappings",
                            "shortcut": "-R",
                            "description": "The project's remappings",
                            "value": "<REMAPPINGS>"
                        },
                        {
                            "option": "--remappings-env",
                            "description": "The project's remappings from the environment",
                            "value": "<ENV>"
                        },
                        {
                            "option": "--revert-strings",
                            "description": "Revert string configuration.\n\nPossible values are \"default\", \"strip\" (remove), \"debug\" (Solidity-generated revert strings) and \"verboseDebug\"",
                            "value": "<REVERT>"
                        },
                        {
                            "option": "--root",
                            "description": "The project's root path.\n\nBy default root of the Git repository, if in one, or the current working directory.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--skip",
                            "description": "Skip building files whose names contain the given filter.\n\n`test` and `script` are aliases for `.t.sol` and `.s.sol`.",
                            "value": "<SKIP>..."
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "tags": [
                                "aliases: --jobs"
                            ]
                        },
                        {
                            "option": "--use",
                            "description": "Specify the solc version, or a path to a local solc, to build with.\n\nValid values are in the format `x.y.z`, `solc:x.y.z` or `path/to/solc`.",
                            "value": "<SOLC_VERSION>"
                        },
                        {
                            "option": "--use-literal-content",
                            "description": "Changes compilation to only use literal content and not URLs"
                        },
                        {
                            "option": "--via-ir",
                            "description": "Use the Yul intermediate representation compilation pipeline"
                        },
                        {
                            "option": "-v",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages.\n\nPass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).\n\nDepending on the context the verbosity levels have different meanings.\n\nFor example, the verbosity levels of the EVM are:\n- 2 (-vv): Print logs for all tests.\n- 3 (-vvv): Print execution traces for failing tests.\n- 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.\n- 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages.\n\nPass multiple times to increase the verbosity (e.g. -v, -vv, -vvv).\n\nDepending on the context the verbosity levels have different meanings.\n\nFor example, the verbosity levels of the EVM are:\n- 2 (-vv): Print logs for all tests.\n- 3 (-vvv): Print execution traces for failing tests.\n- 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.\n- 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "forge selectors find",
                    "description": "Find if a selector is present in the project",
                    "usage": "forge selectors find [OPTIONS] <SELECTOR>",
                    "options": [
                        {
                            "option": "--cache-path",
                            "description": "The path to the compiler cache",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>",
                            "tags": [
                                "auto",
                                "always",
                                "never"
                            ],
                            "default": "auto"
                        },
                        {
                            "option": "--config-path",
                            "description": "Path to the config file",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--contracts",
                            "shortcut": "-C",
                            "description": "The contracts source directory",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--hardhat",
                            "description": "Use the Hardhat-style project layout. This is the same as using: `--contracts contracts --lib-paths node_modules`.",
                            "tags": [
                                "--hh"
                            ]
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--jobs",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "tags": [
                                "--threads"
                            ]
                        },
                        {
                            "option": "--lib-paths",
                            "description": "The path to the library folder",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--remappings",
                            "shortcut": "-R",
                            "description": "The project's remappings",
                            "value": "<REMAPPINGS>"
                        },
                        {
                            "option": "--remappings-env",
                            "description": "The project's remappings from the environment",
                            "value": "<ENV>"
                        },
                        {
                            "option": "--root",
                            "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "forge selectors list",
                    "description": "List selectors from current workspace",
                    "usage": "forge selectors list [OPTIONS] [CONTRACT]",
                    "subcommands": [],
                    "options": [
                        {
                            "option": "--cache-path",
                            "description": "The path to the compiler cache",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>",
                            "tags": [
                                "auto",
                                "always",
                                "never"
                            ],
                            "default": "auto"
                        },
                        {
                            "option": "--config-path",
                            "description": "Path to the config file",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--contracts",
                            "shortcut": "-C",
                            "description": "The contracts source directory",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--hardhat",
                            "description": "Use the Hardhat-style project layout.",
                            "tags": [
                                "--hh"
                            ]
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--lib-paths",
                            "description": "The path to the library folder",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--remappings",
                            "shortcut": "-R",
                            "description": "The project's remappings",
                            "value": "<REMAPPINGS>"
                        },
                        {
                            "option": "--remappings-env",
                            "description": "The project's remappings from the environment",
                            "value": "<ENV>"
                        },
                        {
                            "option": "--root",
                            "description": "The project's root path.",
                            "value": "<PATH>",
                            "default": "root of the Git repository, if in one, or the current working directory"
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "tags": [
                                "--jobs"
                            ]
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                        }
                    ]
                },
                {
                    "name": "forge selectors upload",
                    "description": "Upload selectors to registry",
                    "usage": "forge selectors upload [OPTIONS] [CONTRACT]",
                    "subcommands": [],
                    "options": [
                        {
                            "option": "--all",
                            "description": "Upload selectors for all contracts in the project"
                        },
                        {
                            "option": "--cache-path",
                            "value": "<PATH>",
                            "description": "The path to the compiler cache"
                        },
                        {
                            "option": "--color",
                            "value": "<COLOR>",
                            "description": "The color of the log messages",
                            "default": "auto"
                        },
                        {
                            "option": "--config-path",
                            "value": "<FILE>",
                            "description": "Path to the config file"
                        },
                        {
                            "option": "--contracts",
                            "shortcut": "-C",
                            "value": "<PATH>",
                            "description": "The contracts source directory"
                        },
                        {
                            "option": "--hardhat",
                            "description": "Use the Hardhat-style project layout.",
                            "tags": [
                                "aliases: --hh"
                            ]
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--lib-paths",
                            "value": "<PATH>",
                            "description": "The path to the library folder"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--remappings",
                            "shortcut": "-R",
                            "value": "<REMAPPINGS>",
                            "description": "The project's remappings"
                        },
                        {
                            "option": "--remappings-env",
                            "value": "<ENV>",
                            "description": "The project's remappings from the environment"
                        },
                        {
                            "option": "--root",
                            "value": "<PATH>",
                            "description": "The project's root path.",
                            "default": "root of the Git repository, if in one, or the current working directory"
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "value": "<THREADS>",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "tags": [
                                "aliases: --jobs"
                            ]
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages.",
                            "tags": [
                                "Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv)"
                            ]
                        }
                    ]
                }
            ],
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "option": "--jobs",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                }
            ]
        },
        {
            "name": "forge snapshot",
            "description": "Create a gas snapshot of each test's gas usage",
            "usage": "forge snapshot [OPTIONS] [PATH]",
            "options": [
                {
                    "option": "--allow-failure",
                    "description": "Exit with code 0 even if a test fails",
                    "tags": [
                        "env: FORGE_ALLOW_FAILURE="
                    ]
                },
                {
                    "option": "--always-use-create-2-factory",
                    "description": "Use the create 2 factory in all cases including tests and non-broadcasting scripts"
                },
                {
                    "option": "--asc",
                    "description": "Sort results by gas used (ascending)"
                },
                {
                    "option": "--ast",
                    "description": "Includes the AST as JSON in the compiler output"
                },
                {
                    "option": "--base-fee",
                    "shortcut": "--block-base-fee-per-gas",
                    "description": "The base fee in a block"
                },
                {
                    "option": "--block-coinbase",
                    "description": "The coinbase of the block"
                },
                {
                    "option": "--block-difficulty",
                    "description": "The block difficulty"
                },
                {
                    "option": "--block-gas-limit",
                    "shortcut": "--gas-limit",
                    "description": "The block gas limit"
                },
                {
                    "option": "--block-number",
                    "description": "The block number"
                },
                {
                    "option": "--block-prevrandao",
                    "description": "The block prevrandao value. NOTE: Before merge this field was mix_hash"
                },
                {
                    "option": "--block-timestamp",
                    "description": "The timestamp of the block"
                },
                {
                    "option": "--build-info",
                    "description": "Generate build info files"
                },
                {
                    "option": "--build-info-path",
                    "description": "Output path to directory that build info files will be written to",
                    "value": "<PATH>"
                },
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--chain",
                    "description": "The chain name or EIP-155 chain ID",
                    "tags": [
                        "aliases: --chain-id"
                    ],
                    "value": "<CHAIN>"
                },
                {
                    "option": "--check",
                    "description": "Compare against a pre-existing gas snapshot, exiting with code 1 if they do not match. Outputs a diff if the gas snapshots do not match. By default, the comparison is done with .gas-snapshot.",
                    "value": "[<SNAPSHOT_FILE>]"
                },
                {
                    "option": "--code-size-limit",
                    "description": "EIP-170: Contract code size limit in bytes. Useful to increase this because of tests. By default, it is 0x6000 (~25kb)",
                    "value": "<CODE_SIZE>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>"
                },
                {
                    "option": "--compute-units-per-second",
                    "description": "Sets the number of assumed available compute units per second for this provider",
                    "value": "<CUPS>",
                    "default": "330"
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--contracts",
                    "shortcut": "-C",
                    "description": "The contracts source directory",
                    "value": "<PATH>"
                },
                {
                    "option": "--create2-deployer",
                    "description": "The CREATE2 deployer address to use, this will override the one in the config",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--debug",
                    "description": "Run a single test in the debugger. The matching test will be opened in the debugger regardless of the outcome of the test. If the matching test is a fuzz test, then it will open the debugger on the first failure case. If the fuzz test does not fail, it will open the debugger on the last fuzz case."
                },
                {
                    "option": "--decode-internal",
                    "description": "Identify internal functions in traces. This will trace internal functions and decode stack parameters. Parameters stored in memory (such as bytes or arrays) are currently decoded only when a single function is matched, similarly to `--debug`, for performance reasons."
                },
                {
                    "option": "--deny-warnings",
                    "description": "Warnings will trigger a compiler error"
                },
                {
                    "option": "--desc",
                    "description": "Sort results by gas used (descending)"
                },
                {
                    "option": "--diff",
                    "description": "Output a diff against a pre-existing gas snapshot. By default, the comparison is done with .gas-snapshot.",
                    "value": "[<SNAPSHOT_FILE>]"
                },
                {
                    "option": "--disable-block-gas-limit",
                    "shortcut": "--no-gas-limit",
                    "description": "Whether to disable the block gas limit checks"
                },
                {
                    "option": "--dynamic-test-linking",
                    "description": "Enable dynamic test linking"
                },
                {
                    "option": "--dump",
                    "description": "Dumps all debugger steps to file",
                    "value": "<PATH>"
                },
                {
                    "option": "--etherscan-api-key",
                    "description": "The Etherscan (or equivalent) API key",
                    "tags": [
                        "env: ETHERSCAN_API_KEY="
                    ],
                    "value": "<KEY>"
                },
                {
                    "option": "--etherscan-api-version",
                    "description": "The Etherscan API version",
                    "tags": [
                        "env: ETHERSCAN_API_VERSION="
                    ],
                    "value": "<VERSION>"
                },
                {
                    "option": "--evm-version",
                    "description": "The target EVM version",
                    "value": "<VERSION>"
                },
                {
                    "option": "--extra-output",
                    "description": "Extra output to include in the contract's artifact. Example keys: evm.assembly, ewasm, ir, irOptimized, metadata. For a full description, see <https://docs.soliditylang.org/en/v0.8.13/using-the-compiler.html#input-description>",
                    "value": "<SELECTOR>..."
                },
                {
                    "option": "--extra-output-files",
                    "description": "Extra output to write to separate files. Valid values: metadata, ir, irOptimized, ewasm, evm.assembly",
                    "value": "<SELECTOR>..."
                },
                {
                    "option": "--fail-fast",
                    "description": "Stop running tests after the first failure"
                },
                {
                    "option": "--ffi",
                    "description": "Enable the FFI cheatcode"
                },
                {
                    "option": "--flamechart",
                    "description": "Generate a flamechart for a single test. Implies `--decode-internal`. A flame chart shows the gas usage over time, illustrating when each function is called (execution order) and how much gas it consumes at each point in the timeline."
                },
                {
                    "option": "--flamegraph",
                    "description": "Generate a flamegraph for a single test. Implies `--decode-internal`. A flame graph is used to visualize which functions or operations within the smart contract are consuming the most gas overall in a sorted manner."
                },
                {
                    "option": "--force",
                    "description": "Clear the cache and artifacts folder and recompile"
                },
                {
                    "option": "--fork-block-number",
                    "description": "Fetch state from a specific block number over a remote endpoint. See --fork-url.",
                    "value": "<BLOCK>"
                },
                {
                    "option": "--fork-retries",
                    "description": "Number of retries. See --fork-url.",
                    "value": "<RETRIES>"
                },
                {
                    "option": "--fork-retry-backoff",
                    "description": "Initial retry backoff on encountering errors. See --fork-url.",
                    "value": "<BACKOFF>"
                },
                {
                    "option": "--fork-url",
                    "shortcut": "-f",
                    "description": "Fetch state over a remote endpoint instead of starting from an empty state. If you want to fetch state from a specific block number, see --fork-block-number.",
                    "value": "<URL>"
                },
                {
                    "option": "--fuzz-input-file",
                    "description": "File to rerun fuzz failures from",
                    "value": "<FUZZ_INPUT_FILE>"
                },
                {
                    "option": "--fuzz-runs",
                    "description": "Run a given number of fuzz tests",
                    "tags": [
                        "env: FOUNDRY_FUZZ_RUNS="
                    ],
                    "value": "<RUNS>"
                },
                {
                    "option": "--fuzz-seed",
                    "description": "Set seed used to generate randomness during your fuzz runs",
                    "value": "<FUZZ_SEED>"
                },
                {
                    "option": "--fuzz-timeout",
                    "description": "Timeout for each fuzz run in seconds",
                    "tags": [
                        "env: FOUNDRY_FUZZ_TIMEOUT="
                    ],
                    "value": "<TIMEOUT>"
                },
                {
                    "option": "--gas-price",
                    "description": "The gas price",
                    "value": "<GAS_PRICE>"
                },
                {
                    "option": "--gas-report",
                    "description": "Print a gas report",
                    "tags": [
                        "env: FORGE_GAS_REPORT="
                    ]
                },
                {
                    "option": "--gas-snapshot-check",
                    "description": "Check gas snapshots against previous runs",
                    "tags": [
                        "env: FORGE_SNAPSHOT_CHECK="
                    ],
                    "value": "<GAS_SNAPSHOT_CHECK>"
                },
                {
                    "option": "--gas-snapshot-emit",
                    "description": "Enable/disable recording of gas snapshot results",
                    "tags": [
                        "env: FORGE_SNAPSHOT_EMIT="
                    ],
                    "value": "<GAS_SNAPSHOT_EMIT>"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout. This is the same as using: `--contracts contracts --lib-paths node_modules`.",
                    "tags": [
                        "aliases: --hh"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--ignored-error-codes",
                    "description": "Ignore solc warnings by error code",
                    "value": "<ERROR_CODES>"
                },
                {
                    "option": "--initial-balance",
                    "description": "The initial balance of deployed test contracts",
                    "value": "<BALANCE>"
                },
                {
                    "option": "--isolate",
                    "description": "Whether to enable isolation of calls. In isolation mode all top-level calls are executed as a separate transaction in a separate EVM context, enabling more precise gas accounting and transaction state changes"
                },
                {
                    "option": "--junit",
                    "description": "Output test results as JUnit XML report"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "tags": [
                        "env: DAPP_LIBRARIES="
                    ],
                    "value": "<LIBRARIES>"
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--list",
                    "shortcut": "-l",
                    "description": "List tests instead of running them"
                },
                {
                    "option": "--match-contract",
                    "description": "Only run tests in contracts matching the specified regex pattern",
                    "tags": [
                        "aliases: --mc"
                    ],
                    "value": "<REGEX>"
                },
                {
                    "option": "--match-path",
                    "description": "Only run tests in source files matching the specified glob pattern",
                    "tags": [
                        "aliases: --mp"
                    ],
                    "value": "<GLOB>"
                },
                {
                    "option": "--match-test",
                    "description": "Only run test functions matching the specified regex pattern",
                    "tags": [
                        "aliases: --mt"
                    ],
                    "value": "<REGEX>"
                },
                {
                    "option": "--max",
                    "description": "Only include tests that used less gas that the given amount",
                    "value": "<MAX_GAS>"
                },
                {
                    "option": "--memory-limit",
                    "description": "The memory limit per EVM execution in bytes. If this limit is exceeded, a `MemoryLimitOOG` result is thrown. The default is 128MiB.",
                    "value": "<MEMORY_LIMIT>"
                },
                {
                    "option": "--min",
                    "description": "Only include tests that used more gas that the given amount",
                    "value": "<MIN_GAS>"
                },
                {
                    "option": "--no-auto-detect",
                    "description": "Do not auto-detect the `solc` version"
                },
                {
                    "option": "--no-cache",
                    "description": "Disable the cache"
                },
                {
                    "option": "--no-match-contract",
                    "description": "Only run tests in contracts that do not match the specified regex pattern",
                    "tags": [
                        "aliases: --nmc"
                    ],
                    "value": "<REGEX>"
                },
                {
                    "option": "--no-match-coverage",
                    "description": "Only show coverage for files that do not match the specified regex pattern",
                    "tags": [
                        "aliases: --nmco"
                    ],
                    "value": "<REGEX>"
                },
                {
                    "option": "--no-match-path",
                    "description": "Only run tests in source files that do not match the specified glob pattern",
                    "tags": [
                        "aliases: --nmp"
                    ],
                    "value": "<GLOB>"
                },
                {
                    "option": "--no-match-test",
                    "description": "Only run test functions that do not match the specified regex pattern",
                    "tags": [
                        "aliases: --nmt"
                    ],
                    "value": "<REGEX>"
                },
                {
                    "option": "--no-rate-limit",
                    "description": "Disables rate limiting for this node's provider. See also --fork-url and <https://docs.alchemy.com/reference/compute-units#what-are-cups-compute-units-per-second>",
                    "tags": [
                        "aliases: --no-rpc-rate-limit"
                    ]
                },
                {
                    "option": "--no-restart",
                    "description": "Do not restart the command while it's still running"
                },
                {
                    "option": "--no-storage-caching",
                    "description": "Explicitly disables the use of RPC caching. All storage slots are read entirely from the endpoint. This flag overrides the project's configuration file. See --fork-url."
                },
                {
                    "option": "--no-metadata",
                    "description": "Do not append any metadata to the bytecode. This is equivalent to setting `bytecode_hash` to `none` and `cbor_metadata` to `false`."
                },
                {
                    "option": "--odyssey",
                    "description": "Whether to enable Odyssey features"
                },
                {
                    "option": "--offline",
                    "description": "Do not access the network. Missing solc versions will not be installed."
                },
                {
                    "option": "--optimize",
                    "description": "Activate the Solidity optimizer",
                    "value": "[<OPTIMIZE>]"
                },
                {
                    "option": "--optimizer-runs",
                    "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time of the contract. This means it is a trade-off parameter between code size (deploy cost) and code execution cost (cost after deployment). An `optimizer_runs` parameter of `1` will produce short but expensive code. In contrast, a larger `optimizer_runs` parameter will produce longer but more gas efficient code",
                    "value": "<RUNS>"
                },
                {
                    "option": "--out",
                    "shortcut": "-o",
                    "description": "The path to the contract artifacts folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--remappings",
                    "shortcut": "-R",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--revert-strings",
                    "description": "Revert string configuration. Possible values are 'default', 'strip' (remove), 'debug' (Solidity-generated revert strings) and 'verboseDebug'",
                    "value": "<REVERT>"
                },
                {
                    "option": "--rerun",
                    "description": "Re-run recorded test failures from last run. If no failure recorded then regular test run is performed"
                },
                {
                    "option": "--root",
                    "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>"
                },
                {
                    "option": "--run-all",
                    "description": "Explicitly re-run all tests when a change is made. By default, only the tests of the last modified test file are executed."
                },
                {
                    "option": "--sender",
                    "description": "The address which will be executing tests/scripts",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--show-progress",
                    "description": "Show test execution progress"
                },
                {
                    "option": "--skip",
                    "description": "Skip building files whose names contain the given filter. `test` and `script` are aliases for `.t.sol` and `.s.sol`.",
                    "value": "<SKIP>..."
                },
                {
                    "option": "--snap",
                    "description": "Output file for the gas snapshot",
                    "value": "<FILE>",
                    "default": ".gas-snapshot"
                },
                {
                    "option": "--suppress-successful-traces",
                    "shortcut": "-s",
                    "description": "Suppress successful test traces and show only traces for failures",
                    "tags": [
                        "env: FORGE_SUPPRESS_SUCCESSFUL_TRACES="
                    ]
                },
                {
                    "option": "--summary",
                    "description": "Print test summary table"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "tags": [
                        "aliases: --jobs"
                    ],
                    "value": "<THREADS>"
                },
                {
                    "option": "--tolerance",
                    "description": "Tolerates gas deviations up to the specified percentage",
                    "value": "<SNAPSHOT_THRESHOLD>"
                },
                {
                    "option": "--tx-origin",
                    "description": "The transaction origin",
                    "value": "<ADDRESS>"
                },
                {
                    "option": "--use",
                    "description": "Specify the solc version, or a path to a local solc, to build with. Valid values are in the format `x.y.z`, `solc:x.y.z` or `path/to/solc`.",
                    "value": "<SOLC_VERSION>"
                },
                {
                    "option": "--use-literal-content",
                    "description": "Changes compilation to only use literal content and not URLs"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline"
                },
                {
                    "option": "--watch",
                    "shortcut": "-w",
                    "description": "Watch the given files or directories for changes. If no paths are provided, the source and test directories of the project are watched.",
                    "value": "[<PATH>...]"
                },
                {
                    "option": "--watch-delay",
                    "description": "File update debounce delay. During the delay, incoming change events are accumulated and only once the delay has passed, is an action taken. Note that this does not mean a command will be started: if --no-restart is given and a command is already running, the outcome of the action will be to do nothing. Defaults to 50ms. Parses as decimal seconds by default, but using an integer with the `ms` suffix may be more convenient. When using --poll mode, you'll want a larger duration, or risk overloading disk I/O.",
                    "value": "<DELAY>"
                }
            ],
            "subcommands": []
        },
        {
            "name": "forge soldeer",
            "description": "Native Solidity Package Manager, run `forge soldeer [COMMAND] --help` for more details",
            "usage": "forge soldeer [COMMAND] [OPTIONS]",
            "subcommands": [
                {
                    "name": "forge soldeer init",
                    "description": "Convert a Foundry project to use Soldeer",
                    "usage": "forge soldeer init [OPTIONS]",
                    "options": [
                        {
                            "option": "--clean",
                            "description": "Clean the Foundry project by removing .gitmodules and the lib directory"
                        },
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>"
                        },
                        {
                            "option": "--config-location",
                            "description": "Specify the config location. This prevents prompting the user if the automatic detection can't determine the config location.",
                            "value": "<CONFIG_LOCATION>"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--jobs",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "shortcut": "-j",
                            "value": "<THREADS>",
                            "tags": [
                                "aliases"
                            ]
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--threads",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "shortcut": "-j",
                            "value": "<THREADS>"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings."
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "forge soldeer install",
                    "description": "Install a dependency. If used with arguments, a dependency will be added to the configuration. When used without argument, installs all dependencies that are missing.",
                    "usage": "forge soldeer install [OPTIONS] [DEPENDENCY~VERSION]",
                    "options": [
                        {
                            "option": "--branch",
                            "description": "A Git branch",
                            "value": "<BRANCH>"
                        },
                        {
                            "option": "--clean",
                            "description": "Perform a clean install by re-installing all dependencies"
                        },
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>",
                            "tags": [
                                "auto",
                                "always",
                                "never"
                            ]
                        },
                        {
                            "option": "--config-location",
                            "description": "Specify the config location without prompting. This prevents prompting the user if the automatic detection can't determine the config location.",
                            "value": "<CONFIG_LOCATION>",
                            "tags": [
                                "foundry",
                                "soldeer"
                            ]
                        },
                        {
                            "option": "--git",
                            "description": "The URL to the dependency repository.",
                            "value": "<GIT_URL>"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--regenerate-remappings",
                            "shortcut": "-g",
                            "description": "If set, this command will delete the existing remappings and re-create them"
                        },
                        {
                            "option": "--recursive-deps",
                            "shortcut": "-d",
                            "description": "If set, this command will install dependencies recursively (via git submodules or via soldeer)"
                        },
                        {
                            "option": "--rev",
                            "description": "A Git commit hash",
                            "value": "<REV>"
                        },
                        {
                            "option": "--tag",
                            "description": "A Git tag",
                            "value": "<TAG>"
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "tags": [
                                "--jobs"
                            ]
                        },
                        {
                            "option": "--url",
                            "description": "The URL to the dependency zip file.",
                            "value": "<ZIP_URL>"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings.",
                            "tags": [
                                "-vv",
                                "-vvv",
                                "-vvvv",
                                "-vvvvv"
                            ]
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "forge soldeer login",
                    "description": "Log into the central repository to push packages. The credentials are saved by default into ~/.soldeer. If you want to overwrite that location, use the SOLDEER_LOGIN_FILE env var.",
                    "usage": "forge soldeer login [OPTIONS]",
                    "options": [
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>",
                            "tags": [
                                "auto: Intelligently guess whether to use color output (default)",
                                "always: Force color output",
                                "never: Force disable color output"
                            ]
                        },
                        {
                            "option": "--email",
                            "description": "Specify the email without prompting",
                            "value": "<EMAIL>"
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--password",
                            "description": "Specify the password without prompting",
                            "value": "<PASSWORD>"
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "tags": [
                                "aliases: --jobs"
                            ]
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "description": "Push a Dependency to the Repository",
                    "name": "forge soldeer push",
                    "usage": "forge soldeer push [OPTIONS] <DEPENDENCY>~<VERSION> [PATH]",
                    "options": [
                        {
                            "description": "If set, does not publish the package but generates a zip file that can be inspected",
                            "option": "--dry-run",
                            "shortcut": "-d"
                        },
                        {
                            "description": "The color of the log messages",
                            "option": "--color",
                            "tags": [
                                "auto",
                                "always",
                                "never"
                            ],
                            "value": "<COLOR>",
                            "default": "auto"
                        },
                        {
                            "description": "Print help (see a summary with '-h')",
                            "option": "--help",
                            "shortcut": "-h"
                        },
                        {
                            "description": "Format log messages as JSON",
                            "option": "--json"
                        },
                        {
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "option": "--threads",
                            "shortcut": "-j",
                            "value": "<THREADS>",
                            "tags": [
                                "--jobs"
                            ]
                        },
                        {
                            "description": "Do not print log messages",
                            "option": "--quiet",
                            "shortcut": "-q"
                        },
                        {
                            "description": "Use this if you want to skip the warnings that can be triggered when trying to push dotfiles like .env",
                            "option": "--skip-warnings"
                        },
                        {
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes.",
                            "option": "--verbosity",
                            "shortcut": "-v"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "forge soldeer uninstall",
                    "description": "Command-line tool for managing dependencies in the forge soldeer environment.",
                    "usage": "forge soldeer [SUBCOMMAND] [OPTIONS]",
                    "subcommands": [],
                    "options": [
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>",
                            "tags": [
                                "auto",
                                "always",
                                "never"
                            ],
                            "default": "auto"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--jobs",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "aliases": [
                                "--threads"
                            ]
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "aliases": [
                                "--jobs"
                            ]
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings.",
                            "tags": [
                                "2 (-vv): Print logs for all tests.",
                                "3 (-vvv): Print execution traces for failing tests.",
                                "4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests.",
                                "5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                            ]
                        }
                    ]
                },
                {
                    "name": "forge soldeer update",
                    "description": "Update dependencies by reading the config file",
                    "usage": "forge soldeer update [OPTIONS]",
                    "options": [
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>",
                            "tags": [
                                "auto",
                                "always",
                                "never"
                            ]
                        },
                        {
                            "option": "--config-location",
                            "description": "Specify the config location without prompting. This prevents prompting the user if the automatic detection can't determine the config location.",
                            "value": "<CONFIG_LOCATION>",
                            "tags": [
                                "foundry",
                                "soldeer"
                            ]
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--regenerate-remappings",
                            "shortcut": "-g",
                            "description": "If set, this command will delete the existing remappings and re-create them"
                        },
                        {
                            "option": "--recursive-deps",
                            "shortcut": "-d",
                            "description": "If set, this command will install the dependencies recursively (via submodules or via soldeer)"
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "tags": [
                                "--jobs"
                            ]
                        },
                        {
                            "option": "-h",
                            "description": "Print help (see a summary with '-h')",
                            "shortcut": "--help"
                        },
                        {
                            "option": "-q",
                            "description": "Do not print log messages",
                            "shortcut": "--quiet"
                        },
                        {
                            "option": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes.",
                            "shortcut": "--verbosity"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "forge soldeer version",
                    "description": "Display the version of Soldeer",
                    "usage": "forge soldeer version [OPTIONS]",
                    "options": [
                        {
                            "option": "--color",
                            "description": "The color of the log messages",
                            "value": "<COLOR>"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--jobs",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>",
                            "tags": [
                                "aliases"
                            ]
                        },
                        {
                            "option": "--json",
                            "description": "Format log messages as JSON"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Do not print log messages"
                        },
                        {
                            "option": "--threads",
                            "shortcut": "-j",
                            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                            "value": "<THREADS>"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "default": "auto",
                    "tags": [
                        "auto: Intelligently guess whether to use color output (default)",
                        "always: Force color output",
                        "never: Force disable color output"
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--jobs",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes.",
                    "tags": [
                        "..."
                    ]
                }
            ]
        },
        {
            "description": "Run the project's tests",
            "name": "forge test",
            "options": [
                {
                    "description": "Exit with code 0 even if a test fails",
                    "option": "--allow-failure",
                    "tags": [
                        "env: FORGE_ALLOW_FAILURE="
                    ]
                },
                {
                    "default": "auto",
                    "description": "The base fee in a block",
                    "option": "--block-base-fee-per-gas",
                    "shortcut": "--base-fee",
                    "value": "<FEE>"
                },
                {
                    "description": "The coinbase of the block",
                    "option": "--block-coinbase",
                    "value": "<ADDRESS>"
                },
                {
                    "description": "The block difficulty",
                    "option": "--block-difficulty",
                    "value": "<DIFFICULTY>"
                },
                {
                    "description": "The block gas limit",
                    "option": "--block-gas-limit",
                    "shortcut": "--gas-limit",
                    "value": "<GAS_LIMIT>"
                },
                {
                    "description": "The block number",
                    "option": "--block-number",
                    "value": "<BLOCK>"
                },
                {
                    "description": "The block prevrandao value. NOTE: Before merge this field was mix_hash",
                    "option": "--block-prevrandao",
                    "value": "<PREVRANDAO>"
                },
                {
                    "description": "The timestamp of the block",
                    "option": "--block-timestamp",
                    "value": "<TIMESTAMP>"
                },
                {
                    "description": "Generate build info files",
                    "option": "--build-info"
                },
                {
                    "description": "Output path to directory that build info files will be written to",
                    "option": "--build-info-path",
                    "value": "<PATH>"
                },
                {
                    "description": "The chain name or EIP-155 chain ID",
                    "option": "--chain",
                    "shortcut": "--chain-id",
                    "value": "<CHAIN>"
                },
                {
                    "description": "Check gas snapshots against previous runs",
                    "option": "--gas-snapshot-check",
                    "tags": [
                        "env: FORGE_SNAPSHOT_CHECK="
                    ],
                    "value": "<GAS_SNAPSHOT_CHECK>"
                },
                {
                    "description": "Disable the cache",
                    "option": "--no-cache"
                },
                {
                    "description": "Do not append any metadata to the bytecode",
                    "option": "--no-metadata"
                },
                {
                    "description": "Do not access the network",
                    "option": "--offline"
                },
                {
                    "description": "Enable the FFI cheatcode",
                    "option": "--ffi"
                },
                {
                    "description": "Enable Odyssey features",
                    "option": "--odyssey"
                },
                {
                    "description": "Enable dynamic test linking",
                    "option": "--dynamic-test-linking"
                },
                {
                    "description": "Clear the cache and artifacts folder and recompile",
                    "option": "--force"
                },
                {
                    "description": "Format log messages as JSON",
                    "option": "--json"
                },
                {
                    "description": "Generate a flamechart for a single test. Implies `--decode-internal`",
                    "option": "--flamechart"
                },
                {
                    "description": "Generate a flamegraph for a single test. Implies `--decode-internal`",
                    "option": "--flamegraph"
                },
                {
                    "description": "Dumps all debugger steps to file",
                    "option": "--dump",
                    "value": "<PATH>"
                },
                {
                    "description": "Print a gas report",
                    "option": "--gas-report",
                    "tags": [
                        "env: FORGE_GAS_REPORT="
                    ]
                },
                {
                    "description": "Enable/disable recording of gas snapshot results",
                    "option": "--gas-snapshot-emit",
                    "tags": [
                        "env: FORGE_SNAPSHOT_EMIT="
                    ],
                    "value": "<GAS_SNAPSHOT_EMIT>"
                },
                {
                    "description": "Ignore solc warnings by error code",
                    "option": "--ignored-error-codes",
                    "value": "<ERROR_CODES>"
                },
                {
                    "description": "Whether to disable the block gas limit checks",
                    "option": "--disable-block-gas-limit",
                    "shortcut": "--no-gas-limit"
                },
                {
                    "description": "Disables rate limiting for this node's provider",
                    "option": "--no-rpc-rate-limit",
                    "shortcut": "--no-rate-limit"
                },
                {
                    "description": "Do not auto-detect the `solc` version",
                    "option": "--no-auto-detect"
                },
                {
                    "description": "Whether to enable isolation of calls",
                    "option": "--isolate"
                },
                {
                    "description": "Identify internal functions in traces",
                    "option": "--decode-internal"
                },
                {
                    "description": "Warnings will trigger a compiler error",
                    "option": "--deny-warnings"
                },
                {
                    "description": "Fetch state from a specific block number over a remote endpoint",
                    "option": "--fork-block-number",
                    "value": "<BLOCK>"
                },
                {
                    "description": "Fetch state over a remote endpoint instead of starting from an empty state",
                    "option": "--fork-url",
                    "shortcut": "--rpc-url",
                    "value": "<URL>"
                },
                {
                    "description": "Number of retries",
                    "option": "--fork-retries",
                    "value": "<RETRIES>"
                },
                {
                    "description": "Initial retry backoff on encountering errors",
                    "option": "--fork-retry-backoff",
                    "value": "<BACKOFF>"
                },
                {
                    "description": "The initial balance of deployed test contracts",
                    "option": "--initial-balance",
                    "value": "<BALANCE>"
                },
                {
                    "description": "The Etherscan (or equivalent) API key",
                    "option": "--etherscan-api-key",
                    "tags": [
                        "env: ETHERSCAN_API_KEY="
                    ],
                    "value": "<KEY>"
                },
                {
                    "description": "The Etherscan API version",
                    "option": "--etherscan-api-version",
                    "tags": [
                        "env: ETHERSCAN_API_VERSION="
                    ],
                    "value": "<VERSION>"
                },
                {
                    "description": "The address which will be executing tests/scripts",
                    "option": "--sender",
                    "value": "<ADDRESS>"
                },
                {
                    "description": "Use the Yul intermediate representation compilation pipeline",
                    "option": "--via-ir"
                },
                {
                    "description": "Use the Hardhat-style project layout",
                    "option": "--hardhat",
                    "shortcut": "--hh"
                },
                {
                    "description": "Use the create 2 factory in all cases including tests and non-broadcasting scripts",
                    "option": "--always-use-create-2-factory"
                },
                {
                    "description": "The CREATE2 deployer address to use, this will override the one in the config",
                    "option": "--create2-deployer",
                    "value": "<ADDRESS>"
                },
                {
                    "description": "Whether to use literal content and not URLs",
                    "option": "--use-literal-content"
                },
                {
                    "description": "Clears the cache and artifacts folder and recompiles",
                    "option": "--force"
                },
                {
                    "description": "The path to the contract artifacts folder",
                    "option": "--out",
                    "shortcut": "-o",
                    "value": "<PATH>"
                },
                {
                    "description": "The project's root path",
                    "option": "--root",
                    "value": "<PATH>"
                },
                {
                    "description": "The project's remappings",
                    "option": "--remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "description": "The project's remappings from the environment",
                    "option": "--remappings-env",
                    "value": "<ENV>"
                },
                {
                    "description": "The path to the compiler cache",
                    "option": "--cache-path",
                    "value": "<PATH>"
                },
                {
                    "description": "The path to the library folder",
                    "option": "--lib-paths",
                    "value": "<PATH>"
                },
                {
                    "description": "Set seed used to generate randomness during your fuzz runs",
                    "option": "--fuzz-seed",
                    "value": "<FUZZ_SEED>"
                },
                {
                    "description": "Timeout for each fuzz run in seconds",
                    "option": "--fuzz-timeout",
                    "tags": [
                        "env: FOUNDRY_FUZZ_TIMEOUT="
                    ],
                    "value": "<TIMEOUT>"
                },
                {
                    "description": "Re-run recorded test failures from last run",
                    "option": "--rerun"
                },
                {
                    "description": "Number of threads to use",
                    "option": "--threads",
                    "shortcut": "--jobs",
                    "value": "<THREADS>"
                },
                {
                    "description": "Run a single test in the debugger",
                    "option": "--debug"
                },
                {
                    "description": "List tests instead of running them",
                    "option": "--list",
                    "shortcut": "-l"
                },
                {
                    "description": "Print test summary table",
                    "option": "--summary"
                },
                {
                    "description": "Print detailed test summary table",
                    "option": "--detailed"
                },
                {
                    "description": "Show test execution progress",
                    "option": "--show-progress"
                },
                {
                    "description": "Do not print log messages",
                    "option": "--quiet",
                    "shortcut": "-q"
                },
                {
                    "description": "Print help (see a summary with '-h')",
                    "option": "--help",
                    "shortcut": "-h"
                },
                {
                    "description": "Verbosity level of the log messages",
                    "option": "--verbosity",
                    "shortcut": "-v"
                },
                {
                    "description": "The color of the log messages",
                    "option": "--color",
                    "value": "<COLOR>"
                },
                {
                    "description": "Print execution traces for failing tests",
                    "option": "--suppress-successful-traces",
                    "tags": [
                        "env: FORGE_SUPPRESS_SUCCESSFUL_TRACES="
                    ]
                },
                {
                    "description": "Output test results as JUnit XML report",
                    "option": "--junit"
                },
                {
                    "description": "Fuzz runs",
                    "option": "--fuzz-runs",
                    "tags": [
                        "env: FOUNDRY_FUZZ_RUNS="
                    ],
                    "value": "<RUNS>"
                },
                {
                    "description": "File to rerun fuzz failures from",
                    "option": "--fuzz-input-file",
                    "value": "<FUZZ_INPUT_FILE>"
                },
                {
                    "description": "Only run test functions matching the specified regex pattern",
                    "option": "--match-test",
                    "shortcut": "--mt",
                    "value": "<REGEX>"
                },
                {
                    "description": "Only run test functions that do not match the specified regex pattern",
                    "option": "--no-match-test",
                    "shortcut": "--nmt",
                    "value": "<REGEX>"
                },
                {
                    "description": "Only run tests in contracts matching the specified regex pattern",
                    "option": "--match-contract",
                    "shortcut": "--mc",
                    "value": "<REGEX>"
                },
                {
                    "description": "Only run tests in contracts that do not match the specified regex pattern",
                    "option": "--no-match-contract",
                    "shortcut": "--nmc",
                    "value": "<REGEX>"
                },
                {
                    "description": "Only run tests in source files matching the specified glob pattern",
                    "option": "--match-path",
                    "shortcut": "--mp",
                    "value": "<GLOB>"
                },
                {
                    "description": "Only run tests in source files that do not match the specified glob pattern",
                    "option": "--no-match-path",
                    "shortcut": "--nmp",
                    "value": "<GLOB>"
                },
                {
                    "description": "Only show coverage for files that do not match the specified regex pattern",
                    "option": "--no-match-coverage",
                    "shortcut": "--nmco",
                    "value": "<REGEX>"
                },
                {
                    "description": "Do not restart the command while it's still running",
                    "option": "--no-restart"
                },
                {
                    "description": "Explicitly re-run all tests when a change is made",
                    "option": "--run-all"
                },
                {
                    "description": "File update debounce delay",
                    "option": "--watch-delay",
                    "value": "<DELAY>"
                },
                {
                    "description": "Watch the given files or directories for changes",
                    "option": "--watch",
                    "shortcut": "-w",
                    "value": "[<PATH>...]"
                },
                {
                    "description": "The path to the config file",
                    "option": "--config-path",
                    "value": "<FILE>"
                },
                {
                    "description": "Changes compilation to only use literal content and not URLs",
                    "option": "--use-literal-content"
                },
                {
                    "description": "Specify the solc version, or a path to a local solc, to build with",
                    "option": "--use",
                    "value": "<SOLC_VERSION>"
                },
                {
                    "description": "The target EVM version",
                    "option": "--evm-version",
                    "value": "<VERSION>"
                },
                {
                    "description": "Activate the Solidity optimizer",
                    "option": "--optimize",
                    "value": "[<OPTIMIZE>]"
                },
                {
                    "description": "The number of runs specifies roughly how often each opcode of the deployed code will be executed",
                    "option": "--optimizer-runs",
                    "value": "<RUNS>"
                },
                {
                    "description": "Extra output to include in the contract's artifact",
                    "option": "--extra-output",
                    "value": "<SELECTOR>..."
                },
                {
                    "description": "Extra output to write to separate files",
                    "option": "--extra-output-files",
                    "value": "<SELECTOR>..."
                },
                {
                    "description": "Set pre-linked libraries",
                    "option": "--libraries",
                    "tags": [
                        "env: DAPP_LIBRARIES="
                    ],
                    "value": "<LIBRARIES>"
                },
                {
                    "description": "Contract code size limit in bytes",
                    "option": "--code-size-limit",
                    "value": "<CODE_SIZE>"
                },
                {
                    "description": "The gas price",
                    "option": "--gas-price",
                    "value": "<GAS_PRICE>"
                },
                {
                    "description": "Memory limit per EVM execution in bytes",
                    "option": "--memory-limit",
                    "value": "<MEMORY_LIMIT>"
                },
                {
                    "description": "Sets the number of assumed available compute units per second for this provider",
                    "option": "--compute-units-per-second",
                    "value": "<CUPS>"
                },
                {
                    "description": "Skip building files whose names contain the given filter",
                    "option": "--skip",
                    "value": "<SKIP>..."
                },
                {
                    "description": "Revert string configuration",
                    "option": "--revert-strings",
                    "value": "<REVERT>"
                },
                {
                    "description": "The contracts source directory",
                    "option": "--contracts",
                    "shortcut": "-C",
                    "value": "<PATH>"
                },
                {
                    "description": "Stop running tests after the first failure",
                    "option": "--fail-fast"
                },
                {
                    "description": "Explicitly disables the use of RPC caching",
                    "option": "--no-storage-caching"
                },
                {
                    "description": "Includes the AST as JSON in the compiler output",
                    "option": "--ast"
                }
            ],
            "usage": "forge test [OPTIONS] [PATH]",
            "subcommands": []
        },
        {
            "name": "forge tree",
            "description": "Display a tree visualization of the project's dependency graph",
            "usage": "forge tree [OPTIONS]",
            "options": [
                {
                    "option": "--cache-path",
                    "description": "The path to the compiler cache",
                    "value": "<PATH>"
                },
                {
                    "option": "--charset",
                    "description": "Character set to use in output.",
                    "value": "<CHARSET>",
                    "default": "utf8",
                    "tags": [
                        "possible values: utf8, ascii"
                    ]
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "possible values: auto, always, never",
                        "default: auto"
                    ]
                },
                {
                    "option": "--config-path",
                    "description": "Path to the config file",
                    "value": "<FILE>"
                },
                {
                    "option": "--hardhat",
                    "description": "Use the Hardhat-style project layout.",
                    "tags": [
                        "aliases: --hh"
                    ]
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--lib-paths",
                    "description": "The path to the library folder",
                    "value": "<PATH>"
                },
                {
                    "option": "--no-dedupe",
                    "description": "Do not de-duplicate (repeats all shared dependencies)"
                },
                {
                    "option": "--remappings-env",
                    "description": "The project's remappings from the environment",
                    "value": "<ENV>"
                },
                {
                    "option": "--root",
                    "description": "The project's root path.",
                    "value": "<PATH>"
                },
                {
                    "option": "-C",
                    "shortcut": "--contracts",
                    "description": "The contracts source directory",
                    "value": "<PATH>"
                },
                {
                    "option": "-R",
                    "shortcut": "--remappings",
                    "description": "The project's remappings",
                    "value": "<REMAPPINGS>"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-j",
                    "shortcut": "--threads",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Do not print log messages"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                }
            ],
            "subcommands": []
        },
        {
            "description": "Update one or multiple dependencies. If no arguments are provided, then all dependencies are updated.",
            "name": "forge update",
            "options": [
                {
                    "description": "The color of the log messages. Possible values: - auto: Intelligently guess whether to use color output (default) - always: Force color output - never: Force disable color output",
                    "option": "--color",
                    "tags": [
                        "Display options"
                    ],
                    "value": "<COLOR>"
                },
                {
                    "description": "Override the up-to-date check",
                    "option": "--force",
                    "shortcut": "-f"
                },
                {
                    "description": "Print help (see a summary with '-h')",
                    "option": "--help",
                    "shortcut": "-h"
                },
                {
                    "aliases": [
                        "--jobs"
                    ],
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "option": "--threads",
                    "shortcut": "-j",
                    "value": "<THREADS>"
                },
                {
                    "description": "Format log messages as JSON",
                    "option": "--json",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "description": "Recursively update submodules",
                    "option": "--recursive",
                    "shortcut": "-r"
                },
                {
                    "default": "root of the Git repository, if in one, or the current working directory",
                    "description": "The project's root path.",
                    "option": "--root",
                    "value": "<PATH>"
                },
                {
                    "description": "Do not print log messages",
                    "option": "--quiet",
                    "shortcut": "-q",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: - 2 (-vv): Print logs for all tests. - 3 (-vvv): Print execution traces for failing tests. - 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. - 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes.",
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "tags": [
                        "Display options"
                    ]
                }
            ],
            "subcommands": [],
            "usage": "forge update [OPTIONS] [DEPENDENCIES]..."
        },
        {
            "name": "forge verify-bytecode",
            "description": "Verify the deployed bytecode against its source on Etherscan",
            "usage": "forge verify-bytecode [OPTIONS] <ADDRESS> <CONTRACT>",
            "options": [
                {
                    "option": "--block",
                    "description": "The block at which the bytecode should be verified",
                    "value": "<BLOCK>"
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "auto",
                        "always",
                        "never"
                    ]
                },
                {
                    "option": "--constructor-args",
                    "description": "The constructor args to generate the creation code",
                    "value": "<ARGS>..."
                },
                {
                    "option": "--constructor-args-path",
                    "description": "The path to a file containing the constructor arguments",
                    "value": "<PATH>"
                },
                {
                    "option": "--encoded-constructor-args",
                    "description": "The ABI-encoded constructor arguments",
                    "value": "<HEX>"
                },
                {
                    "option": "--etherscan-api-key",
                    "shortcut": "-e",
                    "description": "The Etherscan (or equivalent) API key",
                    "value": "<KEY>",
                    "tags": [
                        "env: ETHERSCAN_API_KEY="
                    ]
                },
                {
                    "option": "--etherscan-api-version",
                    "shortcut": "-a",
                    "description": "The Etherscan API version",
                    "value": "<API_VERSION>",
                    "tags": [
                        "env: ETHERSCAN_API_VERSION="
                    ]
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--ignore",
                    "description": "Ignore verification for creation or runtime bytecode",
                    "value": "<BYTECODE_TYPE>",
                    "tags": [
                        "creation",
                        "runtime"
                    ]
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--root",
                    "description": "The project's root path. By default root of the Git repository, if in one, or the current working directory.",
                    "value": "<PATH>"
                },
                {
                    "option": "--rpc-url",
                    "shortcut": "-r",
                    "description": "The rpc url to use for verification",
                    "value": "<RPC_URL>",
                    "tags": [
                        "env: ETH_RPC_URL="
                    ]
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--verifier",
                    "description": "The contract verification provider to use",
                    "value": "<VERIFIER>",
                    "default": "sourcify",
                    "tags": [
                        "etherscan",
                        "sourcify",
                        "blockscout",
                        "oklink",
                        "custom"
                    ]
                },
                {
                    "option": "--verifier-api-key",
                    "description": "The verifier API KEY, if using a custom provider",
                    "value": "<VERIFIER_API_KEY>",
                    "tags": [
                        "env: VERIFIER_API_KEY="
                    ]
                },
                {
                    "option": "--verifier-api-version",
                    "description": "The verifier API version, if using a custom provider",
                    "value": "<VERIFIER_API_VERSION>",
                    "tags": [
                        "env: VERIFIER_API_VERSION="
                    ]
                },
                {
                    "option": "--verifier-url",
                    "description": "The verifier URL, if using a custom provider",
                    "value": "<VERIFIER_URL>",
                    "tags": [
                        "env: VERIFIER_URL="
                    ]
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings. For example, the verbosity levels of the EVM are: 2 (-vv): Print logs for all tests. 3 (-vvv): Print execution traces for failing tests. 4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests. 5 (-vvvvv): Print execution and setup traces for all tests, including storage changes."
                },
                {
                    "option": "--chain",
                    "shortcut": "-c",
                    "description": "The chain name or EIP-155 chain ID",
                    "value": "<CHAIN>",
                    "tags": [
                        "env: CHAIN="
                    ]
                }
            ],
            "subcommands": []
        },
        {
            "description": "Check verification status on Etherscan",
            "usage": "forge verify-check [OPTIONS] <ID>",
            "subcommands": [],
            "options": [
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "option": "--delay",
                    "description": "Optional delay to apply in between verification attempts, in seconds",
                    "value": "<DELAY>",
                    "default": "5"
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "option": "--retries",
                    "description": "Number of attempts for retrying verification",
                    "value": "<RETRIES>",
                    "default": "5"
                },
                {
                    "option": "--verifier",
                    "description": "The contract verification provider to use",
                    "value": "<VERIFIER>",
                    "default": "sourcify",
                    "tags": [
                        "Verifier options"
                    ]
                },
                {
                    "option": "--verifier-api-key",
                    "description": "The verifier API KEY, if using a custom provider",
                    "value": "<VERIFIER_API_KEY>",
                    "tags": [
                        "Verifier options"
                    ]
                },
                {
                    "option": "--verifier-api-version",
                    "description": "The verifier API version, if using a custom provider",
                    "value": "<VERIFIER_API_VERSION>",
                    "tags": [
                        "Verifier options"
                    ]
                },
                {
                    "option": "--verifier-url",
                    "description": "The verifier URL, if using a custom provider",
                    "value": "<VERIFIER_URL>",
                    "tags": [
                        "Verifier options"
                    ]
                },
                {
                    "shortcut": "-a",
                    "option": "--etherscan-api-version",
                    "description": "The Etherscan API version",
                    "value": "<API_VERSION>"
                },
                {
                    "shortcut": "-c",
                    "option": "--chain",
                    "description": "The chain name or EIP-155 chain ID",
                    "value": "<CHAIN>"
                },
                {
                    "shortcut": "-e",
                    "option": "--etherscan-api-key",
                    "description": "The Etherscan (or equivalent) API key",
                    "value": "<KEY>"
                },
                {
                    "shortcut": "-h",
                    "option": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "shortcut": "-j",
                    "option": "--threads",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "shortcut": "-q",
                    "option": "--quiet",
                    "description": "Do not print log messages",
                    "tags": [
                        "Display options"
                    ]
                },
                {
                    "shortcut": "-v",
                    "option": "--verbosity",
                    "description": "Verbosity level of the log messages. Pass multiple times to increase the verbosity (e.g. -v, -vv, -vvv). Depending on the context the verbosity levels have different meanings.",
                    "tags": [
                        "Display options"
                    ]
                }
            ],
            "name": "forge verify-check"
        },
        {
            "name": "forge verify-contract",
            "description": "Verify smart contracts on Etherscan",
            "usage": "forge verify-contract [OPTIONS] <ADDRESS> [CONTRACT]",
            "subcommands": [],
            "options": [
                {
                    "option": "--chain",
                    "shortcut": "-c",
                    "description": "The chain name or EIP-155 chain ID",
                    "tags": [
                        "env: CHAIN="
                    ]
                },
                {
                    "option": "--color",
                    "description": "The color of the log messages",
                    "value": "<COLOR>",
                    "tags": [
                        "Possible values: auto, always, never"
                    ]
                },
                {
                    "option": "--compiler-version",
                    "description": "The `solc` version to use to build the smart contract",
                    "value": "<VERSION>"
                },
                {
                    "option": "--compilation-profile",
                    "description": "The compilation profile to use to build the smart contract",
                    "value": "<PROFILE_NAME>"
                },
                {
                    "option": "--constructor-args",
                    "description": "The ABI-encoded constructor arguments",
                    "value": "<ARGS>",
                    "tags": [
                        "aliases: --encoded-constructor-args"
                    ]
                },
                {
                    "option": "--constructor-args-path",
                    "description": "The path to a file containing the constructor arguments",
                    "value": "<PATH>"
                },
                {
                    "option": "--delay",
                    "description": "Optional delay to apply in between verification attempts, in seconds",
                    "value": "<DELAY>",
                    "default": "5"
                },
                {
                    "option": "--etherscan-api-key",
                    "shortcut": "-e",
                    "description": "The Etherscan (or equivalent) API key",
                    "value": "<KEY>",
                    "tags": [
                        "env: ETHERSCAN_API_KEY="
                    ]
                },
                {
                    "option": "--etherscan-api-version",
                    "shortcut": "-a",
                    "description": "The Etherscan API version",
                    "value": "<API_VERSION>",
                    "tags": [
                        "env: ETHERSCAN_API_VERSION="
                    ]
                },
                {
                    "option": "--evm-version",
                    "description": "The EVM version to use.",
                    "value": "<EVM_VERSION>"
                },
                {
                    "option": "--flashbots",
                    "description": "Use the Flashbots RPC URL with fast mode (<https://rpc.flashbots.net/fast>)."
                },
                {
                    "option": "--flatten",
                    "description": "Flatten the source code before verifying"
                },
                {
                    "option": "--force",
                    "shortcut": "-f",
                    "description": "Do not compile the flattened smart contract before verifying (if --flatten is passed)"
                },
                {
                    "option": "--guess-constructor-args",
                    "description": "Try to extract constructor arguments from on-chain creation code"
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--insecure",
                    "shortcut": "-k",
                    "description": "Allow insecure RPC connections (accept invalid HTTPS certificates)."
                },
                {
                    "option": "--json",
                    "description": "Format log messages as JSON"
                },
                {
                    "option": "--jwt-secret",
                    "description": "JWT Secret for the RPC endpoint.",
                    "value": "<JWT_SECRET>",
                    "tags": [
                        "env: ETH_RPC_JWT_SECRET="
                    ]
                },
                {
                    "option": "--language",
                    "description": "The contract language (`solidity` or `vyper`).",
                    "value": "<LANGUAGE>",
                    "default": "solidity",
                    "tags": [
                        "Possible values: solidity, vyper"
                    ]
                },
                {
                    "option": "--libraries",
                    "description": "Set pre-linked libraries",
                    "value": "<LIBRARIES>",
                    "tags": [
                        "env: DAPP_LIBRARIES="
                    ]
                },
                {
                    "option": "--num-of-optimizations",
                    "description": "The number of optimization runs used to build the smart contract",
                    "value": "<NUM>",
                    "tags": [
                        "aliases: --optimizer-runs"
                    ]
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Do not print log messages"
                },
                {
                    "option": "--retries",
                    "description": "Number of attempts for retrying verification",
                    "value": "<RETRIES>",
                    "default": "5"
                },
                {
                    "option": "--root",
                    "description": "The project's root path.",
                    "value": "<PATH>"
                },
                {
                    "option": "--rpc-headers",
                    "description": "Specify custom headers for RPC requests",
                    "value": "<RPC_HEADERS>",
                    "tags": [
                        "env: ETH_RPC_HEADERS="
                    ]
                },
                {
                    "option": "--rpc-timeout",
                    "description": "Timeout for the RPC request in seconds.",
                    "value": "<RPC_TIMEOUT>",
                    "default": "45",
                    "tags": [
                        "env: ETH_RPC_TIMEOUT="
                    ]
                },
                {
                    "option": "--rpc-url",
                    "shortcut": "-r",
                    "description": "The RPC endpoint, default value is http://localhost:8545",
                    "value": "<URL>",
                    "tags": [
                        "env: ETH_RPC_URL="
                    ]
                },
                {
                    "option": "--show-standard-json-input",
                    "description": "Prints the standard json compiler input."
                },
                {
                    "option": "--skip-is-verified-check",
                    "description": "Do not check if the contract is already verified before verifying"
                },
                {
                    "option": "--threads",
                    "shortcut": "-j",
                    "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
                    "value": "<THREADS>",
                    "tags": [
                        "aliases: --jobs"
                    ]
                },
                {
                    "option": "--verifier",
                    "description": "The contract verification provider to use",
                    "value": "<VERIFIER>",
                    "default": "sourcify",
                    "tags": [
                        "Possible values: etherscan, sourcify, blockscout, oklink, custom"
                    ]
                },
                {
                    "option": "--verifier-api-key",
                    "description": "The verifier API KEY, if using a custom provider",
                    "value": "<VERIFIER_API_KEY>",
                    "tags": [
                        "env: VERIFIER_API_KEY="
                    ]
                },
                {
                    "option": "--verifier-api-version",
                    "description": "The verifier API version, if using a custom provider",
                    "value": "<VERIFIER_API_VERSION>",
                    "tags": [
                        "env: VERIFIER_API_VERSION="
                    ]
                },
                {
                    "option": "--verifier-url",
                    "description": "The verifier URL, if using a custom provider",
                    "value": "<VERIFIER_URL>",
                    "tags": [
                        "env: VERIFIER_URL="
                    ]
                },
                {
                    "option": "--via-ir",
                    "description": "Use the Yul intermediate representation compilation pipeline"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Verbosity level of the log messages.",
                    "tags": [
                        "Pass multiple times to increase the verbosity"
                    ]
                },
                {
                    "option": "--watch",
                    "description": "Wait for verification result after submission"
                }
            ]
        }
    ],
    "usage": "forge [OPTIONS] <COMMAND>",
    "options": [
        {
            "description": "The color of the log messages",
            "option": "--color",
            "value": "<COLOR>",
            "tags": [
                "auto",
                "always",
                "never"
            ]
        },
        {
            "description": "Format log messages as JSON",
            "option": "--json"
        },
        {
            "description": "Do not print log messages",
            "option": "--quiet",
            "shortcut": "-q"
        },
        {
            "description": "Print help (see a summary with '-h')",
            "option": "--help",
            "shortcut": "-h"
        },
        {
            "description": "Number of threads to use. Specifying 0 defaults to the number of logical cores",
            "option": "--threads",
            "shortcut": "-j",
            "value": "<THREADS>",
            "tags": [
                "--jobs"
            ]
        },
        {
            "description": "Print version",
            "option": "--version",
            "shortcut": "-V"
        },
        {
            "description": "Verbosity level of the log messages",
            "option": "--verbosity",
            "shortcut": "-v",
            "tags": [
                "2 (-vv): Print logs for all tests",
                "3 (-vvv): Print execution traces for failing tests",
                "4 (-vvvv): Print execution traces for all tests, and setup traces for failing tests",
                "5 (-vvvvv): Print execution and setup traces for all tests, including storage changes"
            ]
        }
    ],
    "version": "1.3.1-stable"
}
