{
    "name": "nimbus_beacon_node",
    "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
    "usage": "nimbus_beacon_node [OPTIONS]... command",
    "options": [
        {
            "option": "--agent-string",
            "description": "Node agent string which is used as identifier in network",
            "default": "nimbus"
        },
        {
            "option": "--all",
            "description": "Exit all validators in the specified data directory or validators directory",
            "default": "false"
        },
        {
            "option": "--backfill",
            "description": "Backfill blocks directly from REST server instead of fetching via API",
            "default": "true"
        },
        {
            "option": "--bootstrap-file",
            "description": "Specifies a line-delimited file of bootstrap Ethereum network addresses."
        },
        {
            "option": "--bootstrap-node",
            "shortcut": "-b",
            "description": "Specifies one or more bootstrap nodes to use when connecting to the network."
        },
        {
            "option": "--config-file",
            "description": "Loads the configuration from a TOML file."
        },
        {
            "option": "--count",
            "description": "Number of deposits to generate",
            "default": "1"
        },
        {
            "option": "--data-dir",
            "shortcut": "-d",
            "description": "The directory where nimbus will store all blockchain data."
        },
        {
            "option": "--deposits",
            "description": "Expected number of deposits to recover. If not specified, Nimbus will try to guess the number by inspecting the latest beacon state."
        },
        {
            "option": "--direct-peer",
            "description": "The list of privileged, secure and known peers to connect and maintain the connection to."
        },
        {
            "option": "--discv5",
            "description": "Enable Discovery v5",
            "default": "true"
        },
        {
            "option": "--doppelganger-detection",
            "description": "If enabled, the beacon node prudently listens for 2 epochs for attestations from a validator with the same index (a doppelganger), before sending an attestation itself.",
            "default": "true"
        },
        {
            "option": "--dump",
            "description": "Write SSZ dumps of blocks, attestations and states to data dir",
            "default": "false"
        },
        {
            "option": "--el",
            "description": "One or more execution layer Engine API URLs."
        },
        {
            "option": "--enr-auto-update",
            "description": "Discovery can automatically update its ENR with the IP address and UDP port as seen by other nodes it communicates with. This option allows to enable/disable this functionality",
            "default": "false"
        },
        {
            "option": "--epoch",
            "description": "The desired exit epoch",
            "default": "immediately"
        },
        {
            "option": "--external-beacon-api-url",
            "description": "External beacon API to use for syncing (on empty database)."
        },
        {
            "option": "--field",
            "description": "Additional record key pairs, provide as <string>:<bytes in hex>."
        },
        {
            "option": "--finalized-checkpoint-state",
            "description": "SSZ file specifying a recent finalized state."
        },
        {
            "option": "--finalized-deposit-tree-snapshot",
            "description": "SSZ file specifying a recent finalized EIP-4881 deposit tree snapshot."
        },
        {
            "option": "--genesis-state",
            "description": "SSZ file specifying the genesis state of the network (for networks without a built-in genesis state)."
        },
        {
            "option": "--genesis-state-url",
            "description": "URL for obtaining the genesis state of the network (for networks without a built-in genesis state)."
        },
        {
            "option": "--graffiti",
            "description": "The graffiti value that will appear in proposed blocks. You can use a 0x-prefixed hex encoded string to specify raw bytes."
        },
        {
            "option": "--hard-max-peers",
            "description": "The maximum number of peers to connect to. Defaults to maxPeers * 1.5."
        },
        {
            "option": "--history",
            "description": "Retention strategy for historical data (archive/prune)",
            "default": "HistoryMode.Prune"
        },
        {
            "option": "--in-process-validators",
            "description": "Disable the push model and load the validators in the beacon node itself",
            "default": "true"
        },
        {
            "option": "--insecure-netkey-password",
            "description": "Use pre-generated INSECURE password for network private key file",
            "default": "false"
        },
        {
            "option": "--ip",
            "description": "External IP address."
        },
        {
            "option": "--jwt-secret",
            "description": "A file containing the hex-encoded 256 bit secret key to be used for verifying/generating JWT tokens."
        },
        {
            "option": "--keymanager",
            "description": "Enable the REST keymanager API",
            "default": "false"
        },
        {
            "option": "--keymanager-allow-origin",
            "description": "Limit the access to the Keymanager API to a particular hostname (for CORS-enabled clients such as browsers)."
        },
        {
            "option": "--keymanager-address",
            "description": "Listening port for the REST keymanager API",
            "default": "127.0.0.1"
        },
        {
            "option": "--keymanager-port",
            "description": "Listening port for the REST keymanager API",
            "default": "5052"
        },
        {
            "option": "--keymanager-token-file",
            "description": "A file specifying the authorization token required for accessing the keymanager API."
        },
        {
            "option": "--light-client-data-import-mode",
            "description": "Which classes of light client data to import. Must be one of: none, only-new, full (slow startup), on-demand (may miss validator duties)",
            "default": "only-new"
        },
        {
            "option": "--light-client-data-max-periods",
            "description": "Maximum number of sync committee periods to retain light client data."
        },
        {
            "option": "--light-client-data-serve",
            "description": "Serve data for enabling light clients to stay in sync with the network",
            "default": "true"
        },
        {
            "option": "--list",
            "description": "Lists details about all wallets."
        },
        {
            "option": "--listen-address",
            "description": "Listening address for the Ethereum LibP2P and Discovery v5 traffic",
            "default": "*"
        },
        {
            "option": "--local-block-value-boost",
            "description": "Increase execution layer block values for builder bid comparison by a percentage",
            "default": "10"
        },
        {
            "option": "--log-file",
            "description": "Specifies a path for the written JSON log file (deprecated)."
        },
        {
            "option": "--log-level",
            "description": "Sets the log level for process and topics",
            "default": "INFO"
        },
        {
            "option": "--max-peers",
            "description": "The target number of peers to connect to",
            "default": "160"
        },
        {
            "option": "--metrics",
            "description": "Enable the metrics server",
            "default": "false"
        },
        {
            "option": "--metrics-address",
            "description": "Listening address of the metrics server",
            "default": "127.0.0.1"
        },
        {
            "option": "--metrics-port",
            "description": "Listening HTTP port of the metrics server",
            "default": "8008"
        },
        {
            "option": "--method",
            "description": "Specifies which import method will be used (normal, single-salt)",
            "default": "ImportMethod.Normal"
        },
        {
            "option": "--nat",
            "description": "Specify method to use for determining public address. Must be one of: any, none, upnp, pmp, extip:<IP>",
            "default": "any"
        },
        {
            "option": "--network",
            "description": "The Eth2 network to join",
            "default": "mainnet"
        },
        {
            "option": "--new-wallet-file",
            "description": "Output wallet file."
        },
        {
            "option": "--new-wallet-name",
            "description": "An easy-to-remember name for the wallet of your choice."
        },
        {
            "option": "--next-account",
            "description": "Initial value for the 'nextaccount' property of the wallet."
        },
        {
            "option": "--node-name",
            "description": "A name for this node that will appear in the logs."
        },
        {
            "option": "--non-interactive",
            "description": "Do not display interactive prompts. Quit on missing configuration."
        },
        {
            "option": "--no-el",
            "description": "Don't use an EL. The node will remain optimistically synced and won't be able to perform validator duties",
            "default": "false"
        },
        {
            "option": "--num-threads",
            "description": "Number of worker threads",
            "default": "0"
        },
        {
            "option": "--out",
            "description": "Output wallet file."
        },
        {
            "option": "--out-deposits-file",
            "description": "The name of generated deposits file."
        },
        {
            "option": "--out-secrets-dir",
            "description": "Output folder for randomly generated keystore passphrases",
            "default": "secrets"
        },
        {
            "option": "--out-validators-dir",
            "description": "Output folder for validator keystores",
            "default": "validators"
        },
        {
            "option": "--payload-builder",
            "description": "Enable external payload builder",
            "default": "false"
        },
        {
            "option": "--payload-builder-url",
            "description": "Payload builder URL."
        },
        {
            "option": "--print",
            "description": "Print signed exit message instead of publishing it",
            "default": "false"
        },
        {
            "option": "--proven-block-property",
            "description": "The field path of a block property that will be sent for verification to the verifying Web3Signer."
        },
        {
            "option": "--reindex",
            "description": "Recreate historical state index at end of backfill, allowing full history access (requires full backfill)",
            "default": "false"
        },
        {
            "option": "--rest",
            "description": "Enable the REST server",
            "default": "false"
        },
        {
            "option": "--rest-address",
            "description": "Listening address of the REST server",
            "default": "127.0.0.1"
        },
        {
            "option": "--rest-allow-origin",
            "description": "Limit the access to the REST API to a particular hostname (for CORS-enabled clients such as browsers)."
        },
        {
            "option": "--rest-max-body-size",
            "description": "Maximum size of REST request body (kilobytes)",
            "default": "16384"
        },
        {
            "option": "--rest-max-headers-size",
            "description": "Maximum size of REST request headers (kilobytes)",
            "default": "128"
        },
        {
            "option": "--rest-port",
            "description": "Port for the REST server",
            "default": "5052"
        },
        {
            "option": "--rest-request-timeout",
            "description": "The number of seconds to wait until complete REST request will be received",
            "default": "infinite"
        },
        {
            "option": "--rest-statecache-size",
            "description": "The maximum number of recently accessed states that are kept in memory. Speeds up requests obtaining information for consecutive slots or epochs.",
            "default": "3"
        },
        {
            "option": "--rest-statecache-ttl",
            "description": "The number of seconds to keep recently accessed states in memory",
            "default": "60"
        },
        {
            "option": "--rest-url",
            "description": "URL of the beacon node REST service",
            "default": "http://127.0.0.1:5052"
        },
        {
            "option": "--seq-number",
            "description": "Record sequence number",
            "default": "1"
        },
        {
            "option": "--secrets-dir",
            "description": "A directory containing validator keystore passwords."
        },
        {
            "option": "--state-id",
            "description": "State id to sync to - this can be 'finalized', a slot number or state hash or 'head'."
        },
        {
            "option": "--status-bar",
            "description": "Display a status bar at the bottom of the terminal screen",
            "default": "true"
        },
        {
            "option": "--status-bar-contents",
            "description": "Textual template for the contents of the status bar."
        },
        {
            "option": "--subscribe-all-subnets",
            "description": "Subscribe to all subnet topics when gossiping",
            "default": "false"
        },
        {
            "option": "--suggested-fee-recipient",
            "description": "Suggested fee recipient."
        },
        {
            "option": "--suggested-gas-limit",
            "description": "Suggested gas limit",
            "default": "defaultGasLimit"
        },
        {
            "option": "--sync-light-client",
            "description": "Accelerate sync using light client",
            "default": "true"
        },
        {
            "option": "--tcp-port",
            "description": "Listening TCP port for Ethereum LibP2P traffic",
            "default": "9000"
        },
        {
            "option": "--trusted-block-root",
            "description": "Recent trusted finalized block root to sync from external beacon API."
        },
        {
            "option": "--trusted-node-url",
            "description": "URL of the REST API to sync from",
            "default": "http://127.0.0.1:5052"
        },
        {
            "option": "--trusted-state-root",
            "description": "Recent trusted finalized state root to sync from external beacon API."
        },
        {
            "option": "--udp-port",
            "description": "Listening UDP port for node discovery",
            "default": "9000"
        },
        {
            "option": "--validator",
            "shortcut": "-v",
            "description": "Limit the export to specific validators (specified as numeric indices or public keys)."
        },
        {
            "option": "--validator-monitor-auto",
            "description": "Monitor validator activity automatically for validators active on this beacon node",
            "default": "true"
        },
        {
            "option": "--validator-monitor-details",
            "description": "Publish detailed metrics for each validator individually - may incur significant overhead with large numbers of validators",
            "default": "false"
        },
        {
            "option": "--validator-monitor-pubkey",
            "description": "One or more validators to monitor - works best when --subscribe-all-subnets is enabled."
        },
        {
            "option": "--validators-dir",
            "description": "A directory containing validator keystores."
        },
        {
            "option": "--verifying-web3-signer-url",
            "description": "Remote Web3Signer URL that will be used as a source of validators."
        },
        {
            "option": "--web3-signer-update-interval",
            "description": "Number of seconds between validator list updates",
            "default": "3600"
        },
        {
            "option": "--web3-signer-url",
            "description": "Remote Web3Signer URL that will be used as a source of validators."
        },
        {
            "option": "--web3-url",
            "description": "One or more execution layer Engine API URLs."
        },
        {
            "option": "--weak-subjectivity-checkpoint",
            "description": "Weak subjectivity checkpoint in the format block_root:epoch_number."
        },
        {
            "option": "--with-deposit-snapshot",
            "description": "Also try to download a snapshot of the deposit contract state",
            "default": "false"
        }
    ],
    "subcommands": [
        {
            "name": "nimbus_beacon_node deposits",
            "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
            "usage": "nimbus_beacon_node deposits",
            "subcommands": [
                {
                    "name": "nimbus_beacon_node deposits createTestnetDeposits",
                    "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
                    "usage": "nimbus_beacon_node deposits createTestnetDeposits [OPTIONS]...",
                    "subcommands": [],
                    "options": [
                        {
                            "option": "--count",
                            "description": "Number of deposits to generate",
                            "default": "1"
                        },
                        {
                            "option": "--new-wallet-file",
                            "description": "Output wallet file"
                        },
                        {
                            "option": "--new-wallet-name",
                            "description": "An easy-to-remember name for the wallet of your choice"
                        },
                        {
                            "option": "--out-deposits-file",
                            "description": "The name of generated deposits file"
                        },
                        {
                            "option": "--out-secrets-dir",
                            "description": "Output folder for randomly generated keystore passphrases",
                            "default": "secrets"
                        },
                        {
                            "option": "--out-validators-dir",
                            "description": "Output folder for validator keystores",
                            "default": "validators"
                        },
                        {
                            "option": "--wallet",
                            "description": "An existing wallet ID. If not specified, a new wallet will be created"
                        }
                    ]
                },
                {
                    "name": "nimbus_beacon_node deposits exit",
                    "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
                    "usage": "nimbus_beacon_node deposits exit [OPTIONS]...",
                    "subcommands": [
                        {
                            "name": "nimbus_beacon_node deposits exit deposits exit",
                            "subcommands": [],
                            "options": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--all",
                            "description": "Exit all validators in the specified data directory or validators directory",
                            "default": "false"
                        },
                        {
                            "option": "--epoch",
                            "description": "The desired exit epoch",
                            "default": "immediately"
                        },
                        {
                            "option": "--print",
                            "description": "Print signed exit message instead of publishing it",
                            "default": "false"
                        },
                        {
                            "option": "--rest-url",
                            "description": "URL of the beacon node REST service",
                            "default": "http://127.0.0.1:5052"
                        },
                        {
                            "option": "--validator",
                            "description": "One or more validator index, public key or a keystore path of the exited validator(s)."
                        }
                    ]
                },
                {
                    "name": "nimbus_beacon_node deposits import",
                    "description": "v24.12.0-4e4402-stateofus",
                    "usage": "nimbus_beacon_node deposits import [OPTIONS]...",
                    "subcommands": [
                        {
                            "name": "nimbus_beacon_node deposits import deposits",
                            "subcommands": [],
                            "options": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--method",
                            "description": "Specifies which import method will be used (normal, single-salt)",
                            "default": "ImportMethod.Normal"
                        }
                    ]
                }
            ]
        },
        {
            "name": "nimbus_beacon_node record",
            "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
            "usage": "nimbus_beacon_node record",
            "subcommands": [
                {
                    "name": "nimbus_beacon_node record create",
                    "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
                    "usage": "nimbus_beacon_node record create [OPTIONS]...",
                    "subcommands": [
                        {
                            "name": "nimbus_beacon_node record create record",
                            "subcommands": [],
                            "options": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--field",
                            "description": "Additional record key pairs, provide as <string>:<bytes in hex>."
                        },
                        {
                            "option": "--ip",
                            "description": "External IP address."
                        },
                        {
                            "option": "--seq-number",
                            "description": "Record sequence number",
                            "default": "1"
                        },
                        {
                            "option": "--tcp-port",
                            "description": "External TCP port."
                        },
                        {
                            "option": "--udp-port",
                            "description": "External UDP port."
                        }
                    ]
                },
                {
                    "name": "nimbus_beacon_node record print",
                    "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
                    "usage": "nimbus_beacon_node record print <enr>",
                    "subcommands": [
                        {
                            "name": "nimbus_beacon_node record print record",
                            "subcommands": [],
                            "options": []
                        }
                    ],
                    "options": []
                }
            ]
        },
        {
            "name": "nimbus_beacon_node slashingdb",
            "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
            "usage": "nimbus_beacon_node slashingdb command",
            "subcommands": [
                {
                    "name": "nimbus_beacon_node slashingdb export",
                    "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
                    "usage": "nimbus_beacon_node slashingdb export [OPTIONS]... <exportedInterchangeFile>",
                    "subcommands": [
                        {
                            "name": "nimbus_beacon_node slashingdb export slashingdb",
                            "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
                            "usage": "nimbus_beacon_node slashingdb export [OPTIONS]... <exportedInterchangeFile>",
                            "subcommands": [],
                            "options": [
                                {
                                    "option": "--validator",
                                    "shortcut": "-v",
                                    "description": "Limit the export to specific validators (specified as numeric indices or public keys)."
                                }
                            ]
                        }
                    ],
                    "options": [
                        {
                            "option": "--validator",
                            "shortcut": "-v",
                            "description": "Limit the export to specific validators (specified as numeric indices or public keys)."
                        }
                    ]
                },
                {
                    "name": "nimbus_beacon_node slashingdb import",
                    "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
                    "usage": "nimbus_beacon_node slashingdb import <importedInterchangeFile>",
                    "subcommands": [
                        {
                            "name": "nimbus_beacon_node slashingdb import slashingdb",
                            "subcommands": [],
                            "options": []
                        }
                    ],
                    "options": []
                }
            ],
            "options": [
                {
                    "option": "--validator",
                    "shortcut": "-v",
                    "description": "Limit the export to specific validators (specified as numeric indices or public keys)."
                }
            ]
        },
        {
            "name": "nimbus_beacon_node trustedNodeSync",
            "description": "v24.12.0-4e4402-stateofus",
            "usage": "nimbus_beacon_node trustedNodeSync [OPTIONS]...",
            "options": [
                {
                    "default": "true",
                    "description": "Backfill blocks directly from REST server instead of fetching via API",
                    "option": "--backfill"
                },
                {
                    "default": "false",
                    "description": "Recreate historical state index at end of backfill, allowing full history access (requires full backfill)",
                    "option": "--reindex"
                },
                {
                    "description": "Recent trusted finalized block root to initialize light client from",
                    "option": "--trusted-block-root"
                },
                {
                    "default": "http://127.0.0.1:5052",
                    "description": "URL of the REST API to sync from",
                    "option": "--trusted-node-url"
                },
                {
                    "description": "State id to sync to - this can be \"finalized\", a slot number or state hash or \"head\"",
                    "option": "--state-id"
                },
                {
                    "default": "false",
                    "description": "Also try to download a snapshot of the deposit contract state",
                    "option": "--with-deposit-snapshot"
                }
            ],
            "subcommands": []
        },
        {
            "name": "nimbus_beacon_node wallets",
            "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
            "usage": "nimbus_beacon_node wallets command",
            "subcommands": [
                {
                    "name": "nimbus_beacon_node wallets create",
                    "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
                    "usage": "Usage: ",
                    "subcommands": [
                        {
                            "name": "nimbus_beacon_node wallets create wallets create",
                            "subcommands": [],
                            "options": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--name",
                            "description": "An easy-to-remember name for the wallet of your choice."
                        },
                        {
                            "option": "--next-account",
                            "description": "Initial value for the 'nextaccount' property of the wallet."
                        },
                        {
                            "option": "--out",
                            "description": "Output wallet file."
                        }
                    ]
                },
                {
                    "name": "nimbus_beacon_node wallets list",
                    "description": "v24.12.0-4e4402-stateofus",
                    "usage": "Usage: nimbus_beacon_node wallets list",
                    "subcommands": [
                        {
                            "name": "nimbus_beacon_node wallets list wallets list",
                            "subcommands": [],
                            "options": []
                        }
                    ]
                },
                {
                    "name": "nimbus_beacon_node wallets restore",
                    "description": "v24.12.0-4e4402-stateofus",
                    "usage": "nimbus_beacon_node wallets restore [OPTIONS]...",
                    "subcommands": [],
                    "options": [
                        {
                            "option": "--deposits",
                            "description": "Expected number of deposits to recover. If not specified, Nimbus will try to guess the number by inspecting the latest beacon state."
                        },
                        {
                            "option": "--name",
                            "description": "An easy-to-remember name for the wallet of your choice."
                        },
                        {
                            "option": "--out",
                            "description": "Output wallet file."
                        }
                    ]
                }
            ]
        },
        {
            "name": "nimbus_beacon_node web3",
            "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
            "usage": "nimbus_beacon_node web3 command",
            "subcommands": [
                {
                    "name": "nimbus_beacon_node web3 test",
                    "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
                    "usage": "nimbus_beacon_node web3 test <url>",
                    "subcommands": [
                        {
                            "name": "nimbus_beacon_node web3 test web3",
                            "description": "Nimbus beacon node v24.12.0-4e4402-stateofus",
                            "usage": "nimbus_beacon_node web3 test <url>",
                            "subcommands": [],
                            "options": []
                        }
                    ],
                    "options": []
                }
            ]
        }
    ],
    "version": "v24.12.0-4e4402-stateofus"
}
