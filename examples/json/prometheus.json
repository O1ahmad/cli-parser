{
    "name": "prometheus",
    "description": "The Prometheus monitoring server",
    "usage": "usage: prometheus [<flags>]",
    "options": [
        {
            "option": "--[no-]agent",
            "description": "Run Prometheus in 'Agent mode'."
        },
        {
            "option": "--[no-]alertmanager.drain-notification-queue-on-shutdown",
            "description": "Send any outstanding Alertmanager notifications when shutting down. If false, any outstanding Alertmanager notifications will be dropped when shutting down. Use with server mode only."
        },
        {
            "option": "--[no-]auto-gomaxprocs",
            "description": "Automatically set GOMAXPROCS to match Linux container CPU quota"
        },
        {
            "option": "--[no-]auto-gomemlimit",
            "description": "Automatically set GOMEMLIMIT to match Linux container or system memory limit"
        },
        {
            "option": "--[no-]help",
            "shortcut": "-h",
            "description": "Show context-sensitive help (also try --help-long and --help-man)."
        },
        {
            "option": "--[no-]storage.agent.no-lockfile",
            "description": "Do not create lockfile in data directory. Use with agent mode only."
        },
        {
            "option": "--[no-]storage.agent.wal-compression",
            "description": "Compress the agent WAL. Use with agent mode only."
        },
        {
            "option": "--[no-]storage.tsdb.no-lockfile",
            "description": "Do not create lockfile in data directory. Use with server mode only."
        },
        {
            "option": "--[no-]version",
            "description": "Show application version."
        },
        {
            "option": "--[no-]web.enable-admin-api",
            "description": "Enable API endpoints for admin control actions."
        },
        {
            "option": "--[no-]web.enable-lifecycle",
            "description": "Enable shutdown and reload via HTTP request."
        },
        {
            "option": "--[no-]web.enable-otlp-receiver",
            "description": "Enable API endpoint accepting OTLP write requests."
        },
        {
            "option": "--[no-]web.enable-remote-write-receiver",
            "description": "Enable API endpoint accepting remote write requests."
        },
        {
            "option": "--alertmanager.notification-queue-capacity=10000",
            "description": "The capacity of the queue for pending Alertmanager notifications. Use with server mode only."
        },
        {
            "option": "--auto-gomemlimit.ratio=0.9",
            "description": "The ratio of reserved GOMEMLIMIT memory to the detected maximum container or system memory"
        },
        {
            "option": "--config.auto-reload-interval=30s",
            "description": "Specifies the interval for checking and automatically reloading the Prometheus configuration file upon detecting changes."
        },
        {
            "option": "--config.file=\"prometheus.yml\"",
            "description": "Prometheus configuration file path."
        },
        {
            "option": "--enable-feature= ...",
            "description": "Comma separated feature names to enable. Valid options: exemplar-storage, expand-external-labels, memory-snapshot-on-shutdown, promql-per-step-stats, promql-experimental-functions, extra-scrape-metrics, auto-gomaxprocs, native-histograms, created-timestamp-zero-ingestion, concurrent-rule-eval, delayed-compaction, old-ui. See https://prometheus.io/docs/prometheus/latest/feature_flags/ for more details."
        },
        {
            "option": "--log.format=logfmt",
            "description": "Output format of log messages. One of: [logfmt, json]"
        },
        {
            "option": "--log.level=info",
            "description": "Only log messages with the given severity or above. One of: [debug, info, warn, error]"
        },
        {
            "option": "--query.lookback-delta=5m",
            "description": "The maximum lookback duration for retrieving metrics during expression evaluations and federation. Use with server mode only."
        },
        {
            "option": "--query.max-concurrency=20",
            "description": "Maximum number of queries executed concurrently. Use with server mode only."
        },
        {
            "option": "--query.max-samples=50000000",
            "description": "Maximum number of samples a single query can load into memory. Note that queries will fail if they try to load more samples than this into memory, so this also limits the number of samples a query can return. Use with server mode only."
        },
        {
            "option": "--query.timeout=2m",
            "description": "Maximum time a query may take before being aborted. Use with server mode only."
        },
        {
            "option": "--rules.alert.for-grace-period=10m",
            "description": "Minimum duration between alert and restored \"for\" state. This is maintained only for alerts with configured \"for\" time greater than grace period. Use with server mode only."
        },
        {
            "option": "--rules.alert.for-outage-tolerance=1h",
            "description": "Max time to tolerate prometheus outage for restoring \"for\" state of alert. Use with server mode only."
        },
        {
            "option": "--rules.alert.resend-delay=1m",
            "description": "Minimum amount of time to wait before resending an alert to Alertmanager. Use with server mode only."
        },
        {
            "option": "--rules.max-concurrent-evals=4",
            "description": "Global concurrency limit for independent rules that can run concurrently. When set, \"query.max-concurrency\" may need to be adjusted accordingly. Use with server mode only."
        },
        {
            "option": "--storage.agent.path=\"data-agent/\"",
            "description": "Base path for metrics storage. Use with agent mode only."
        },
        {
            "option": "--storage.agent.retention.max-time=STORAGE.AGENT.RETENTION.MAX-TIME",
            "description": "Maximum age samples may be before being forcibly deleted when the WAL is truncated Use with agent mode only."
        },
        {
            "option": "--storage.agent.retention.min-time=STORAGE.AGENT.RETENTION.MIN-TIME",
            "description": "Minimum age samples may be before being considered for deletion when the WAL is truncated Use with agent mode only."
        },
        {
            "option": "--storage.remote.flush-deadline=<duration>",
            "description": "How long to wait flushing sample on shutdown or config reload."
        },
        {
            "option": "--storage.remote.read-concurrent-limit=10",
            "description": "Maximum number of concurrent remote read calls. 0 means no limit. Use with server mode only."
        },
        {
            "option": "--storage.remote.read-max-bytes-in-frame=1048576",
            "description": "Maximum number of bytes in a single frame for streaming remote read response types before marshalling. Note that client might have limit on frame size as well. 1MB as recommended by protobuf by default. Use with server mode only."
        },
        {
            "option": "--storage.remote.read-sample-limit=5e7",
            "description": "Maximum overall number of samples to return via the remote read interface, in a single query. 0 means no limit. This limit is ignored for streamed response types. Use with server mode only."
        },
        {
            "option": "--storage.tsdb.head-chunks-write-queue-size=0",
            "description": "Size of the queue through which head chunks are written to the disk to be m-mapped, 0 disables the queue completely. Experimental. Use with server mode only."
        },
        {
            "option": "--storage.tsdb.path=\"data/\"",
            "description": "Base path for metrics storage. Use with server mode only."
        },
        {
            "option": "--storage.tsdb.retention.size=STORAGE.TSDB.RETENTION.SIZE",
            "description": "Maximum number of bytes that can be stored for blocks. A unit is required, supported units: B, KB, MB, GB, TB, PB, EB. Ex: \"512MB\". Based on powers-of-2, so 1KB is 1024B. Use with server mode only."
        },
        {
            "option": "--storage.tsdb.retention.time=STORAGE.TSDB.RETENTION.TIME",
            "description": "How long to retain samples in storage. If neither this flag nor \"storage.tsdb.retention.size\" is set, the retention time defaults to 15d. Units Supported: y, w, d, h, m, s, ms. Use with server mode only."
        },
        {
            "option": "--web.config.file=\"\"",
            "description": "[EXPERIMENTAL] Path to configuration file that can enable TLS or authentication."
        },
        {
            "option": "--web.console.libraries=\"console_libraries\"",
            "description": "Path to the console library directory."
        },
        {
            "option": "--web.console.templates=\"consoles\"",
            "description": "Path to the console template directory, available at /consoles."
        },
        {
            "option": "--web.cors.origin=\".*\"",
            "description": "Regex for CORS origin. It is fully anchored. Example: 'https?://(domain1|domain2)\\.com'"
        },
        {
            "option": "--web.external-url=<URL>",
            "description": "The URL under which Prometheus is externally reachable (for example, if Prometheus is served via a reverse proxy). Used for generating relative and absolute links back to Prometheus itself. If the URL has a path portion, it will be used to prefix all HTTP endpoints served by Prometheus. If omitted, relevant URL components will be derived automatically."
        },
        {
            "option": "--web.listen-address=0.0.0.0:9090",
            "description": "Address to listen on for UI, API, and telemetry. Can be repeated."
        },
        {
            "option": "--web.max-connections=512",
            "description": "Maximum number of simultaneous connections across all listeners."
        },
        {
            "option": "--web.max-notifications-subscribers=16",
            "description": "Limits the maximum number of subscribers that can concurrently receive live notifications. If the limit is reached, new subscription requests will be denied until existing connections close."
        },
        {
            "option": "--web.page-title=\"Prometheus Time Series Collection and Processing Server\"",
            "description": "Document title of Prometheus instance."
        },
        {
            "option": "--web.read-timeout=5m",
            "description": "Maximum duration before timing out read of the request, and closing idle connections."
        },
        {
            "option": "--web.remote-write-receiver.accepted-protobuf-messages=prometheus.WriteRequest...",
            "description": "List of the remote write protobuf messages to accept when receiving the remote writes. Supported values: prometheus.WriteRequest, io.prometheus.write.v2.Request"
        },
        {
            "option": "--web.route-prefix=<path>",
            "description": "Prefix for the internal routes of web endpoints. Defaults to path of --web.external-url."
        },
        {
            "option": "--web.user-assets=<path>",
            "description": "Path to static asset directory, available at /user."
        }
    ],
    "subcommands": [],
    "version": "3.0.1"
}
