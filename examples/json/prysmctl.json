{
    "name": "prysmctl",
    "description": "A new cli application",
    "usage": "prysmctl [global options] command [command options] [arguments...]",
    "subcommands": [
        {
            "name": "prysmctl checkpoint-sync",
            "description": "commands for managing checkpoint sync",
            "usage": "prysmctl checkpoint-sync command [command options] [arguments...]",
            "subcommands": [
                {
                    "name": "prysmctl checkpoint-sync download",
                    "description": "Download the latest finalized state and the most recent block it integrates. To be used for checkpoint sync.",
                    "usage": "prysmctl checkpoint-sync download [command options] [arguments...]",
                    "options": [
                        {
                            "default": "localhost:3500",
                            "description": "host:port for beacon node connection",
                            "option": "--beacon-node-host",
                            "value": "value"
                        },
                        {
                            "default": "4m0s",
                            "description": "timeout for http requests made to beacon-node-url (uses duration format, ex: 2m31s). default: 4m",
                            "option": "--http-timeout",
                            "value": "value"
                        },
                        {
                            "description": "show help",
                            "option": "--help",
                            "shortcut": "-h"
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                }
            ]
        },
        {
            "name": "prysmctl db",
            "description": "commands to work with the prysm beacon db",
            "usage": "prysmctl db command [command options] [arguments...]",
            "subcommands": [
                {
                    "name": "prysmctl db buckets",
                    "description": "list db buckets",
                    "usage": "prysmctl db buckets [command options] [arguments...]",
                    "options": [
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--path",
                            "description": "path to directory containing beaconchain.db",
                            "value": "value"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "prysmctl db query",
                    "description": "database query tool",
                    "usage": "prysmctl db query [command options] [arguments...]",
                    "options": [
                        {
                            "option": "--bucket",
                            "description": "boltdb bucket to search",
                            "value": "value"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--path",
                            "description": "path to directory containing beaconchain.db",
                            "value": "value"
                        },
                        {
                            "option": "--prefix",
                            "description": "prefix of db record key to match against (eg 0xa1 would match 0xa10, 0xa1f etc)",
                            "value": "value"
                        },
                        {
                            "option": "--print-keys",
                            "description": "only display keys, not values",
                            "default": "false"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "prysmctl db slasher-span-display",
                    "description": "visualise values in db span bucket",
                    "usage": "prysmctl db slasher-span-display [command options] [arguments...]",
                    "options": [
                        {
                            "option": "--chunk-kind",
                            "description": "chunk kind to query (maxspan|minspan)",
                            "value": "value",
                            "default": "minspan"
                        },
                        {
                            "option": "--chunk-size",
                            "description": "chunk size to query",
                            "value": "value",
                            "default": "16"
                        },
                        {
                            "option": "--db-path-directory",
                            "description": "path to directory containing slasher.db",
                            "value": "value"
                        },
                        {
                            "option": "--display-all-epochs-in-chunk",
                            "description": "display all epochs in chunk",
                            "default": "false"
                        },
                        {
                            "option": "--display-all-validators-in-chunk",
                            "description": "display all validators in chunk",
                            "default": "false"
                        },
                        {
                            "option": "--epoch",
                            "description": "filter by epoch",
                            "value": "value",
                            "default": "0"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--history-length",
                            "description": "history length to query",
                            "value": "value",
                            "default": "4096"
                        },
                        {
                            "option": "--validator-chunk-size",
                            "description": "validator chunk size to query",
                            "value": "value",
                            "default": "256"
                        },
                        {
                            "option": "--validator-index",
                            "description": "filter by validator index",
                            "value": "value",
                            "default": "0"
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                }
            ]
        },
        {
            "name": "prysmctl p2p",
            "description": "commands for interacting with beacon nodes via p2p",
            "usage": "prysmctl p2p command [command options] [arguments...]",
            "subcommands": [
                {
                    "name": "prysmctl p2p send",
                    "description": "commands for sending p2p rpc requests to beacon nodes",
                    "usage": "prysmctl p2p send command [command options] [arguments...]",
                    "subcommands": [
                        {
                            "name": "prysmctl p2p send beacon-blocks-by-range",
                            "description": "Request a range of blocks from a beacon node via a p2p connection",
                            "usage": "prysmctl p2p send beacon-blocks-by-range [command options] [arguments...]",
                            "options": [
                                {
                                    "option": "--chain-config-file",
                                    "description": "Path to a YAML file with chain config values.",
                                    "value": "value"
                                },
                                {
                                    "option": "--client-port",
                                    "shortcut": "-client-port-tcp",
                                    "description": "TCP port to use for the client as a libp2p host",
                                    "value": "value",
                                    "default": "13001"
                                },
                                {
                                    "option": "--client-port-quic",
                                    "description": "QUIC port to use for the client as a libp2p host",
                                    "value": "value",
                                    "default": "13001"
                                },
                                {
                                    "option": "--count",
                                    "description": "number of blocks to request, (default 32)",
                                    "value": "value",
                                    "default": "32"
                                },
                                {
                                    "option": "--help",
                                    "shortcut": "-h",
                                    "description": "show help"
                                },
                                {
                                    "option": "--network",
                                    "description": "network to run on (mainnet, sepolia, holesky)",
                                    "value": "value",
                                    "default": "mainnet"
                                },
                                {
                                    "option": "--peer-multiaddrs",
                                    "description": "comma-separated, peer multiaddr(s) to connect to for p2p requests",
                                    "value": "value"
                                },
                                {
                                    "option": "--prysm-api-endpoints",
                                    "description": "comma-separated, gRPC API endpoint(s) for Prysm beacon node(s)",
                                    "value": "value",
                                    "default": "localhost:4000"
                                },
                                {
                                    "option": "--start-slot",
                                    "description": "start slot for blocks by range request. If unset, will use start_slot(current_epoch-1)",
                                    "value": "value",
                                    "default": "0"
                                },
                                {
                                    "option": "--step",
                                    "description": "number of steps of blocks in the range request, (default 1)",
                                    "value": "value",
                                    "default": "1"
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "prysmctl p2p send blobs-by-range",
                            "description": "Request a range of blobs from a beacon node via a p2p connection",
                            "usage": "prysmctl p2p send blobs-by-range [command options] [arguments...]",
                            "options": [
                                {
                                    "option": "--chain-config-file",
                                    "description": "Path to a YAML file with chain config values.",
                                    "tags": []
                                },
                                {
                                    "option": "--client-port-tcp",
                                    "shortcut": "--client-port",
                                    "description": "TCP port to use for the client as a libp2p host",
                                    "default": "13001",
                                    "tags": []
                                },
                                {
                                    "option": "--client-port-quic",
                                    "description": "QUIC port to use for the client as a libp2p host",
                                    "default": "13001",
                                    "tags": []
                                },
                                {
                                    "option": "--count",
                                    "description": "number of blobs to request",
                                    "default": "32",
                                    "tags": []
                                },
                                {
                                    "option": "--help",
                                    "shortcut": "-h",
                                    "description": "show help",
                                    "tags": []
                                },
                                {
                                    "option": "--peer-multiaddrs",
                                    "description": "comma-separated, peer multiaddr(s) to connect to for p2p requests",
                                    "tags": []
                                },
                                {
                                    "option": "--prysm-api-endpoints",
                                    "description": "comma-separated, gRPC API endpoint(s) for Prysm beacon node(s)",
                                    "default": "localhost:4000",
                                    "tags": []
                                },
                                {
                                    "option": "--start-slot",
                                    "description": "start slot for blobs by range request. If unset, will use start_slot(current_epoch-1)",
                                    "default": "0",
                                    "tags": []
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        }
                    ]
                }
            ],
            "options": [
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                }
            ]
        },
        {
            "name": "prysmctl testnet",
            "description": "commands for dealing with Ethereum beacon chain testnets",
            "usage": "prysmctl testnet command [command options] [arguments...]",
            "subcommands": [
                {
                    "name": "prysmctl testnet generate-genesis",
                    "description": "Generate a beacon chain genesis state",
                    "usage": "prysmctl testnet generate-genesis [command options] [arguments...]",
                    "options": [
                        {
                            "option": "--chain-config-file",
                            "description": "The path to a YAML file with chain config values",
                            "value": "value"
                        },
                        {
                            "option": "--config-name",
                            "description": "Config kind to be used for generating the genesis state. Default: mainnet. Options include mainnet, interop, minimal, sepolia, holesky. --chain-config-file will override this flag.",
                            "value": "value",
                            "default": "mainnet"
                        },
                        {
                            "option": "--deposit-json-file",
                            "description": "Path to deposit_data.json file generated by the staking-deposit-cli tool for optionally specifying validators in genesis state",
                            "value": "value"
                        },
                        {
                            "option": "--execution-endpoint",
                            "description": "Endpoint to preferred execution client. If unset, defaults to Geth",
                            "value": "value",
                            "default": "http://localhost:8545"
                        },
                        {
                            "option": "--fork",
                            "description": "Name of the BeaconState schema to use in output encoding [electra,phase0,altair,bellatrix,capella,deneb]",
                            "value": "value",
                            "default": "electra"
                        },
                        {
                            "option": "--genesis-time",
                            "description": "Unix timestamp seconds used as the genesis time in the genesis state. If unset, defaults to now()",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--genesis-time-delay",
                            "description": "Delay genesis time by N seconds",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--geth-genesis-json-in",
                            "description": "Path to a \"genesis.json\" file, containing a json representation of Geth's core.Genesis",
                            "value": "value"
                        },
                        {
                            "option": "--geth-genesis-json-out",
                            "description": "Path to write generated \"genesis.json\" file, containing a json representation of Geth's core.Genesis",
                            "value": "value"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--num-validators",
                            "description": "Number of validators to deterministically generate in the genesis state",
                            "value": "value",
                            "default": 0
                        },
                        {
                            "option": "--output-json",
                            "description": "Output filename of the JSON marshaling of the generated genesis state",
                            "value": "value"
                        },
                        {
                            "option": "--output-ssz",
                            "description": "Output filename of the SSZ marshaling of the generated genesis state",
                            "value": "value"
                        },
                        {
                            "option": "--output-yaml",
                            "description": "Output filename of the YAML marshaling of the generated genesis state",
                            "value": "value"
                        },
                        {
                            "option": "--override-eth1data",
                            "description": "Overrides Eth1Data with values from execution client. If unset, defaults to false",
                            "default": false
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                }
            ]
        },
        {
            "name": "prysmctl validator",
            "description": "commands that affect the state of validators such as exiting or withdrawing",
            "usage": "prysmctl validator command [command options] [arguments...]",
            "subcommands": [
                {
                    "name": "prysmctl validator exit",
                    "description": "Performs a voluntary exit on selected accounts",
                    "usage": "prysmctl validator exit [command options] [arguments...]",
                    "options": [
                        {
                            "option": "--accept-terms-of-use",
                            "description": "Accepts Terms and Conditions (for non-interactive environments).",
                            "default": false
                        },
                        {
                            "option": "--account-password-file",
                            "description": "Path to a plain-text, .txt file containing a password for a validator account."
                        },
                        {
                            "option": "--beacon-rpc-provider",
                            "description": "Beacon node RPC provider endpoint.",
                            "default": "127.0.0.1:4000"
                        },
                        {
                            "option": "--exit-all",
                            "description": "Exits all validators. This will still require the staker to confirm a userprompt for the action.",
                            "default": false
                        },
                        {
                            "option": "--exit-json-output-dir",
                            "description": "Output directory to write voluntary exits as individual unencrypted JSON files. If this flag is provided, voluntary exits will be written to the provided directory and will not be broadcasted."
                        },
                        {
                            "option": "--force-exit",
                            "description": "Exits without displaying the confirmation prompt.",
                            "default": false
                        },
                        {
                            "option": "--grpc-headers",
                            "description": "Comma separated list of key value pairs to pass as gRPC headers for all gRPC calls. Example: --grpc-headers=key=value"
                        },
                        {
                            "option": "--grpc-max-msg-size",
                            "description": "Integer to define max receive message call size (in bytes). If serving a public gRPC server, set this to a more reasonable size to avoid resource exhaustion from large messages. Validators with as many as 10000 keys can be run with a max message size of less than 50Mb. The default here is set to a very high value for local users.",
                            "default": 2147483647
                        },
                        {
                            "option": "--grpc-retries",
                            "description": "Number of attempts to retry gRPC requests.",
                            "default": 5
                        },
                        {
                            "option": "--grpc-retry-delay",
                            "description": "Amount of time between gRPC retry requests.",
                            "default": "1s"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--holesky",
                            "description": "Runs Prysm configured for the Holesky test network.",
                            "default": false
                        },
                        {
                            "option": "--interop-num-validators",
                            "description": "Number of validators to deterministically generate. Example: --interop-start-index=5 --interop-num-validators=3 would generate keys from index 5 to 7.",
                            "default": 0
                        },
                        {
                            "option": "--interop-start-index",
                            "description": "Start index to deterministically generate validator keys when used in combination with --interop-num-validators. Example: --interop-start-index=5 --interop-num-validators=3 would generate keys from index 5 to 7.",
                            "default": 0
                        },
                        {
                            "option": "--mainnet",
                            "description": "Runs on Ethereum main network. This is the default and can be omitted.",
                            "default": true
                        },
                        {
                            "option": "--public-keys",
                            "description": "Comma separated list of public key hex strings to specify on which validator accounts to perform a voluntary exit."
                        },
                        {
                            "option": "--sepolia",
                            "description": "Runs Prysm configured for the Sepolia test network.",
                            "default": false
                        },
                        {
                            "option": "--tls-cert",
                            "description": "Certificate for secure gRPC. Pass this and the tls-key flag in order to use gRPC securely."
                        },
                        {
                            "option": "--validators-external-signer-public-keys",
                            "description": "Comma separated list of public keys OR an external url endpoint for the validator to retrieve public keys from for usage with web3signer.",
                            "tags": [
                                "--remote-signer-keys"
                            ]
                        },
                        {
                            "option": "--validators-external-signer-url",
                            "description": "URL for consensys' web3signer software to use with the Prysm validator client.",
                            "tags": [
                                "--remote-signer-url"
                            ]
                        },
                        {
                            "option": "--wallet-dir",
                            "description": "Path to a wallet directory on-disk for Prysm validator accounts.",
                            "default": "/home/ahmad/.eth2validators/prysm-wallet-v2"
                        },
                        {
                            "option": "--wallet-password-file",
                            "description": "Path to a plain-text, .txt file containing your wallet password."
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "prysmctl validator proposer-settings",
                    "description": "Display or recreate currently used proposer settings.",
                    "usage": "prysmctl validator proposer-settings [command options] [arguments...]",
                    "options": [
                        {
                            "option": "--config-file",
                            "description": "Filepath to a yaml file with flag values.",
                            "value": "value"
                        },
                        {
                            "option": "--default-fee-recipient",
                            "shortcut": "--dfr",
                            "description": "default fee recipient used for proposer-settings, only used with --output-proposer-settings-path",
                            "value": "value"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--output-proposer-settings-path",
                            "shortcut": "--settings-path",
                            "description": "path to outputting a proposer settings file ( i.e. ./path/to/proposer-settings.json), file does not include builder settings and will need to be added for advanced users using those features",
                            "value": "value"
                        },
                        {
                            "option": "--token",
                            "shortcut": "-t",
                            "description": "keymanager API bearer token, note: currently required but may be removed in the future, this is the same token as the web ui token.",
                            "value": "value"
                        },
                        {
                            "option": "--validator-host",
                            "shortcut": "--vch",
                            "description": "host:port for validator client.",
                            "value": "value",
                            "default": "\"http://127.0.0.1:7500\""
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "prysmctl validator withdraw",
                    "description": "Assign Ethereum withdrawal addresses to validator keys. WARNING: once set values are included they can no longer be updated.",
                    "usage": "prysmctl validator withdraw [command options] [arguments...]",
                    "options": [
                        {
                            "option": "--accept-terms-of-use",
                            "description": "Accepts Terms and Conditions (for non-interactive environments).",
                            "default": false
                        },
                        {
                            "option": "--beacon-node-host",
                            "description": "host:port for beacon node to query",
                            "value": "value",
                            "default": "127.0.0.1:3500"
                        },
                        {
                            "option": "--config-file",
                            "description": "Filepath to a yaml file with flag values.",
                            "value": "value"
                        },
                        {
                            "option": "--confirm",
                            "shortcut": "-c",
                            "description": "WARNING: User confirms and accepts responsibility of all input data provided and actions for setting their withdrawal address for their validator key. This action is not reversible and withdrawal addresses can not be changed once set.",
                            "default": false
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--path",
                            "shortcut": "-p",
                            "description": "path to the signed withdrawal messages JSON",
                            "value": "value"
                        },
                        {
                            "option": "--verify-only",
                            "shortcut": "--vo",
                            "description": "overrides withdrawal command to only verify whether requests are in the pool and does not submit withdrawal requests",
                            "default": false
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                }
            ]
        },
        {
            "name": "prysmctl weak-subjectivity",
            "description": "commands dealing with weak subjectivity",
            "usage": "prysmctl weak-subjectivity command [command options] [arguments...]",
            "subcommands": [
                {
                    "name": "prysmctl weak-subjectivity checkpoint",
                    "description": "Compute the latest weak subjectivity checkpoint (block_root:epoch) using trusted server data.",
                    "usage": "prysmctl weak-subjectivity checkpoint [command options] [arguments...]",
                    "options": [
                        {
                            "option": "--beacon-node-host",
                            "description": "host:port for beacon node to query",
                            "value": "value",
                            "default": "http://localhost:3500"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "show help"
                        },
                        {
                            "option": "--http-timeout",
                            "description": "timeout for http requests made to beacon-node-url (uses duration format, ex: 2m31s). default: 2m",
                            "value": "value",
                            "default": "2m0s"
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "show help"
                }
            ]
        }
    ],
    "options": [
        {
            "option": "--help",
            "shortcut": "-h",
            "description": "show help"
        }
    ],
    "version": null
}