{
    "name": "reth",
    "description": "Reth CLI application",
    "usage": "reth [OPTIONS] <COMMAND>",
    "subcommands": [
        {
            "name": "reth config",
            "description": "Write config to stdout",
            "usage": "Usage: reth config [OPTIONS]",
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file.",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "mainnet"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--config",
                    "description": "The path to the configuration file to use.",
                    "value": "<FILE>"
                },
                {
                    "option": "--default",
                    "description": "Show the default config"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "shortcut": "-q",
                    "option": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "shortcut": "-h",
                    "option": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "shortcut": "-v",
                    "option": "--verbosity",
                    "description": "Set the minimum log level."
                }
            ],
            "subcommands": []
        },
        {
            "name": "reth db",
            "description": "Database debugging utilities",
            "usage": "Usage: reth db [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "reth db checksum",
                    "description": "Calculates the content checksum of a table",
                    "usage": "Usage: reth db checksum [OPTIONS] <TABLE>",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "value": "<COLOR>"
                        },
                        {
                            "option": "--end-key",
                            "description": "The end of the range to checksum",
                            "value": "<END_KEY>"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "default": "1",
                            "value": "<INSTANCE>"
                        },
                        {
                            "option": "--limit",
                            "description": "The maximum number of records that are queried and used to compute the checksum",
                            "value": "<LIMIT>"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug",
                            "value": "<FILTER>"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "default": "terminal",
                            "value": "<FORMAT>",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5",
                            "value": "<COUNT>"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200",
                            "value": "<SIZE>"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "default": "error",
                            "value": "<FILTER>"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "default": "",
                            "value": "<FILTER>"
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "default": "terminal",
                            "value": "<FORMAT>",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--start-key",
                            "description": "The start of the range to checksum",
                            "value": "<START_KEY>"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "-v: Errors",
                                "-vv: Warnings",
                                "-vvv: Info",
                                "-vvvv: Debug",
                                "-vvvvv: Traces (warning: very verbose!)"
                            ]
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth db clear",
                    "description": "Deletes all table entries",
                    "usage": "Usage: reth db clear [OPTIONS] <COMMAND>",
                    "subcommands": [
                        {
                            "name": "reth db clear mdbx",
                            "description": "Deletes all database table entries",
                            "usage": "Usage: reth db clear mdbx [OPTIONS] <TABLE>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "Errors",
                                        "Warnings",
                                        "Info",
                                        "Debug",
                                        "Traces"
                                    ]
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "reth db clear static-file",
                            "description": "Deletes all static file segment entries",
                            "usage": "Usage: reth db clear static-file [OPTIONS] <SEGMENT>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always"
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal"
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal"
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity...",
                                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "Errors",
                                "Warnings",
                                "Info",
                                "Debug",
                                "Traces"
                            ]
                        }
                    ]
                },
                {
                    "name": "reth db diff",
                    "description": "Create a diff between two database tables or two entire databases",
                    "usage": "reth db diff [OPTIONS] --secondary-datadir <SECONDARY_DATADIR> --output <OUTPUT>",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "value": "<COLOR>",
                            "tags": [
                                "always: Colors on",
                                "auto: Colors on",
                                "never: Colors off"
                            ]
                        },
                        {
                            "option": "--db.exclusive",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "value": "<EXCLUSIVE>",
                            "tags": [
                                "true",
                                "false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "description": "Database growth step (e.g., 4GB, 4KB)",
                            "value": "<GROWTH_STEP>"
                        },
                        {
                            "option": "--db.log-level",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                            "value": "<LOG_LEVEL>",
                            "tags": [
                                "fatal: Enables logging for critical conditions, i.e. assertion failures",
                                "error: Enables logging for error conditions",
                                "warn: Enables logging for warning conditions",
                                "notice: Enables logging for normal but significant condition",
                                "verbose: Enables logging for verbose informational",
                                "debug: Enables logging for debug-level messages",
                                "trace: Enables logging for trace debug-level messages",
                                "extra: Enables logging for extra debug-level messages"
                            ]
                        },
                        {
                            "option": "--db.max-size",
                            "description": "Maximum database size (e.g., 4TB, 8MB)",
                            "value": "<MAX_SIZE>"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "description": "Read transaction timeout in seconds, 0 means no timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                "terminal: Represents terminal-friendly formatting for logs"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                "terminal: Represents terminal-friendly formatting for logs"
                            ]
                        },
                        {
                            "option": "--output",
                            "description": "The output directory for the diff report.",
                            "value": "<OUTPUT>"
                        },
                        {
                            "option": "--secondary-datadir",
                            "description": "The path to the data dir for all reth files and subdirectories.",
                            "value": "<SECONDARY_DATADIR>"
                        },
                        {
                            "option": "--table",
                            "description": "The table name to diff. If not specified, all tables are diffed.",
                            "value": "<TABLE>"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity...",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "-v Errors",
                                "-vv Warnings",
                                "-vvv Info",
                                "-vvvv Debug",
                                "-vvvvv Traces (warning: very verbose!)"
                            ]
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth db drop",
                    "description": "Deletes all database entries",
                    "usage": "reth db drop [OPTIONS]",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always",
                            "tags": [
                                "always: Colors on",
                                "auto: Colors on",
                                "never: Colors off"
                            ]
                        },
                        {
                            "option": "--instance",
                            "shortcut": "-f",
                            "description": "Bypasses the interactive confirmation and drops the database directly"
                        },
                        {
                            "option": "--instance",
                            "value": "<INSTANCE>",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "value": "<PATH>",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to the log file",
                            "default": "terminal",
                            "tags": [
                                "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                "terminal: Represents terminal-friendly formatting for logs"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "value": "<COUNT>",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "value": "<SIZE>",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to journald",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to stdout",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to stdout",
                            "default": "terminal",
                            "tags": [
                                "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                "terminal: Represents terminal-friendly formatting for logs"
                            ]
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth db get",
                    "description": "Gets the content of a table for the given key",
                    "usage": "Usage: reth db get [OPTIONS] <COMMAND>",
                    "subcommands": [
                        {
                            "name": "reth db get mdbx",
                            "description": "Gets the content of a database table for the given key",
                            "usage": "Usage: reth db get mdbx [OPTIONS] <TABLE> <KEY> [SUBKEY]",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": 1
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": 5
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": 200
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--raw",
                                    "description": "Output bytes instead of human-readable decoded value"
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity...",
                                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "reth db get static-file",
                            "description": "Gets the content of a static file segment for the given key",
                            "usage": "Usage: reth db get static-file [OPTIONS] <SEGMENT> <KEY>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always",
                                    "tags": [
                                        "Possible values: always: Colors on, auto: Colors on, never: Colors off"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "Possible values: json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging, log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications, terminal: Represents terminal-friendly formatting for logs"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "Possible values: json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging, log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications, terminal: Represents terminal-friendly formatting for logs"
                                    ]
                                },
                                {
                                    "option": "--raw",
                                    "description": "Output bytes instead of human-readable decoded value"
                                },
                                {
                                    "option": "--help",
                                    "shortcut": "-h",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "--quiet",
                                    "shortcut": "-q",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "--verbosity",
                                    "shortcut": "-v",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "-v Errors",
                                        "-vv Warnings",
                                        "-vvv Info",
                                        "-vvvv Debug",
                                        "-vvvvv Traces (warning: very verbose!)"
                                    ]
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "tags": [
                                "always",
                                "auto",
                                "never"
                            ]
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "INSTANCE",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "PATH",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "FILTER",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "FORMAT",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "COUNT",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "SIZE",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "FILTER",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "FILTER",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "FORMAT",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        }
                    ]
                },
                {
                    "name": "reth db list",
                    "description": "Lists the contents of a table",
                    "usage": "Usage: reth db list [OPTIONS] <TABLE>",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always",
                            "tags": [
                                "always",
                                "auto",
                                "never"
                            ]
                        },
                        {
                            "option": "--instance",
                            "shortcut": "-i",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--min-key-size",
                            "description": "Minimum size of key in bytes",
                            "value": "<MIN_KEY_SIZE>",
                            "default": "0"
                        },
                        {
                            "option": "--min-row-size",
                            "description": "Minimum size of row in bytes",
                            "value": "<MIN_ROW_SIZE>",
                            "default": "0"
                        },
                        {
                            "option": "--min-value-size",
                            "description": "Minimum size of value in bytes",
                            "value": "<MIN_VALUE_SIZE>",
                            "default": "0"
                        },
                        {
                            "option": "--raw",
                            "description": "Output bytes instead of human-readable decoded value"
                        },
                        {
                            "option": "--search",
                            "description": "Search parameter for both keys and values. Prefix it with `0x` to search for binary data, and text otherwise. ATTENTION! For compressed tables (`Transactions` and `Receipts`), there might be missing results since the search uses the raw uncompressed value from the database.",
                            "value": "<SEARCH>"
                        },
                        {
                            "option": "-c",
                            "shortcut": "--count",
                            "description": "Returns the number of rows found"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-j",
                            "shortcut": "--json",
                            "description": "Dump as JSON instead of using TUI"
                        },
                        {
                            "option": "-l",
                            "shortcut": "--len",
                            "description": "How many items to take from the walker",
                            "value": "<LEN>",
                            "default": "5"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-r",
                            "shortcut": "--reverse",
                            "description": "Reverse the order of the entries. If enabled last table entries are read"
                        },
                        {
                            "option": "-s",
                            "shortcut": "--skip",
                            "description": "Skip first N entries",
                            "value": "<SKIP>",
                            "default": "0"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "-v",
                                "-vv",
                                "-vvv",
                                "-vvvv",
                                "-vvvvv"
                            ]
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth db path",
                    "description": "Returns the full database path",
                    "usage": "Usage: reth db path [OPTIONS]",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "shortcut": "-h",
                            "option": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "shortcut": "-q",
                            "option": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "shortcut": "-v",
                            "option": "--verbosity",
                            "description": "Set the minimum log level. -v      Errors -vv     Warnings -vvv    Info -vvvv   Debug -vvvvv  Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth db stats",
                    "description": "Lists all the tables, their entry count and their size",
                    "usage": "Usage: reth db stats [OPTIONS]",
                    "options": [
                        {
                            "option": "--checksum",
                            "description": "Show a checksum of each table in the database.\n\nWARNING: this option will take a long time to run, as it needs to traverse and hash the entire database.\n\nFor individual table checksums, use the `reth db checksum` command."
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "value": "<COLOR>",
                            "tags": [
                                "always",
                                "auto",
                                "never"
                            ]
                        },
                        {
                            "option": "--detailed-segments",
                            "description": "Show detailed information per static file segment"
                        },
                        {
                            "option": "--detailed-sizes",
                            "description": "Show only the total size for static files"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node.\n\nConfigures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.\n\nMax number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.\n\nChanges to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "Errors",
                                "Warnings",
                                "Info",
                                "Debug",
                                "Traces"
                            ]
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth db version",
                    "description": "Lists current and local database versions",
                    "usage": "Usage: reth db version [OPTIONS]",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "mainnet"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--config",
                    "description": "The path to the configuration file to use",
                    "value": "<FILE>"
                },
                {
                    "option": "--datadir",
                    "description": "The path to the data dir for all reth files and subdirectories.",
                    "value": "<DATA_DIR>",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "description": "The absolute path to store static files in.",
                    "value": "<PATH>"
                },
                {
                    "option": "--db.exclusive",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "value": "<EXCLUSIVE>"
                },
                {
                    "option": "--db.growth-step",
                    "description": "Database growth step (e.g., 4GB, 4KB)",
                    "value": "<GROWTH_STEP>"
                },
                {
                    "option": "--db.log-level",
                    "description": "Database logging level. Levels higher than 'notice' require a debug build",
                    "value": "<LOG_LEVEL>"
                },
                {
                    "option": "--db.max-size",
                    "description": "Maximum database size (e.g., 4TB, 8MB)",
                    "value": "<MAX_SIZE>"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "description": "Read transaction timeout in seconds, 0 means no timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level."
                }
            ]
        },
        {
            "name": "reth debug",
            "description": "Various debug routines",
            "usage": "Usage: reth debug [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "reth debug build-block",
                    "description": "Debug block building",
                    "usage": "reth debug build-block [OPTIONS] --prev-randao <PREV_RANDAO> --timestamp <TIMESTAMP> --suggested-fee-recipient <SUGGESTED_FEE_RECIPIENT>",
                    "options": [
                        {
                            "option": "--blobs-bundle-path",
                            "value": "<BLOBS_BUNDLE_PATH>",
                            "description": "Path to the file that contains a corresponding blobs bundle"
                        },
                        {
                            "option": "--chain",
                            "value": "<CHAIN_OR_PATH>",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                            "default": "mainnet"
                        },
                        {
                            "option": "--color",
                            "value": "<COLOR>",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "tags": [
                                "always",
                                "auto",
                                "never"
                            ]
                        },
                        {
                            "option": "--config",
                            "value": "<FILE>",
                            "description": "The path to the configuration file to use"
                        },
                        {
                            "option": "--datadir",
                            "value": "<DATA_DIR>",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: Linux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/, Windows: {FOLDERID_RoamingAppData}/reth/, macOS: $HOME/Library/Application Support/reth/",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "value": "<PATH>",
                            "description": "The absolute path to store static files in."
                        },
                        {
                            "option": "--db.exclusive",
                            "value": "<EXCLUSIVE>",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "tags": [
                                "true",
                                "false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "value": "<GROWTH_STEP>",
                            "description": "Database growth step (e.g., 4GB, 4KB)"
                        },
                        {
                            "option": "--db.log-level",
                            "value": "<LOG_LEVEL>",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                            "tags": [
                                "fatal",
                                "error",
                                "warn",
                                "notice",
                                "verbose",
                                "debug",
                                "trace",
                                "extra"
                            ]
                        },
                        {
                            "option": "--db.max-size",
                            "value": "<MAX_SIZE>",
                            "description": "Maximum database size (e.g., 4TB, 8MB)"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>",
                            "description": "Read transaction timeout in seconds, 0 means no timeout"
                        },
                        {
                            "option": "--instance",
                            "value": "<INSTANCE>",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "value": "<PATH>",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to the log file",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "value": "<COUNT>",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "value": "<SIZE>",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to journald",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to stdout",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to stdout",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--parent-beacon-block-root",
                            "value": "<PARENT_BEACON_BLOCK_ROOT>"
                        },
                        {
                            "option": "--prev-randao",
                            "value": "<PREV_RANDAO>"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "--suggested-fee-recipient",
                            "value": "<SUGGESTED_FEE_RECIPIENT>"
                        },
                        {
                            "option": "--timestamp",
                            "value": "<TIMESTAMP>"
                        },
                        {
                            "option": "--transactions",
                            "value": "<TRANSACTIONS>",
                            "description": "Array of transactions. NOTE: 4844 transactions must be provided in the same order as they appear in the blobs bundle"
                        },
                        {
                            "option": "--trusted-setup-file",
                            "value": "<PATH>",
                            "description": "Overrides the KZG trusted setup by reading from the supplied file"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "description": "Debug the roundtrip execution of blocks as well as the generated data",
                    "name": "reth debug execution",
                    "subcommands": [],
                    "options": [
                        {
                            "option": "--addr",
                            "description": "Network listening address",
                            "default": "0.0.0.0",
                            "tags": []
                        },
                        {
                            "option": "--bootnodes",
                            "description": "Comma separated enode URLs for P2P discovery bootstrap. Will fall back to a network-specific default if not specified.",
                            "tags": []
                        },
                        {
                            "option": "--chain",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                            "value": "<CHAIN_OR_PATH>",
                            "default": "mainnet",
                            "tags": []
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always",
                            "tags": [
                                "always: Colors on",
                                "auto: Colors on",
                                "never: Colors off"
                            ]
                        },
                        {
                            "option": "--config",
                            "description": "The path to the configuration file to use",
                            "value": "<FILE>",
                            "tags": []
                        },
                        {
                            "option": "--datadir",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                            "value": "<DATA_DIR>",
                            "default": "default",
                            "tags": []
                        },
                        {
                            "option": "--datadir.static-files",
                            "description": "The absolute path to store static files in.",
                            "value": "<PATH>",
                            "tags": []
                        },
                        {
                            "option": "--db.exclusive",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "value": "<EXCLUSIVE>",
                            "tags": [
                                "possible values: true, false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "description": "Database growth step (e.g., 4GB, 4KB)",
                            "value": "<GROWTH_STEP>",
                            "tags": []
                        },
                        {
                            "option": "--db.log-level",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                            "value": "<LOG_LEVEL>",
                            "tags": [
                                "fatal: Enables logging for critical conditions, i.e. assertion failures",
                                "error: Enables logging for error conditions",
                                "warn: Enables logging for warning conditions",
                                "notice: Enables logging for normal but significant condition",
                                "verbose: Enables logging for verbose informational",
                                "debug: Enables logging for debug-level messages",
                                "trace: Enables logging for trace debug-level messages",
                                "extra: Enables logging for extra debug-level messages"
                            ]
                        },
                        {
                            "option": "--db.max-size",
                            "description": "Maximum database size (e.g., 4TB, 8MB)",
                            "value": "<MAX_SIZE>",
                            "tags": []
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "description": "Read transaction timeout in seconds, 0 means no timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>",
                            "tags": []
                        },
                        {
                            "option": "--discovery.addr",
                            "description": "The UDP address to use for devp2p peer discovery version 4",
                            "value": "<DISCOVERY_ADDR>",
                            "default": "0.0.0.0",
                            "tags": []
                        },
                        {
                            "option": "--discovery.port",
                            "description": "The UDP port to use for devp2p peer discovery version 4",
                            "value": "<DISCOVERY_PORT>",
                            "default": "30303",
                            "tags": []
                        },
                        {
                            "option": "--discovery.v5.addr",
                            "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4",
                            "value": "<DISCOVERY_V5_ADDR>",
                            "tags": []
                        },
                        {
                            "option": "--discovery.v5.addr.ipv6",
                            "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6",
                            "value": "<DISCOVERY_V5_ADDR_IPV6>",
                            "tags": []
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-countdown",
                            "description": "The number of times to carry out boost lookup queries at bootstrap",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN>",
                            "default": "100",
                            "tags": []
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-interval",
                            "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL>",
                            "default": "5",
                            "tags": []
                        },
                        {
                            "option": "--discovery.v5.lookup-interval",
                            "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                            "value": "<DISCOVERY_V5_LOOKUP_INTERVAL>",
                            "default": "60",
                            "tags": []
                        },
                        {
                            "option": "--discovery.v5.port",
                            "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                            "value": "<DISCOVERY_V5_PORT>",
                            "default": "9200",
                            "tags": []
                        },
                        {
                            "option": "--discovery.v5.port.ipv6",
                            "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                            "value": "<DISCOVERY_V5_PORT_IPV6>",
                            "default": "9200",
                            "tags": []
                        },
                        {
                            "option": "--disable-discv4-discovery",
                            "description": "Disable Discv4 discovery",
                            "tags": []
                        },
                        {
                            "option": "--disable-discovery",
                            "shortcut": "-d",
                            "description": "Disable the discovery service",
                            "tags": []
                        },
                        {
                            "option": "--disable-dns-discovery",
                            "description": "Disable the DNS discovery",
                            "tags": []
                        },
                        {
                            "option": "--disable-nat",
                            "description": "Disable Nat discovery",
                            "tags": []
                        },
                        {
                            "option": "--dns-retries",
                            "description": "Amount of DNS resolution requests retries to perform when peering",
                            "value": "<DNS_RETRIES>",
                            "default": "0",
                            "tags": []
                        },
                        {
                            "option": "--enable-discv5-discovery",
                            "description": "Enable Discv5 discovery",
                            "tags": []
                        },
                        {
                            "option": "--identity",
                            "description": "Custom node identity",
                            "value": "<IDENTITY>",
                            "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu",
                            "tags": []
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1",
                            "tags": []
                        },
                        {
                            "option": "--interval",
                            "description": "The block interval for sync and unwind. Defaults to `1000`",
                            "value": "<INTERVAL>",
                            "default": "1000",
                            "tags": []
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs",
                            "tags": []
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug",
                            "tags": []
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                "terminal: Represents terminal-friendly formatting for logs"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5",
                            "tags": []
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200",
                            "tags": []
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald",
                            "tags": []
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error",
                            "tags": []
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": "",
                            "tags": []
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                "terminal: Represents terminal-friendly formatting for logs"
                            ]
                        },
                        {
                            "option": "--max-inbound-peers",
                            "description": "Maximum number of inbound requests. default: 30",
                            "value": "<MAX_INBOUND_PEERS>",
                            "tags": []
                        },
                        {
                            "option": "--max-outbound-peers",
                            "description": "Maximum number of outbound requests. default: 100",
                            "value": "<MAX_OUTBOUND_PEERS>",
                            "tags": []
                        },
                        {
                            "option": "--max-pending-imports",
                            "description": "Max number of transactions to import concurrently.",
                            "value": "<COUNT>",
                            "default": "4096",
                            "tags": []
                        },
                        {
                            "option": "--max-seen-tx-history",
                            "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                            "value": "<COUNT>",
                            "default": "320",
                            "tags": []
                        },
                        {
                            "option": "--max-tx-pending-fetch",
                            "description": "Max capacity of cache of hashes for transactions pending fetch.",
                            "value": "<COUNT>",
                            "default": "25600",
                            "tags": []
                        },
                        {
                            "option": "--max-tx-reqs",
                            "description": "Max concurrent `GetPooledTransactions` requests.",
                            "value": "<COUNT>",
                            "default": "130",
                            "tags": []
                        },
                        {
                            "option": "--max-tx-reqs-peer",
                            "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                            "value": "<COUNT>",
                            "default": "1",
                            "tags": []
                        },
                        {
                            "option": "--nat",
                            "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                            "value": "<NAT>",
                            "default": "any",
                            "tags": []
                        },
                        {
                            "option": "--net-if.experimental",
                            "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried.",
                            "value": "<IF_NAME>",
                            "tags": []
                        },
                        {
                            "option": "--no-persist-peers",
                            "description": "Do not persist peers.",
                            "tags": []
                        },
                        {
                            "option": "--p2p-secret-key",
                            "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.",
                            "value": "<PATH>",
                            "tags": []
                        },
                        {
                            "option": "--peers-file",
                            "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with `--no-persist-peers`.",
                            "value": "<FILE>",
                            "tags": []
                        },
                        {
                            "option": "--pooled-tx-pack-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see `RLPx` specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB. Default is 128 KiB.",
                            "value": "<BYTES>",
                            "default": "131072",
                            "tags": []
                        },
                        {
                            "option": "--pooled-tx-response-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                            "value": "<BYTES>",
                            "default": "2097152",
                            "tags": []
                        },
                        {
                            "option": "--port",
                            "description": "Network listening port",
                            "value": "<PORT>",
                            "default": "30303",
                            "tags": []
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Silence all log output",
                            "tags": []
                        },
                        {
                            "option": "--to",
                            "description": "The maximum block height",
                            "value": "<TO>",
                            "tags": []
                        },
                        {
                            "option": "--trusted-only",
                            "description": "Connect to or accept from trusted peers only",
                            "tags": []
                        },
                        {
                            "option": "--trusted-peers",
                            "description": "Comma separated enode URLs of trusted peers for P2P connections. --trusted-peers enode://abcd@192.168.0.1:30303",
                            "value": "<TRUSTED_PEERS>",
                            "tags": []
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)",
                            "tags": []
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')",
                            "tags": []
                        }
                    ],
                    "usage": "Usage: reth debug execution [OPTIONS] --to <TO>"
                },
                {
                    "name": "reth debug in-memory-merkle",
                    "description": "Debug in-memory state root calculation",
                    "usage": "Usage: reth debug in-memory-merkle [OPTIONS]",
                    "options": [
                        {
                            "option": "--addr",
                            "description": "Network listening address",
                            "value": "<ADDR>",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--bootnodes",
                            "description": "Comma separated enode URLs for P2P discovery bootstrap.\n\nWill fall back to a network-specific default if not specified.",
                            "value": "<BOOTNODES>"
                        },
                        {
                            "option": "--chain",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file.\n\nBuilt-in chains:\n    mainnet, sepolia, holesky, dev",
                            "value": "<CHAIN_OR_PATH>",
                            "default": "mainnet"
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\nPossible values:\n- always: Colors on\n- auto: Colors on\n- never: Colors off",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--config",
                            "description": "The path to the configuration file to use",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--datadir",
                            "description": "The path to the data dir for all reth files and subdirectories.\nDefaults to the OS-specific data directory:\n\n- Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n- Windows: `{FOLDERID_RoamingAppData}/reth/`\n- macOS: `$HOME/Library/Application Support/reth/`",
                            "value": "<DATA_DIR>",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "description": "The absolute path to store static files in.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--db.exclusive",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "value": "<EXCLUSIVE>",
                            "tags": [
                                "possible values: true, false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "description": "Database growth step (e.g., 4GB, 4KB)",
                            "value": "<GROWTH_STEP>"
                        },
                        {
                            "option": "--db.log-level",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build\n\nPossible values:\n- fatal:   Enables logging for critical conditions, i.e. assertion failures\n- error:   Enables logging for error conditions\n- warn:    Enables logging for warning conditions\n- notice:  Enables logging for normal but significant condition\n- verbose: Enables logging for verbose informational\n- debug:   Enables logging for debug-level messages\n- trace:   Enables logging for trace debug-level messages\n- extra:   Enables logging for extra debug-level messages",
                            "value": "<LOG_LEVEL>"
                        },
                        {
                            "option": "--db.max-size",
                            "description": "Maximum database size (e.g., 4TB, 8MB)",
                            "value": "<MAX_SIZE>"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "description": "Read transaction timeout in seconds, 0 means no timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>"
                        },
                        {
                            "option": "--disable-discv4-discovery",
                            "description": "Disable Discv4 discovery"
                        },
                        {
                            "option": "--disable-discovery",
                            "shortcut": "-d",
                            "description": "Disable the discovery service"
                        },
                        {
                            "option": "--disable-dns-discovery",
                            "description": "Disable the DNS discovery"
                        },
                        {
                            "option": "--disable-nat",
                            "description": "Disable Nat discovery"
                        },
                        {
                            "option": "--discovery.addr",
                            "description": "The UDP address to use for devp2p peer discovery version 4",
                            "value": "<DISCOVERY_ADDR>",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--discovery.port",
                            "description": "The UDP port to use for devp2p peer discovery version 4",
                            "value": "<DISCOVERY_PORT>",
                            "default": "30303"
                        },
                        {
                            "option": "--discovery.v5.addr",
                            "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4",
                            "value": "<DISCOVERY_V5_ADDR>"
                        },
                        {
                            "option": "--discovery.v5.addr.ipv6",
                            "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6",
                            "value": "<DISCOVERY_V5_ADDR_IPV6>"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-countdown",
                            "description": "The number of times to carry out boost lookup queries at bootstrap",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN>",
                            "default": "100"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-interval",
                            "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL>",
                            "default": "5"
                        },
                        {
                            "option": "--discovery.v5.lookup-interval",
                            "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                            "value": "<DISCOVERY_V5_LOOKUP_INTERVAL>",
                            "default": "60"
                        },
                        {
                            "option": "--discovery.v5.port",
                            "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                            "value": "<DISCOVERY_V5_PORT>",
                            "default": "9200"
                        },
                        {
                            "option": "--discovery.v5.port.ipv6",
                            "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                            "value": "<DISCOVERY_V5_PORT_IPV6>",
                            "default": "9200"
                        },
                        {
                            "option": "--dns-retries",
                            "description": "Amount of DNS resolution requests retries to perform when peering",
                            "value": "<DNS_RETRIES>",
                            "default": "0"
                        },
                        {
                            "option": "--enable-discv5-discovery",
                            "description": "Enable Discv5 discovery"
                        },
                        {
                            "option": "--identity",
                            "description": "Custom node identity",
                            "value": "<IDENTITY>",
                            "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node.\n\nConfigures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.\n\nMax number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.\n\nChanges to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file\n\nPossible values:\n- json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n- log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n- terminal: Represents terminal-friendly formatting for logs",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout\n\nPossible values:\n- json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n- log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n- terminal: Represents terminal-friendly formatting for logs",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--max-inbound-peers",
                            "description": "Maximum number of inbound requests. default: 30",
                            "value": "<MAX_INBOUND_PEERS>"
                        },
                        {
                            "option": "--max-outbound-peers",
                            "description": "Maximum number of outbound requests. default: 100",
                            "value": "<MAX_OUTBOUND_PEERS>"
                        },
                        {
                            "option": "--max-pending-imports",
                            "description": "Max number of transactions to import concurrently.",
                            "value": "<COUNT>",
                            "default": "4096"
                        },
                        {
                            "option": "--max-seen-tx-history",
                            "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                            "value": "<COUNT>",
                            "default": "320"
                        },
                        {
                            "option": "--max-tx-pending-fetch",
                            "description": "Max capacity of cache of hashes for transactions pending fetch.",
                            "value": "<COUNT>",
                            "default": "25600"
                        },
                        {
                            "option": "--max-tx-reqs",
                            "description": "Max concurrent `GetPooledTransactions` requests.",
                            "value": "<COUNT>",
                            "default": "130"
                        },
                        {
                            "option": "--max-tx-reqs-peer",
                            "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                            "value": "<COUNT>",
                            "default": "1"
                        },
                        {
                            "option": "--nat",
                            "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                            "value": "<NAT>",
                            "default": "any"
                        },
                        {
                            "option": "--net-if.experimental",
                            "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried.",
                            "value": "<IF_NAME>"
                        },
                        {
                            "option": "--no-persist-peers",
                            "description": "Do not persist peers."
                        },
                        {
                            "option": "--p2p-secret-key",
                            "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--peers-file",
                            "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with `--no-persist-peers`.",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--pooled-tx-pack-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see `RLPx` specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB.",
                            "value": "<BYTES>",
                            "default": "131072"
                        },
                        {
                            "option": "--pooled-tx-response-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                            "value": "<BYTES>",
                            "default": "2097152"
                        },
                        {
                            "option": "--port",
                            "description": "Network listening port",
                            "value": "<PORT>",
                            "default": "30303"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "--retries",
                            "description": "The number of retries per request",
                            "value": "<RETRIES>",
                            "default": "5"
                        },
                        {
                            "option": "--skip-node-depth",
                            "description": "The depth after which we should start comparing branch nodes",
                            "value": "<SKIP_NODE_DEPTH>"
                        },
                        {
                            "option": "--trusted-only",
                            "description": "Connect to or accept from trusted peers only"
                        },
                        {
                            "option": "--trusted-peers",
                            "description": "Comma separated enode URLs of trusted peers for P2P connections.\n\n--trusted-peers enode://abcd@192.168.0.1:30303",
                            "value": "<TRUSTED_PEERS>"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Set the minimum log level.\n\n-v      Errors\n-vv     Warnings\n-vvv    Info\n-vvvv   Debug\n-vvvvv  Traces (warning: very verbose!)"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth debug merkle",
                    "description": "Debug the clean & incremental state root calculations",
                    "usage": "Usage: reth debug merkle [OPTIONS] --to <TO>",
                    "subcommands": [
                        {
                            "name": "reth debug merkle debug",
                            "subcommands": [],
                            "options": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--addr",
                            "description": "Network listening address",
                            "value": "<ADDR>",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--bootnodes",
                            "description": "Comma separated enode URLs for P2P discovery bootstrap. Will fall back to a network-specific default if not specified.",
                            "value": "<BOOTNODES>"
                        },
                        {
                            "option": "--chain",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                            "value": "<CHAIN_OR_PATH>",
                            "default": "mainnet"
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always",
                            "tags": [
                                "always",
                                "auto",
                                "never"
                            ]
                        },
                        {
                            "option": "--config",
                            "description": "The path to the configuration file to use",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--datadir",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                            "value": "<DATA_DIR>",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "description": "The absolute path to store static files in.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--db.exclusive",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "value": "<EXCLUSIVE>",
                            "tags": [
                                "true",
                                "false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "description": "Database growth step (e.g., 4GB, 4KB)",
                            "value": "<GROWTH_STEP>"
                        },
                        {
                            "option": "--db.log-level",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build. Possible values: - fatal: Enables logging for critical conditions, i.e. assertion failures - error: Enables logging for error conditions - warn: Enables logging for warning conditions - notice: Enables logging for normal but significant condition - verbose: Enables logging for verbose informational - debug: Enables logging for debug-level messages - trace: Enables logging for trace debug-level messages - extra: Enables logging for extra debug-level messages",
                            "value": "<LOG_LEVEL>"
                        },
                        {
                            "option": "--db.max-size",
                            "description": "Maximum database size (e.g., 4TB, 8MB)",
                            "value": "<MAX_SIZE>"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "description": "Read transaction timeout in seconds, 0 means no timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>"
                        },
                        {
                            "option": "--disable-discv4-discovery",
                            "description": "Disable Discv4 discovery"
                        },
                        {
                            "option": "--disable-discovery",
                            "shortcut": "-d",
                            "description": "Disable the discovery service"
                        },
                        {
                            "option": "--disable-dns-discovery",
                            "description": "Disable the DNS discovery"
                        },
                        {
                            "option": "--disable-nat",
                            "description": "Disable Nat discovery"
                        },
                        {
                            "option": "--discovery.addr",
                            "description": "The UDP address to use for devp2p peer discovery version 4",
                            "value": "<DISCOVERY_ADDR>",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--discovery.port",
                            "description": "The UDP port to use for devp2p peer discovery version 4",
                            "value": "<DISCOVERY_PORT>",
                            "default": "30303"
                        },
                        {
                            "option": "--discovery.v5.addr",
                            "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4",
                            "value": "<DISCOVERY_V5_ADDR>"
                        },
                        {
                            "option": "--discovery.v5.addr.ipv6",
                            "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6",
                            "value": "<DISCOVERY_V5_ADDR_IPV6>"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-countdown",
                            "description": "The number of times to carry out boost lookup queries at bootstrap",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN>",
                            "default": "100"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-interval",
                            "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL>",
                            "default": "5"
                        },
                        {
                            "option": "--discovery.v5.lookup-interval",
                            "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                            "value": "<DISCOVERY_V5_LOOKUP_INTERVAL>",
                            "default": "60"
                        },
                        {
                            "option": "--discovery.v5.port",
                            "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                            "value": "<DISCOVERY_V5_PORT>",
                            "default": "9200"
                        },
                        {
                            "option": "--discovery.v5.port.ipv6",
                            "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                            "value": "<DISCOVERY_V5_PORT_IPV6>",
                            "default": "9200"
                        },
                        {
                            "option": "--dns-retries",
                            "description": "Amount of DNS resolution requests retries to perform when peering",
                            "value": "<DNS_RETRIES>",
                            "default": "0"
                        },
                        {
                            "option": "--enable-discv5-discovery",
                            "description": "Enable Discv5 discovery"
                        },
                        {
                            "option": "--identity",
                            "description": "Custom node identity",
                            "value": "<IDENTITY>",
                            "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--max-inbound-peers",
                            "description": "Maximum number of inbound requests. default: 30",
                            "value": "<MAX_INBOUND_PEERS>"
                        },
                        {
                            "option": "--max-outbound-peers",
                            "description": "Maximum number of outbound requests. default: 100",
                            "value": "<MAX_OUTBOUND_PEERS>"
                        },
                        {
                            "option": "--max-pending-imports",
                            "description": "Max number of transactions to import concurrently.",
                            "value": "<COUNT>",
                            "default": "4096"
                        },
                        {
                            "option": "--max-seen-tx-history",
                            "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                            "value": "<COUNT>",
                            "default": "320"
                        },
                        {
                            "option": "--max-tx-pending-fetch",
                            "description": "Max capacity of cache of hashes for transactions pending fetch.",
                            "value": "<COUNT>",
                            "default": "25600"
                        },
                        {
                            "option": "--max-tx-reqs",
                            "description": "Max concurrent `GetPooledTransactions` requests.",
                            "value": "<COUNT>",
                            "default": "130"
                        },
                        {
                            "option": "--max-tx-reqs-peer",
                            "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                            "value": "<COUNT>",
                            "default": "1"
                        },
                        {
                            "option": "--nat",
                            "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                            "value": "<NAT>",
                            "default": "any"
                        },
                        {
                            "option": "--net-if.experimental",
                            "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried.",
                            "value": "<IF_NAME>"
                        },
                        {
                            "option": "--no-persist-peers",
                            "description": "Do not persist peers."
                        },
                        {
                            "option": "--p2p-secret-key",
                            "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--peers-file",
                            "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with `--no-persist-peers`.",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--pooled-tx-pack-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see `RLPx` specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB.",
                            "value": "<BYTES>",
                            "default": "131072"
                        },
                        {
                            "option": "--pooled-tx-response-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                            "value": "<BYTES>",
                            "default": "2097152"
                        },
                        {
                            "option": "--port",
                            "description": "Network listening port",
                            "value": "<PORT>",
                            "default": "30303"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "--retries",
                            "description": "The number of retries per request",
                            "value": "<RETRIES>",
                            "default": "5"
                        },
                        {
                            "option": "--skip-node-depth",
                            "description": "The depth after which we should start comparing branch nodes",
                            "value": "<SKIP_NODE_DEPTH>"
                        },
                        {
                            "option": "--to",
                            "description": "The height to finish at",
                            "value": "<TO>"
                        },
                        {
                            "option": "--trusted-only",
                            "description": "Connect to or accept from trusted peers only"
                        },
                        {
                            "option": "--trusted-peers",
                            "description": "Comma separated enode URLs of trusted peers for P2P connections. --trusted-peers enode://abcd@192.168.0.1:30303",
                            "value": "<TRUSTED_PEERS>"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        }
                    ]
                },
                {
                    "name": "reth debug replay-engine",
                    "description": "Debug engine API by replaying stored messages",
                    "usage": "Usage: reth debug replay-engine [OPTIONS] --engine-api-store <PATH>",
                    "options": [
                        {
                            "option": "--addr",
                            "description": "Network listening address",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--bootnodes",
                            "description": "Comma separated enode URLs for P2P discovery bootstrap. Will fall back to a network-specific default if not specified."
                        },
                        {
                            "option": "--chain",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                            "default": "mainnet"
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting Possible values: - always: Colors on - auto: Colors on - never: Colors off",
                            "default": "always"
                        },
                        {
                            "option": "--config",
                            "description": "The path to the configuration file to use"
                        },
                        {
                            "option": "--datadir",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "description": "The absolute path to store static files in."
                        },
                        {
                            "option": "--db.exclusive",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "value": "<EXCLUSIVE>"
                        },
                        {
                            "option": "--db.growth-step",
                            "description": "Database growth step (e.g., 4GB, 4KB)",
                            "value": "<GROWTH_STEP>"
                        },
                        {
                            "option": "--db.log-level",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build Possible values: - fatal: Enables logging for critical conditions, i.e. assertion failures - error: Enables logging for error conditions - warn: Enables logging for warning conditions - notice: Enables logging for normal but significant condition - verbose: Enables logging for verbose informational - debug: Enables logging for debug-level messages - trace: Enables logging for trace debug-level messages - extra: Enables logging for extra debug-level messages"
                        },
                        {
                            "option": "--db.max-size",
                            "description": "Maximum database size (e.g., 4TB, 8MB)",
                            "value": "<MAX_SIZE>"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "description": "Read transaction timeout in seconds, 0 means no timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>"
                        },
                        {
                            "shortcut": "-d",
                            "option": "--disable-discovery",
                            "description": "Disable the discovery service"
                        },
                        {
                            "option": "--disable-discv4-discovery",
                            "description": "Disable Discv4 discovery"
                        },
                        {
                            "option": "--disable-dns-discovery",
                            "description": "Disable the DNS discovery"
                        },
                        {
                            "option": "--disable-nat",
                            "description": "Disable Nat discovery"
                        },
                        {
                            "option": "--discovery.addr",
                            "description": "The UDP address to use for devp2p peer discovery version 4",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--discovery.port",
                            "description": "The UDP port to use for devp2p peer discovery version 4",
                            "default": "30303"
                        },
                        {
                            "option": "--discovery.v5.addr",
                            "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4"
                        },
                        {
                            "option": "--discovery.v5.addr.ipv6",
                            "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-countdown",
                            "description": "The number of times to carry out boost lookup queries at bootstrap",
                            "default": "100"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-interval",
                            "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                            "default": "5"
                        },
                        {
                            "option": "--discovery.v5.lookup-interval",
                            "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                            "default": "60"
                        },
                        {
                            "option": "--discovery.v5.port",
                            "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                            "default": "9200"
                        },
                        {
                            "option": "--discovery.v5.port.ipv6",
                            "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                            "default": "9200"
                        },
                        {
                            "option": "--dns-retries",
                            "description": "Amount of DNS resolution requests retries to perform when peering",
                            "default": "0"
                        },
                        {
                            "option": "--enable-discv5-discovery",
                            "description": "Enable Discv5 discovery"
                        },
                        {
                            "option": "--engine-api-store",
                            "description": "The path to read engine API messages from"
                        },
                        {
                            "shortcut": "-h",
                            "option": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--identity",
                            "description": "Custom node identity",
                            "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "default": "1"
                        },
                        {
                            "option": "--interval",
                            "description": "The number of milliseconds between Engine API messages",
                            "default": "1000"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file Possible values: - json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging - log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications - terminal: Represents terminal-friendly formatting for logs",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout Possible values: - json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging - log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications - terminal: Represents terminal-friendly formatting for logs",
                            "default": "terminal"
                        },
                        {
                            "option": "--max-inbound-peers",
                            "description": "Maximum number of inbound requests. default: 30"
                        },
                        {
                            "option": "--max-outbound-peers",
                            "description": "Maximum number of outbound requests. default: 100"
                        },
                        {
                            "option": "--max-pending-imports",
                            "description": "Max number of transactions to import concurrently.",
                            "default": "4096"
                        },
                        {
                            "option": "--max-seen-tx-history",
                            "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                            "default": "320"
                        },
                        {
                            "option": "--max-tx-pending-fetch",
                            "description": "Max capacity of cache of hashes for transactions pending fetch.",
                            "default": "25600"
                        },
                        {
                            "option": "--max-tx-reqs",
                            "description": "Max concurrent `GetPooledTransactions` requests.",
                            "default": "130"
                        },
                        {
                            "option": "--max-tx-reqs-peer",
                            "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                            "default": "1"
                        },
                        {
                            "option": "--nat",
                            "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                            "default": "any"
                        },
                        {
                            "option": "--net-if.experimental",
                            "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried."
                        },
                        {
                            "option": "--no-persist-peers",
                            "description": "Do not persist peers."
                        },
                        {
                            "option": "--p2p-secret-key",
                            "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used."
                        },
                        {
                            "option": "--peers-file",
                            "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with `--no-persist-peers`.",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--pooled-tx-pack-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see `RLPx` specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB. Default is 128 KiB.",
                            "default": "131072"
                        },
                        {
                            "option": "--pooled-tx-response-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                            "default": "2097152"
                        },
                        {
                            "option": "--port",
                            "description": "Network listening port",
                            "default": "30303"
                        },
                        {
                            "shortcut": "-q",
                            "option": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "--trusted-only",
                            "description": "Connect to or accept from trusted peers only"
                        },
                        {
                            "option": "--trusted-peers",
                            "description": "Comma separated enode URLs of trusted peers for P2P connections. --trusted-peers enode://abcd@192.168.0.1:30303"
                        },
                        {
                            "shortcut": "-v",
                            "option": "--verbosity",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "mainnet"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting. Possible values: always, auto, never",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. Max number of instances is 200. Changes to the following port numbers: DISCOVERY_PORT, AUTH_PORT, HTTP_RPC_PORT, WS_RPC_PORT",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file. Possible values: json, log-fmt, terminal",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout. Possible values: json, log-fmt, terminal",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity...",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                }
            ]
        },
        {
            "name": "reth dump-genesis",
            "description": "Dumps genesis block JSON configuration to stdout",
            "usage": "Usage: reth dump-genesis [OPTIONS]",
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "mainnet"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting. Possible values: always, auto, never",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. Useful for running multiple nodes on the same machine. Max number of instances is 200. Changes to port numbers: DISCOVERY_PORT, AUTH_PORT, HTTP_RPC_PORT, WS_RPC_PORT.",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file. Possible values: json, log-fmt, terminal",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout. Possible values: json, log-fmt, terminal",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level. -v: Errors, -vv: Warnings, -vvv: Info, -vvvv: Debug, -vvvvv: Traces (warning: very verbose!)"
                }
            ],
            "subcommands": []
        },
        {
            "name": "reth import",
            "description": "This syncs RLP encoded blocks from a file",
            "usage": "Usage: reth import [OPTIONS] <IMPORT_PATH>",
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "mainnet"
                },
                {
                    "option": "--chunk-len",
                    "description": "Chunk byte length to read from file.",
                    "value": "<CHUNK_LEN>"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always",
                    "tags": [
                        "always",
                        "auto",
                        "never"
                    ]
                },
                {
                    "option": "--config",
                    "description": "The path to the configuration file to use",
                    "value": "<FILE>"
                },
                {
                    "option": "--datadir",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                    "value": "<DATA_DIR>",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "description": "The absolute path to store static files in.",
                    "value": "<PATH>"
                },
                {
                    "option": "--db.exclusive",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "value": "<EXCLUSIVE>",
                    "tags": [
                        "true",
                        "false"
                    ]
                },
                {
                    "option": "--db.growth-step",
                    "description": "Database growth step (e.g., 4GB, 4KB)",
                    "value": "<GROWTH_STEP>"
                },
                {
                    "option": "--db.log-level",
                    "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                    "value": "<LOG_LEVEL>",
                    "tags": [
                        "fatal",
                        "error",
                        "warn",
                        "notice",
                        "verbose",
                        "debug",
                        "trace",
                        "extra"
                    ]
                },
                {
                    "option": "--db.max-size",
                    "description": "Maximum database size (e.g., 4TB, 8MB)",
                    "value": "<MAX_SIZE>"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "description": "Read transaction timeout in seconds, 0 means no timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file",
                    "value": "<FORMAT>",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout",
                    "value": "<FORMAT>",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--no-state",
                    "description": "Disables stages that require state."
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                }
            ],
            "subcommands": []
        },
        {
            "name": "reth init",
            "description": "Initialize the database from a genesis file",
            "usage": "reth init [OPTIONS]",
            "options": [
                {
                    "option": "--chain",
                    "value": "<CHAIN_OR_PATH>",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                    "default": "mainnet"
                },
                {
                    "option": "--color",
                    "value": "<COLOR>",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "default": "always",
                    "tags": [
                        "always",
                        "auto",
                        "never"
                    ]
                },
                {
                    "option": "--config",
                    "value": "<FILE>",
                    "description": "The path to the configuration file to use"
                },
                {
                    "option": "--datadir",
                    "value": "<DATA_DIR>",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "value": "<PATH>",
                    "description": "The absolute path to store static files in."
                },
                {
                    "option": "--db.exclusive",
                    "value": "<EXCLUSIVE>",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "tags": [
                        "true",
                        "false"
                    ]
                },
                {
                    "option": "--db.growth-step",
                    "value": "<GROWTH_STEP>",
                    "description": "Database growth step (e.g., 4GB, 4KB)"
                },
                {
                    "option": "--db.log-level",
                    "value": "<LOG_LEVEL>",
                    "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                    "tags": [
                        "fatal",
                        "error",
                        "warn",
                        "notice",
                        "verbose",
                        "debug",
                        "trace",
                        "extra"
                    ]
                },
                {
                    "option": "--db.max-size",
                    "value": "<MAX_SIZE>",
                    "description": "Maximum database size (e.g., 4TB, 8MB)"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>",
                    "description": "Read transaction timeout in seconds, 0 means no timeout"
                },
                {
                    "option": "--instance",
                    "value": "<INSTANCE>",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "value": "<PATH>",
                    "description": "The path to put log files in",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to the log file",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to the log file",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--log.file.max-files",
                    "value": "<COUNT>",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "value": "<SIZE>",
                    "description": "The maximum size (in MB) of one log file",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to journald",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to stdout",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to stdout",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity...",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                }
            ],
            "subcommands": []
        },
        {
            "name": "reth init-state",
            "description": "Initialize the database from a state dump file",
            "usage": "Usage: reth init-state [OPTIONS] <STATE_DUMP_FILE>",
            "options": [
                {
                    "option": "--chain",
                    "value": "<CHAIN_OR_PATH>",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                    "default": "mainnet"
                },
                {
                    "option": "--color",
                    "value": "<COLOR>",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "default": "always",
                    "tags": [
                        "always",
                        "auto",
                        "never"
                    ]
                },
                {
                    "option": "--config",
                    "value": "<FILE>",
                    "description": "The path to the configuration file to use"
                },
                {
                    "option": "--datadir",
                    "value": "<DATA_DIR>",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "value": "<PATH>",
                    "description": "The absolute path to store static files in."
                },
                {
                    "option": "--db.exclusive",
                    "value": "<EXCLUSIVE>",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "tags": [
                        "true",
                        "false"
                    ]
                },
                {
                    "option": "--db.growth-step",
                    "value": "<GROWTH_STEP>",
                    "description": "Database growth step (e.g., 4GB, 4KB)"
                },
                {
                    "option": "--db.log-level",
                    "value": "<LOG_LEVEL>",
                    "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                    "tags": [
                        "fatal",
                        "error",
                        "warn",
                        "notice",
                        "verbose",
                        "debug",
                        "trace",
                        "extra"
                    ]
                },
                {
                    "option": "--db.max-size",
                    "value": "<MAX_SIZE>",
                    "description": "Maximum database size (e.g., 4TB, 8MB)"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>",
                    "description": "Read transaction timeout in seconds, 0 means no timeout"
                },
                {
                    "option": "--header",
                    "value": "<HEADER_FILE>",
                    "description": "Header file containing the header in an RLP encoded format."
                },
                {
                    "option": "--header-hash",
                    "value": "<HEADER_HASH>",
                    "description": "Hash of the header."
                },
                {
                    "option": "--instance",
                    "value": "<INSTANCE>",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "value": "<PATH>",
                    "description": "The path to put log files in",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to the log file",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to the log file",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--log.file.max-files",
                    "value": "<COUNT>",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "value": "<SIZE>",
                    "description": "The maximum size (in MB) of one log file",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to journald",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to stdout",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to stdout",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--total-difficulty",
                    "value": "<TOTAL_DIFFICULTY>",
                    "description": "Total difficulty of the header."
                },
                {
                    "option": "--without-evm",
                    "description": "Specifies whether to initialize the state without relying on EVM historical data. When enabled, and before inserting the state, it creates a dummy chain up to the last EVM block specified. It then, appends the first block provided block. - **Note**: **Do not** import receipts and blocks beforehand, or this will fail or be ignored."
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                }
            ],
            "subcommands": []
        },
        {
            "description": "Start the node",
            "name": "reth node",
            "subcommands": [],
            "usage": "Usage: reth node [OPTIONS]",
            "options": [
                {
                    "option": "--addr",
                    "description": "Network listening address",
                    "value": "<ADDR>",
                    "default": "0.0.0.0"
                },
                {
                    "option": "--auth-ipc",
                    "description": "Enable auth engine API over IPC"
                },
                {
                    "option": "--auth-ipc.path",
                    "description": "Filename for auth IPC socket/pipe within the datadir",
                    "value": "<AUTH_IPC_PATH>",
                    "default": "/tmp/reth_engine_api.ipc"
                },
                {
                    "option": "--authrpc.addr",
                    "description": "Auth server address to listen on",
                    "value": "<AUTH_ADDR>",
                    "default": "127.0.0.1"
                },
                {
                    "option": "--authrpc.jwtsecret",
                    "description": "Path to a JWT secret to use for the authenticated engine-API RPC server. This will enforce JWT authentication for all requests coming from the consensus layer. If no path is provided, a secret will be generated and stored in the datadir under `<DIR>/<CHAIN_ID>/jwt.hex`. For mainnet this would be `~/.reth/mainnet/jwt.hex` by default.",
                    "value": "<PATH>"
                },
                {
                    "option": "--authrpc.port",
                    "description": "Auth server port to listen on",
                    "value": "<AUTH_PORT>",
                    "default": "8551"
                },
                {
                    "option": "--blobpool.pricebump",
                    "description": "Price bump percentage to replace an already existing blob transaction",
                    "value": "<BLOB_TRANSACTION_PRICE_BUMP>",
                    "default": "100"
                },
                {
                    "option": "--bootnodes",
                    "description": "Comma separated enode URLs for P2P discovery bootstrap. Will fall back to a network-specific default if not specified.",
                    "value": "<BOOTNODES>"
                },
                {
                    "option": "--builder.deadline",
                    "description": "The deadline for when the payload builder job should resolve",
                    "value": "<SECONDS>",
                    "default": "12"
                },
                {
                    "option": "--builder.disallow",
                    "description": "Path to file containing disallowed addresses, json-encoded list of strings. Block validation API will reject blocks containing transactions from these addresses",
                    "value": "<PATH>"
                },
                {
                    "option": "--builder.extradata",
                    "description": "Block extra data set by the payload builder",
                    "value": "<EXTRADATA>",
                    "default": "reth/v1.1.2/linux"
                },
                {
                    "option": "--builder.gaslimit",
                    "description": "Target gas ceiling for built blocks",
                    "value": "<GAS_LIMIT>",
                    "default": "30000000"
                },
                {
                    "option": "--builder.interval",
                    "description": "The interval at which the job should build a new payload after the last. Interval is specified in seconds or in milliseconds if the value ends with `ms`: * `50ms` -> 50 milliseconds * `1` -> 1 second",
                    "value": "<DURATION>",
                    "default": "1"
                },
                {
                    "option": "--builder.max-tasks",
                    "description": "Maximum number of tasks to spawn for building a payload",
                    "value": "<MAX_PAYLOAD_TASKS>",
                    "default": "3"
                },
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file.",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "mainnet",
                    "tags": [
                        "mainnet",
                        "sepolia",
                        "holesky",
                        "dev"
                    ]
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always",
                    "tags": [
                        "always",
                        "auto",
                        "never"
                    ]
                },
                {
                    "option": "--config",
                    "description": "The path to the configuration file to use.",
                    "value": "<FILE>"
                },
                {
                    "option": "--datadir",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                    "value": "<DATA_DIR>",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "description": "The absolute path to store static files in.",
                    "value": "<PATH>"
                },
                {
                    "option": "--db.exclusive",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "value": "<EXCLUSIVE>",
                    "tags": [
                        "true",
                        "false"
                    ]
                },
                {
                    "option": "--db.growth-step",
                    "description": "Database growth step (e.g., 4GB, 4KB)",
                    "value": "<GROWTH_STEP>"
                },
                {
                    "option": "--db.log-level",
                    "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                    "value": "<LOG_LEVEL>",
                    "tags": [
                        "fatal",
                        "error",
                        "warn",
                        "notice",
                        "verbose",
                        "debug",
                        "trace",
                        "extra"
                    ]
                },
                {
                    "option": "--db.max-size",
                    "description": "Maximum database size (e.g., 4TB, 8MB)",
                    "value": "<MAX_SIZE>"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "description": "Read transaction timeout in seconds, 0 means no timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>"
                },
                {
                    "option": "--debug.engine-api-store",
                    "description": "The path to store engine API messages at. If specified, all of the intercepted engine API messages will be written to specified location",
                    "value": "<PATH>"
                },
                {
                    "option": "--debug.etherscan",
                    "description": "Runs a fake consensus client that advances the chain using recent block hashes on Etherscan. If specified, requires an `ETHERSCAN_API_KEY` environment variable",
                    "value": "[<ETHERSCAN_API_URL>]"
                },
                {
                    "option": "--debug.healthy-node-rpc-url",
                    "description": "The RPC URL of a healthy node to use for comparing invalid block hook results against.",
                    "value": "<URL>"
                },
                {
                    "option": "--debug.invalid-block-hook",
                    "description": "Determines which type of invalid block hook to install Example: `witness,prestate`",
                    "value": "<INVALID_BLOCK_HOOK>",
                    "default": "witness",
                    "tags": [
                        "witness",
                        "pre-state",
                        "opcode"
                    ]
                },
                {
                    "option": "--debug.max-block",
                    "description": "Runs the sync only up to the specified block",
                    "value": "<MAX_BLOCK>"
                },
                {
                    "option": "--debug.reorg-depth",
                    "description": "The reorg depth for chain reorgs",
                    "value": "<REORG_DEPTH>"
                },
                {
                    "option": "--debug.reorg-frequency",
                    "description": "If provided, the chain will be reorged at specified frequency",
                    "value": "<REORG_FREQUENCY>"
                },
                {
                    "option": "--debug.rpc-consensus-ws",
                    "description": "Runs a fake consensus client using blocks fetched from an RPC `WebSocket` endpoint",
                    "value": "<RPC_CONSENSUS_WS>"
                },
                {
                    "option": "--debug.skip-fcu",
                    "description": "If provided, the engine will skip `n` consecutive FCUs",
                    "value": "<SKIP_FCU>"
                },
                {
                    "option": "--debug.skip-new-payload",
                    "description": "If provided, the engine will skip `n` consecutive new payloads",
                    "value": "<SKIP_NEW_PAYLOAD>"
                },
                {
                    "option": "--debug.terminate",
                    "description": "Flag indicating whether the node should be terminated after the pipeline sync"
                },
                {
                    "option": "--debug.tip",
                    "description": "Set the chain tip manually for testing purposes. NOTE: This is a temporary flag",
                    "value": "<TIP>"
                },
                {
                    "option": "--dev",
                    "description": "Start the node in dev mode This mode uses a local proof-of-authority consensus engine with either fixed block times or automatically mined blocks. Disables network discovery and enables local http server. Prefunds 20 accounts derived by mnemonic \"test test test test test test test test test test test junk\" with 10 000 ETH each."
                },
                {
                    "option": "--dev.block-max-transactions",
                    "description": "How many transactions to mine per block",
                    "value": "<BLOCK_MAX_TRANSACTIONS>"
                },
                {
                    "option": "--dev.block-time",
                    "description": "Interval between blocks. Parses strings using [`humantime::parse_duration`] --dev.block-time 12s",
                    "value": "<BLOCK_TIME>"
                },
                {
                    "option": "--disable-discv4-discovery",
                    "description": "Disable Discv4 discovery"
                },
                {
                    "option": "--disable-discovery",
                    "shortcut": "-d",
                    "description": "Disable the discovery service"
                },
                {
                    "option": "--disable-dns-discovery",
                    "description": "Disable the DNS discovery"
                },
                {
                    "option": "--disable-nat",
                    "description": "Disable Nat discovery"
                },
                {
                    "option": "--dns-retries",
                    "description": "Amount of DNS resolution requests retries to perform when peering",
                    "value": "<DNS_RETRIES>",
                    "default": "0"
                },
                {
                    "option": "--discovery.addr",
                    "description": "The UDP address to use for devp2p peer discovery version 4",
                    "value": "<DISCOVERY_ADDR>",
                    "default": "0.0.0.0"
                },
                {
                    "option": "--discovery.port",
                    "description": "The UDP port to use for devp2p peer discovery version 4",
                    "value": "<DISCOVERY_PORT>",
                    "default": "30303"
                },
                {
                    "option": "--discovery.v5.addr",
                    "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4",
                    "value": "<DISCOVERY_V5_ADDR>"
                },
                {
                    "option": "--discovery.v5.addr.ipv6",
                    "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6",
                    "value": "<DISCOVERY_V5_ADDR_IPV6>"
                },
                {
                    "option": "--discovery.v5.bootstrap.lookup-countdown",
                    "description": "The number of times to carry out boost lookup queries at bootstrap",
                    "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN>",
                    "default": "100"
                },
                {
                    "option": "--discovery.v5.bootstrap.lookup-interval",
                    "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                    "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL>",
                    "default": "5"
                },
                {
                    "option": "--discovery.v5.lookup-interval",
                    "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                    "value": "<DISCOVERY_V5_LOOKUP_INTERVAL>",
                    "default": "60"
                },
                {
                    "option": "--discovery.v5.port",
                    "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                    "value": "<DISCOVERY_V5_PORT>",
                    "default": "9200"
                },
                {
                    "option": "--discovery.v5.port.ipv6",
                    "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                    "value": "<DISCOVERY_V5_PORT_IPV6>",
                    "default": "9200"
                },
                {
                    "option": "--enable-discv5-discovery",
                    "description": "Enable Discv5 discovery"
                },
                {
                    "option": "--engine.experimental",
                    "description": "Enable the experimental engine features on reth binary DEPRECATED: experimental engine is default now, use --engine.legacy to enable the legacy functionality"
                },
                {
                    "option": "--engine.legacy",
                    "description": "Enable the legacy engine on reth binary"
                },
                {
                    "option": "--engine.memory-block-buffer-target",
                    "description": "Configure the target number of blocks to keep in memory",
                    "value": "<MEMORY_BLOCK_BUFFER_TARGET>",
                    "default": "2"
                },
                {
                    "option": "--engine.persistence-threshold",
                    "description": "Configure persistence threshold for engine experimental",
                    "value": "<PERSISTENCE_THRESHOLD>",
                    "default": "2"
                },
                {
                    "option": "--full",
                    "description": "Run full node. Only the most recent [`MINIMUM_PRUNING_DISTANCE`] block states are stored"
                },
                {
                    "option": "--gpo.blocks",
                    "description": "Number of recent blocks to check for gas price",
                    "value": "<BLOCKS>",
                    "default": "20"
                },
                {
                    "option": "--gpo.ignoreprice",
                    "description": "Gas Price below which gpo will ignore transactions",
                    "value": "<IGNORE_PRICE>",
                    "default": "2"
                },
                {
                    "option": "--gpo.maxprice",
                    "description": "Maximum transaction priority fee(or gasprice before London Fork) to be recommended by gpo",
                    "value": "<MAX_PRICE>",
                    "default": "500000000000"
                },
                {
                    "option": "--gpo.percentile",
                    "description": "The percentile of gas prices to use for the estimate",
                    "value": "<PERCENTILE>",
                    "default": "60"
                },
                {
                    "option": "--http",
                    "description": "Enable the HTTP-RPC server"
                },
                {
                    "option": "--http.addr",
                    "description": "Http server address to listen on",
                    "value": "<HTTP_ADDR>",
                    "default": "127.0.0.1"
                },
                {
                    "option": "--http.api",
                    "description": "Rpc Modules to be configured for the HTTP server",
                    "value": "<HTTP_API>",
                    "tags": [
                        "admin",
                        "debug",
                        "eth",
                        "net",
                        "trace",
                        "txpool",
                        "web3",
                        "rpc",
                        "reth",
                        "ots",
                        "flashbots"
                    ]
                },
                {
                    "option": "--http.corsdomain",
                    "description": "Http Corsdomain to allow request from",
                    "value": "<HTTP_CORSDOMAIN>"
                },
                {
                    "option": "--http.port",
                    "description": "Http server port to listen on",
                    "value": "<HTTP_PORT>",
                    "default": "8545"
                },
                {
                    "option": "--identity",
                    "description": "Custom node identity",
                    "value": "<IDENTITY>",
                    "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                },
                {
                    "option": "--enable-discv5-discovery",
                    "description": "Enable Discv5 discovery"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--ipcdisable",
                    "description": "Disable the IPC-RPC server"
                },
                {
                    "option": "--ipcpath",
                    "description": "Filename for IPC socket/pipe within the datadir",
                    "value": "<IPCPATH>",
                    "default": "/tmp/reth.ipc"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file",
                    "value": "<FORMAT>",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout",
                    "value": "<FORMAT>",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--max-inbound-peers",
                    "description": "Maximum number of inbound requests. default: 30",
                    "value": "<MAX_INBOUND_PEERS>"
                },
                {
                    "option": "--max-outbound-peers",
                    "description": "Maximum number of outbound requests. default: 100",
                    "value": "<MAX_OUTBOUND_PEERS>"
                },
                {
                    "option": "--max-pending-imports",
                    "description": "Max number of transactions to import concurrently.",
                    "value": "<COUNT>",
                    "default": "4096"
                },
                {
                    "option": "--max-seen-tx-history",
                    "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                    "value": "<COUNT>",
                    "default": "320"
                },
                {
                    "option": "--max-tx-pending-fetch",
                    "description": "Max capacity of cache of hashes for transactions pending fetch.",
                    "value": "<COUNT>",
                    "default": "25600"
                },
                {
                    "option": "--max-tx-reqs",
                    "description": "Max concurrent `GetPooledTransactions` requests.",
                    "value": "<COUNT>",
                    "default": "130"
                },
                {
                    "option": "--max-tx-reqs-peer",
                    "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                    "value": "<COUNT>",
                    "default": "1"
                },
                {
                    "option": "--metrics",
                    "description": "Enable Prometheus metrics. The metrics will be served at the given interface and port.",
                    "value": "<SOCKET>"
                },
                {
                    "option": "--nat",
                    "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                    "value": "<NAT>",
                    "default": "any"
                },
                {
                    "option": "--net-if.experimental",
                    "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried.",
                    "value": "<IF_NAME>"
                },
                {
                    "option": "--no-persist-peers",
                    "description": "Do not persist peers."
                },
                {
                    "option": "--p2p-secret-key",
                    "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.",
                    "value": "<PATH>"
                },
                {
                    "option": "--pooled-tx-pack-soft-limit",
                    "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see `RLPx` specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB.",
                    "value": "<BYTES>",
                    "default": "131072"
                },
                {
                    "option": "--pooled-tx-response-soft-limit",
                    "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                    "value": "<BYTES>",
                    "default": "2097152"
                },
                {
                    "option": "--port",
                    "description": "Network listening port",
                    "value": "<PORT>",
                    "default": "30303"
                },
                {
                    "option": "--prune.accounthistory.before",
                    "description": "Prune account history before the specified block number. The specified block number is not pruned",
                    "value": "<BLOCK_NUMBER>"
                },
                {
                    "option": "--prune.accounthistory.distance",
                    "description": "Prune account before the `head-N` block number. In other words, keep last N + 1 blocks",
                    "value": "<BLOCKS>"
                },
                {
                    "option": "--prune.accounthistory.full",
                    "description": "Prunes all account history"
                },
                {
                    "option": "--prune.receipts.before",
                    "description": "Prune receipts before the specified block number. The specified block number is not pruned",
                    "value": "<BLOCK_NUMBER>"
                },
                {
                    "option": "--prune.receipts.distance",
                    "description": "Prune receipts before the `head-N` block number. In other words, keep last N + 1 blocks",
                    "value": "<BLOCKS>"
                },
                {
                    "option": "--prune.receipts.full",
                    "description": "Prunes all receipt data"
                },
                {
                    "option": "--prune.receiptslogfilter",
                    "description": "Configure receipts log filter. Format: <`address`>:<`prune_mode`>[,<`address`>:<`prune_mode`>...] Where <`prune_mode`> can be 'full', 'distance:<`blocks`>', or 'before:<`block_number`>'",
                    "value": "<FILTER_CONFIG>"
                },
                {
                    "option": "--prune.senderrecovery.before",
                    "description": "Prune sender recovery data before the specified block number. The specified block number is not pruned",
                    "value": "<BLOCK_NUMBER>"
                },
                {
                    "option": "--prune.senderrecovery.distance",
                    "description": "Prune sender recovery data before the `head-N` block number. In other words, keep last N + 1 blocks",
                    "value": "<BLOCKS>"
                },
                {
                    "option": "--prune.senderrecovery.full",
                    "description": "Prunes all sender recovery data"
                },
                {
                    "option": "--prune.storagehistory.before",
                    "description": "Prune storage history before the specified block number. The specified block number is not pruned",
                    "value": "<BLOCK_NUMBER>"
                },
                {
                    "option": "--prune.storagehistory.distance",
                    "description": "Prune storage history before the `head-N` block number. In other words, keep last N + 1 blocks",
                    "value": "<BLOCKS>"
                },
                {
                    "option": "--prune.storagehistory.full",
                    "description": "Prunes all storage history data"
                },
                {
                    "option": "--prune.transactionlookup.before",
                    "description": "Prune transaction lookup data before the specified block number. The specified block number is not pruned",
                    "value": "<BLOCK_NUMBER>"
                },
                {
                    "option": "--prune.transactionlookup.distance",
                    "description": "Prune transaction lookup data before the `head-N` block number. In other words, keep last N + 1 blocks",
                    "value": "<BLOCKS>"
                },
                {
                    "option": "--prune.transactionlookup.full",
                    "description": "Prunes all transaction lookup data"
                },
                {
                    "option": "--rpc.eth-proof-window",
                    "description": "The maximum proof window for historical proof generation. This value allows for generating historical proofs up to configured number of blocks from current tip (up to `tip - window`)",
                    "value": "<RPC_ETH_PROOF_WINDOW>",
                    "default": "0"
                },
                {
                    "option": "--rpc.gascap",
                    "description": "Maximum gas limit for `eth_call` and call tracing RPC methods",
                    "value": "<GAS_CAP>",
                    "default": "50000000"
                },
                {
                    "option": "--rpc.jwtsecret",
                    "description": "Hex encoded JWT secret to authenticate the regular RPC server(s), see `--http.api` and `--ws.api`. This is __not__ used for the authenticated engine-API RPC server, see `--authrpc.jwtsecret`.",
                    "value": "<HEX>"
                },
                {
                    "option": "--rpc.max-blocks-per-filter",
                    "description": "Maximum number of blocks that could be scanned per filter request. (0 = entire chain)",
                    "value": "<COUNT>",
                    "default": "100000"
                },
                {
                    "option": "--rpc.max-connections",
                    "description": "Maximum number of RPC server connections",
                    "value": "<COUNT>",
                    "default": "500"
                },
                {
                    "option": "--rpc.max-logs-per-response",
                    "description": "Maximum number of logs that can be returned in a single response. (0 = no limit)",
                    "value": "<COUNT>",
                    "default": "20000"
                },
                {
                    "option": "--rpc.max-request-size",
                    "description": "Set the maximum RPC request payload size for both HTTP and WS in megabytes",
                    "value": "<RPC_MAX_REQUEST_SIZE>",
                    "default": "15"
                },
                {
                    "option": "--rpc.max-response-size",
                    "description": "Set the maximum RPC response payload size for both HTTP and WS in megabytes",
                    "value": "<RPC_MAX_RESPONSE_SIZE>",
                    "default": "160",
                    "tags": [
                        "rpc.returndata.limit"
                    ]
                },
                {
                    "option": "--rpc.max-simulate-blocks",
                    "description": "Maximum number of blocks for `eth_simulateV1` call",
                    "value": "<BLOCKS_COUNT>",
                    "default": "256"
                },
                {
                    "option": "--rpc.max-subscriptions-per-connection",
                    "description": "Set the maximum concurrent subscriptions per connection",
                    "value": "<RPC_MAX_SUBSCRIPTIONS_PER_CONNECTION>",
                    "default": "1024"
                },
                {
                    "option": "--rpc.max-tracing-requests",
                    "description": "Maximum number of concurrent tracing requests. By default this chooses a sensible value based on the number of available cores. Tracing requests are generally CPU bound. Choosing a value that is higher than the available CPU cores can have a negative impact on the performance of the node and affect the node's ability to maintain sync.",
                    "value": "<COUNT>",
                    "default": "2"
                },
                {
                    "option": "--rpc.proof-permits",
                    "description": "Maximum number of concurrent getproof requests",
                    "value": "<COUNT>",
                    "default": "25"
                },
                {
                    "option": "--rpc-cache.max-blocks",
                    "description": "Max number of blocks in cache",
                    "value": "<MAX_BLOCKS>",
                    "default": "5000"
                },
                {
                    "option": "--rpc-cache.max-concurrent-db-requests",
                    "description": "Max number of concurrent database requests",
                    "value": "<MAX_CONCURRENT_DB_REQUESTS>",
                    "default": "512"
                },
                {
                    "option": "--rpc-cache.max-envs",
                    "description": "Max number of bytes for cached env data",
                    "value": "<MAX_ENVS>",
                    "default": "1000"
                },
                {
                    "option": "--rpc-cache.max-receipts",
                    "description": "Max number receipts in cache",
                    "value": "<MAX_RECEIPTS>",
                    "default": "2000"
                },
                {
                    "option": "--trusted-only",
                    "description": "Connect to or accept from trusted peers only"
                },
                {
                    "option": "--trusted-peers",
                    "description": "Comma separated enode URLs of trusted peers for P2P connections. --trusted-peers enode://abcd@192.168.0.1:30303",
                    "value": "<TRUSTED_PEERS>"
                },
                {
                    "option": "--txpool.additional-validation-tasks",
                    "description": "Number of additional transaction validation tasks to spawn",
                    "value": "<ADDITIONAL_VALIDATION_TASKS>",
                    "default": "1"
                },
                {
                    "option": "--txpool.basefee-max-count",
                    "description": "Max number of transaction in the basefee sub-pool",
                    "value": "<BASEFEE_MAX_COUNT>",
                    "default": "10000"
                },
                {
                    "option": "--txpool.basefee-max-size",
                    "description": "Max size of the basefee sub-pool in megabytes",
                    "value": "<BASEFEE_MAX_SIZE>",
                    "default": "20"
                },
                {
                    "option": "--txpool.gas-limit",
                    "description": "The default enforced gas limit for transactions entering the pool",
                    "value": "<GAS_LIMIT>",
                    "default": "30000000"
                },
                {
                    "option": "--txpool.locals",
                    "description": "Flag to allow certain addresses as local",
                    "value": "<LOCALS>"
                },
                {
                    "option": "--txpool.max-account-slots",
                    "description": "Max number of executable transaction slots guaranteed per account",
                    "value": "<MAX_ACCOUNT_SLOTS>",
                    "default": "16"
                },
                {
                    "option": "--txpool.max-cached-entries",
                    "description": "The maximum number of blobs to keep in the in memory blob cache",
                    "value": "<MAX_CACHED_ENTRIES>",
                    "default": "100"
                },
                {
                    "option": "--txpool.max-new-pending-txs-notifications",
                    "description": "How many new pending transactions to buffer and send to in progress pending transaction iterators",
                    "value": "<MAX_NEW_PENDING_TXS_NOTIFICATIONS>",
                    "default": "200"
                },
                {
                    "option": "--txpool.max-new-txns",
                    "description": "Maximum number of new transactions to buffer",
                    "value": "<NEW_TX_LISTENER_BUFFER_SIZE>",
                    "default": "1024"
                },
                {
                    "option": "--txpool.max-pending-txns",
                    "description": "Maximum number of pending transactions from the network to buffer",
                    "value": "<PENDING_TX_LISTENER_BUFFER_SIZE>",
                    "default": "2048"
                },
                {
                    "option": "--txpool.max-tx-input-bytes",
                    "description": "Max size in bytes of a single transaction allowed to enter the pool",
                    "value": "<MAX_TX_INPUT_BYTES>",
                    "default": "131072"
                },
                {
                    "option": "--txpool.minimal-protocol-fee",
                    "description": "Minimum base fee required by the protocol",
                    "value": "<MINIMAL_PROTOCOL_BASEFEE>",
                    "default": "7"
                },
                {
                    "option": "--txpool.nolocals",
                    "description": "Flag to disable local transaction exemptions"
                },
                {
                    "option": "--txpool.no-local-transactions-propagation",
                    "description": "Flag to toggle local transaction propagation"
                },
                {
                    "option": "--txpool.pending-max-count",
                    "description": "Max number of transaction in the pending sub-pool",
                    "value": "<PENDING_MAX_COUNT>",
                    "default": "10000"
                },
                {
                    "option": "--txpool.pending-max-size",
                    "description": "Max size of the pending sub-pool in megabytes",
                    "value": "<PENDING_MAX_SIZE>",
                    "default": "20"
                },
                {
                    "option": "--txpool.pricebump",
                    "description": "Price bump (in %) for the transaction pool underpriced check",
                    "value": "<PRICE_BUMP>",
                    "default": "10"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                },
                {
                    "option": "--with-unused-ports",
                    "description": "Sets all ports to unused, allowing the OS to choose random unused ports when sockets are bound. Mutually exclusive with `--instance`."
                },
                {
                    "option": "--ws",
                    "description": "Enable the WS-RPC server"
                },
                {
                    "option": "--ws.addr",
                    "description": "Ws server address to listen on",
                    "value": "<WS_ADDR>",
                    "default": "127.0.0.1"
                },
                {
                    "option": "--ws.api",
                    "description": "Rpc Modules to be configured for the WS server",
                    "value": "<WS_API>",
                    "tags": [
                        "admin",
                        "debug",
                        "eth",
                        "net",
                        "trace",
                        "txpool",
                        "web3",
                        "rpc",
                        "reth",
                        "ots",
                        "flashbots"
                    ]
                },
                {
                    "option": "--ws.origins",
                    "description": "Origins from which to accept `WebSocket` requests",
                    "value": "<ws.origins>"
                },
                {
                    "option": "--ws.port",
                    "description": "Ws server port to listen on",
                    "value": "<WS_PORT>",
                    "default": "8546"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                }
            ]
        },
        {
            "description": "P2P Debugging utilities",
            "name": "reth p2p",
            "usage": "Usage: reth p2p [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "description": "Download block body",
                    "name": "reth p2p body",
                    "options": [
                        {
                            "default": "always",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "option": "--color",
                            "value": "<COLOR>"
                        },
                        {
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "option": "--instance",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "description": "Print help (see a summary with '-h')",
                            "option": "--help",
                            "shortcut": "-h"
                        },
                        {
                            "default": "",
                            "description": "The filter to use for logs written to stdout",
                            "option": "--log.stdout.filter",
                            "value": "<FILTER>"
                        },
                        {
                            "default": "terminal",
                            "description": "The format to use for logs written to stdout",
                            "option": "--log.stdout.format",
                            "value": "<FORMAT>"
                        },
                        {
                            "default": "debug",
                            "description": "The filter to use for logs written to the log file",
                            "option": "--log.file.filter",
                            "value": "<FILTER>"
                        },
                        {
                            "default": "terminal",
                            "description": "The format to use for logs written to the log file",
                            "option": "--log.file.format",
                            "value": "<FORMAT>"
                        },
                        {
                            "default": "/home/ahmad/.cache/reth/logs",
                            "description": "The path to put log files in",
                            "option": "--log.file.directory",
                            "value": "<PATH>"
                        },
                        {
                            "default": "200",
                            "description": "The maximum size (in MB) of one log file",
                            "option": "--log.file.max-size",
                            "value": "<SIZE>"
                        },
                        {
                            "default": "5",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "option": "--log.file.max-files",
                            "value": "<COUNT>"
                        },
                        {
                            "description": "Write logs to journald",
                            "option": "--log.journald"
                        },
                        {
                            "default": "error",
                            "description": "The filter to use for logs written to journald",
                            "option": "--log.journald.filter",
                            "value": "<FILTER>"
                        },
                        {
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)",
                            "option": "--verbosity",
                            "shortcut": "-v"
                        },
                        {
                            "description": "Silence all log output",
                            "option": "--quiet",
                            "shortcut": "-q"
                        }
                    ],
                    "usage": "reth p2p body [OPTIONS] <ID>",
                    "subcommands": []
                },
                {
                    "description": "Download block header",
                    "name": "reth p2p header",
                    "usage": "Usage: reth p2p header [OPTIONS] <ID>",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level. -v Errors, -vv Warnings, -vvv Info, -vvvv Debug, -vvvvv Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth p2p rlpx",
                    "description": "RLPx commands",
                    "usage": "Usage: reth p2p rlpx [OPTIONS] <COMMAND>",
                    "subcommands": [
                        {
                            "name": "reth p2p rlpx ping",
                            "description": "Ping a node using the RLPx protocol.",
                            "usage": "reth p2p rlpx ping [OPTIONS] <NODE>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "default": "always",
                                    "value": "<COLOR>"
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "default": "1",
                                    "value": "<INSTANCE>"
                                },
                                {
                                    "shortcut": "-h",
                                    "option": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "default": "/home/ahmad/.cache/reth/logs",
                                    "value": "<PATH>"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "default": "debug",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "default": "terminal",
                                    "value": "<FORMAT>"
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "default": "5",
                                    "value": "<COUNT>"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "default": "200",
                                    "value": "<SIZE>"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "default": "error",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "default": "",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "default": "terminal",
                                    "value": "<FORMAT>"
                                },
                                {
                                    "shortcut": "-q",
                                    "option": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "shortcut": "-v",
                                    "option": "--verbosity",
                                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)",
                                    "tags": [
                                        "..."
                                    ]
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always",
                            "tags": [
                                "display"
                            ]
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs",
                            "tags": [
                                "logging"
                            ]
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug",
                            "tags": [
                                "logging"
                            ]
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "logging"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5",
                            "tags": [
                                "logging"
                            ]
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200",
                            "tags": [
                                "logging"
                            ]
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald",
                            "tags": [
                                "logging"
                            ]
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error",
                            "tags": [
                                "logging"
                            ]
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": "",
                            "tags": [
                                "logging"
                            ]
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "logging"
                            ]
                        },
                        {
                            "shortcut": "-q",
                            "option": "--quiet",
                            "description": "Silence all log output",
                            "tags": [
                                "display"
                            ]
                        },
                        {
                            "shortcut": "-h",
                            "option": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "shortcut": "-v",
                            "option": "--verbosity",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)",
                            "tags": [
                                "display"
                            ]
                        }
                    ]
                }
            ],
            "options": [
                {
                    "description": "Network listening address",
                    "option": "--addr",
                    "value": "<ADDR>",
                    "default": "0.0.0.0"
                },
                {
                    "description": "The path to the configuration file to use.",
                    "option": "--config",
                    "value": "<FILE>"
                },
                {
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                    "option": "--chain",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "mainnet"
                },
                {
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting. Possible values: always, auto, never",
                    "option": "--color",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: Linux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/ Windows: {FOLDERID_RoamingAppData}/reth/ macOS: $HOME/Library/Application Support/reth/",
                    "option": "--datadir",
                    "value": "<DATA_DIR>",
                    "default": "default"
                },
                {
                    "description": "The absolute path to store static files in.",
                    "option": "--datadir.static-files",
                    "value": "<PATH>"
                },
                {
                    "description": "Database growth step (e.g., 4GB, 4KB)",
                    "option": "--db.growth-step",
                    "value": "<GROWTH_STEP>"
                },
                {
                    "description": "Database logging level. Levels higher than \"notice\" require a debug build. Possible values: fatal, error, warn, notice, verbose, debug, trace, extra",
                    "option": "--db.log-level",
                    "value": "<LOG_LEVEL>"
                },
                {
                    "description": "Maximum database size (e.g., 4TB, 8MB)",
                    "option": "--db.max-size",
                    "value": "<MAX_SIZE>"
                },
                {
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "option": "--db.exclusive",
                    "value": "<EXCLUSIVE>"
                },
                {
                    "description": "Read transaction timeout in seconds, 0 means no timeout",
                    "option": "--db.read-transaction-timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>"
                },
                {
                    "description": "Disable the discovery service",
                    "option": "--disable-discovery",
                    "shortcut": "-d"
                },
                {
                    "description": "Disable Discv4 discovery",
                    "option": "--disable-discv4-discovery"
                },
                {
                    "description": "Disable the DNS discovery",
                    "option": "--disable-dns-discovery"
                },
                {
                    "description": "Disable Nat discovery",
                    "option": "--disable-nat"
                },
                {
                    "description": "The UDP address to use for devp2p peer discovery version 4",
                    "option": "--discovery.addr",
                    "value": "<DISCOVERY_ADDR>",
                    "default": "0.0.0.0"
                },
                {
                    "description": "The UDP port to use for devp2p peer discovery version 4",
                    "option": "--discovery.port",
                    "value": "<DISCOVERY_PORT>",
                    "default": "30303"
                },
                {
                    "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4",
                    "option": "--discovery.v5.addr",
                    "value": "<DISCOVERY_V5_ADDR>"
                },
                {
                    "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6",
                    "option": "--discovery.v5.addr.ipv6",
                    "value": "<DISCOVERY_V5_ADDR_IPV6>"
                },
                {
                    "description": "The number of times to carry out boost lookup queries at bootstrap",
                    "option": "--discovery.v5.bootstrap.lookup-countdown",
                    "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN>",
                    "default": "100"
                },
                {
                    "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                    "option": "--discovery.v5.bootstrap.lookup-interval",
                    "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL>",
                    "default": "5"
                },
                {
                    "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                    "option": "--discovery.v5.lookup-interval",
                    "value": "<DISCOVERY_V5_LOOKUP_INTERVAL>",
                    "default": "60"
                },
                {
                    "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                    "option": "--discovery.v5.port",
                    "value": "<DISCOVERY_V5_PORT>",
                    "default": "9200"
                },
                {
                    "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                    "option": "--discovery.v5.port.ipv6",
                    "value": "<DISCOVERY_V5_PORT_IPV6>",
                    "default": "9200"
                },
                {
                    "description": "Enable Discv5 discovery",
                    "option": "--enable-discv5-discovery"
                },
                {
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "option": "--instance",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "description": "Custom node identity",
                    "option": "--identity",
                    "value": "<IDENTITY>",
                    "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                },
                {
                    "description": "Write logs to journald",
                    "option": "--log.journald"
                },
                {
                    "description": "The filter to use for logs written to journald",
                    "option": "--log.journald.filter",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "description": "The filter to use for logs written to the log file",
                    "option": "--log.file.filter",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "description": "The format to use for logs written to the log file. Possible values: json, log-fmt, terminal",
                    "option": "--log.file.format",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "description": "The path to put log files in",
                    "option": "--log.file.directory",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "option": "--log.file.max-files",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "description": "The maximum size (in MB) of one log file",
                    "option": "--log.file.max-size",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "description": "The filter to use for logs written to stdout",
                    "option": "--log.stdout.filter",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "description": "The format to use for logs written to stdout. Possible values: json, log-fmt, terminal",
                    "option": "--log.stdout.format",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "description": "Max number of transactions to import concurrently.",
                    "option": "--max-pending-imports",
                    "value": "<COUNT>",
                    "default": "4096"
                },
                {
                    "description": "Maximum number of inbound requests.",
                    "option": "--max-inbound-peers",
                    "value": "<MAX_INBOUND_PEERS>",
                    "default": "30"
                },
                {
                    "description": "Maximum number of outbound requests.",
                    "option": "--max-outbound-peers",
                    "value": "<MAX_OUTBOUND_PEERS>",
                    "default": "100"
                },
                {
                    "description": "Max concurrent `GetPooledTransactions` requests.",
                    "option": "--max-tx-reqs",
                    "value": "<COUNT>",
                    "default": "130"
                },
                {
                    "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                    "option": "--max-tx-reqs-peer",
                    "value": "<COUNT>",
                    "default": "1"
                },
                {
                    "description": "Max capacity of cache of hashes for transactions pending fetch.",
                    "option": "--max-tx-pending-fetch",
                    "value": "<COUNT>",
                    "default": "25600"
                },
                {
                    "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                    "option": "--max-seen-tx-history",
                    "value": "<COUNT>",
                    "default": "320"
                },
                {
                    "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                    "option": "--nat",
                    "value": "<NAT>",
                    "default": "any"
                },
                {
                    "description": "Max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                    "option": "--pooled-tx-response-soft-limit",
                    "value": "<BYTES>",
                    "default": "2097152"
                },
                {
                    "description": "Max accumulated byte size of transactions to request in one request.",
                    "option": "--pooled-tx-pack-soft-limit",
                    "value": "<BYTES>",
                    "default": "131072"
                },
                {
                    "description": "Network listening port",
                    "option": "--port",
                    "value": "<PORT>",
                    "default": "30303"
                },
                {
                    "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.",
                    "option": "--p2p-secret-key",
                    "value": "<PATH>"
                },
                {
                    "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with `--no-persist-peers`.",
                    "option": "--peers-file",
                    "value": "<FILE>"
                },
                {
                    "description": "Silence all log output",
                    "option": "--quiet",
                    "shortcut": "-q"
                },
                {
                    "description": "The number of retries per request",
                    "option": "--retries",
                    "value": "<RETRIES>",
                    "default": "5"
                },
                {
                    "description": "Do not persist peers.",
                    "option": "--no-persist-peers"
                },
                {
                    "description": "Comma separated enode URLs for P2P discovery bootstrap. Will fall back to a network-specific default if not specified.",
                    "option": "--bootnodes",
                    "value": "<BOOTNODES>"
                },
                {
                    "description": "Amount of DNS resolution requests retries to perform when peering",
                    "option": "--dns-retries",
                    "value": "<DNS_RETRIES>",
                    "default": "0"
                },
                {
                    "description": "Comma separated enode URLs of trusted peers for P2P connections.",
                    "option": "--trusted-peers",
                    "value": "<TRUSTED_PEERS>"
                },
                {
                    "description": "Connect to or accept from trusted peers only",
                    "option": "--trusted-only"
                },
                {
                    "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried.",
                    "option": "--net-if.experimental",
                    "value": "<IF_NAME>"
                },
                {
                    "description": "Print help (see a summary with '-h')",
                    "option": "--help",
                    "shortcut": "-h"
                },
                {
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)",
                    "option": "--verbosity",
                    "shortcut": "-v"
                }
            ]
        },
        {
            "description": "Prune according to the configuration without any limits",
            "name": "reth prune",
            "subcommands": [],
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "mainnet"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--config",
                    "description": "The path to the configuration file to use",
                    "value": "<FILE>"
                },
                {
                    "option": "--datadir",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                    "value": "<DATA_DIR>",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "description": "The absolute path to store static files in.",
                    "value": "<PATH>"
                },
                {
                    "option": "--db.exclusive",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "value": "<EXCLUSIVE>"
                },
                {
                    "option": "--db.growth-step",
                    "description": "Database growth step (e.g., 4GB, 4KB)",
                    "value": "<GROWTH_STEP>"
                },
                {
                    "option": "--db.log-level",
                    "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                    "value": "<LOG_LEVEL>"
                },
                {
                    "option": "--db.max-size",
                    "description": "Maximum database size (e.g., 4TB, 8MB)",
                    "value": "<MAX_SIZE>"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "description": "Read transaction timeout in seconds, 0 means no timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level."
                }
            ],
            "usage": "Usage: reth prune [OPTIONS]"
        },
        {
            "name": "reth recover",
            "description": "Scripts for node recovery",
            "usage": "reth recover [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "reth recover storage-tries",
                    "description": "Recover the node by deleting dangling storage tries",
                    "usage": "reth recover storage-tries [OPTIONS]",
                    "options": [
                        {
                            "option": "--chain",
                            "value": "<CHAIN_OR_PATH>",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                            "default": "mainnet"
                        },
                        {
                            "option": "--color",
                            "value": "<COLOR>",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting. Possible values: always, auto, never",
                            "default": "always"
                        },
                        {
                            "option": "--config",
                            "value": "<FILE>",
                            "description": "The path to the configuration file to use"
                        },
                        {
                            "option": "--datadir",
                            "value": "<DATA_DIR>",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: Linux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/, Windows: {FOLDERID_RoamingAppData}/reth/, macOS: $HOME/Library/Application Support/reth/",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "value": "<PATH>",
                            "description": "The absolute path to store static files in."
                        },
                        {
                            "option": "--db.exclusive",
                            "value": "<EXCLUSIVE>",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "tags": [
                                "possible values: true, false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "value": "<GROWTH_STEP>",
                            "description": "Database growth step (e.g., 4GB, 4KB)"
                        },
                        {
                            "option": "--db.log-level",
                            "value": "<LOG_LEVEL>",
                            "description": "Database logging level. Levels higher than 'notice' require a debug build. Possible values: fatal, error, warn, notice, verbose, debug, trace, extra"
                        },
                        {
                            "option": "--db.max-size",
                            "value": "<MAX_SIZE>",
                            "description": "Maximum database size (e.g., 4TB, 8MB)"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>",
                            "description": "Read transaction timeout in seconds, 0 means no timeout"
                        },
                        {
                            "option": "--instance",
                            "value": "<INSTANCE>",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. Changes to the following port numbers: - DISCOVERY_PORT: default + instance - 1 - AUTH_PORT: default + instance * 100 - 100 - HTTP_RPC_PORT: default - instance + 1 - WS_RPC_PORT: default + instance * 2 - 2",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "value": "<PATH>",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to the log file. Possible values: json, log-fmt, terminal",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "value": "<COUNT>",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "value": "<SIZE>",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to journald",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to stdout",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to stdout. Possible values: json, log-fmt, terminal",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity...",
                            "description": "Set the minimum log level. -v Errors, -vv Warnings, -vvv Info, -vvvv Debug, -vvvvv Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file.",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "mainnet"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level."
                }
            ]
        },
        {
            "name": "reth stage",
            "description": "Manipulate individual stages",
            "usage": "Usage: reth stage [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "reth stage drop",
                    "description": "Drop a stage's tables from the database",
                    "usage": "Usage: reth stage drop [OPTIONS] <STAGE>",
                    "options": [
                        {
                            "option": "--chain",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                            "value": "<CHAIN_OR_PATH>",
                            "default": "mainnet"
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--config",
                            "description": "The path to the configuration file to use",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--datadir",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: Linux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/, Windows: {FOLDERID_RoamingAppData}/reth/, macOS: $HOME/Library/Application Support/reth/",
                            "value": "<DATA_DIR>",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "description": "The absolute path to store static files in.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--db.exclusive",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "value": "<EXCLUSIVE>"
                        },
                        {
                            "option": "--db.growth-step",
                            "description": "Database growth step (e.g., 4GB, 4KB)",
                            "value": "<GROWTH_STEP>"
                        },
                        {
                            "option": "--db.log-level",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                            "value": "<LOG_LEVEL>"
                        },
                        {
                            "option": "--db.max-size",
                            "description": "Maximum database size (e.g., 4TB, 8MB)",
                            "value": "<MAX_SIZE>"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "description": "Read transaction timeout in seconds, 0 means no timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": 1
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": 5
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": 200
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>"
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity...",
                            "description": "Set the minimum log level. -v Errors, -vv Warnings, -vvv Info, -vvvv Debug, -vvvvv Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": [
                        {
                            "name": "reth stage drop datadir",
                            "subcommands": [],
                            "options": []
                        },
                        {
                            "name": "reth stage drop database",
                            "subcommands": [],
                            "options": []
                        },
                        {
                            "name": "reth stage drop display",
                            "subcommands": [],
                            "options": []
                        },
                        {
                            "name": "reth stage drop logging",
                            "subcommands": [],
                            "options": []
                        }
                    ]
                },
                {
                    "name": "reth stage dump",
                    "description": "Dumps a stage from a range into a new database",
                    "usage": "reth stage dump [OPTIONS] <COMMAND>",
                    "subcommands": [
                        {
                            "name": "reth stage dump account-hashing",
                            "description": "stage",
                            "usage": "reth stage dump account-hashing [OPTIONS] --output-datadir <OUTPUT_PATH> --from <FROM> --to <TO>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": 1
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": 5
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": 200
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--output-datadir",
                                    "description": "The path to the new datadir folder.",
                                    "value": "<OUTPUT_PATH>"
                                },
                                {
                                    "shortcut": "-d",
                                    "option": "--dry-run",
                                    "description": "If passed, it will dry-run a stage execution from the newly created database right after dumping"
                                },
                                {
                                    "shortcut": "-f",
                                    "option": "--from",
                                    "description": "From which block",
                                    "value": "<FROM>"
                                },
                                {
                                    "shortcut": "-h",
                                    "option": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "shortcut": "-q",
                                    "option": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "shortcut": "-t",
                                    "option": "--to",
                                    "description": "To which block",
                                    "value": "<TO>"
                                },
                                {
                                    "shortcut": "-v",
                                    "option": "--verbosity",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "-v",
                                        "-vv",
                                        "-vvv",
                                        "-vvvv",
                                        "-vvvvv"
                                    ]
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "description": "Execution stage",
                            "name": "reth stage dump execution",
                            "usage": "Usage: reth stage dump execution [OPTIONS] --output-datadir <OUTPUT_PATH> --from <FROM> --to <TO>",
                            "options": [
                                {
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "option": "--color",
                                    "default": "always",
                                    "value": "<COLOR>",
                                    "tags": [
                                        "always: Colors on",
                                        "auto: Colors on",
                                        "never: Colors off"
                                    ]
                                },
                                {
                                    "description": "If passed, it will dry-run a stage execution from the newly created database right after dumping",
                                    "option": "--dry-run",
                                    "shortcut": "-d"
                                },
                                {
                                    "description": "From which block",
                                    "option": "--from",
                                    "shortcut": "-f",
                                    "value": "<FROM>"
                                },
                                {
                                    "description": "Print help (see a summary with '-h')",
                                    "option": "--help",
                                    "shortcut": "-h"
                                },
                                {
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "option": "--instance",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "description": "The format to use for logs written to the log file",
                                    "option": "--log.file.format",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                        "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                        "terminal: Represents terminal-friendly formatting for logs"
                                    ]
                                },
                                {
                                    "description": "The filter to use for logs written to the log file",
                                    "option": "--log.file.filter",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "description": "The path to put log files in",
                                    "option": "--log.file.directory",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "description": "The maximum size (in MB) of one log file",
                                    "option": "--log.file.max-size",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "option": "--log.file.max-files",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "description": "Write logs to journald",
                                    "option": "--log.journald"
                                },
                                {
                                    "description": "The filter to use for logs written to journald",
                                    "option": "--log.journald.filter",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "description": "The format to use for logs written to stdout",
                                    "option": "--log.stdout.format",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                        "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                        "terminal: Represents terminal-friendly formatting for logs"
                                    ]
                                },
                                {
                                    "description": "The filter to use for logs written to stdout",
                                    "option": "--log.stdout.filter",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "description": "The path to the new datadir folder.",
                                    "option": "--output-datadir",
                                    "value": "<OUTPUT_PATH>"
                                },
                                {
                                    "description": "Silence all log output",
                                    "option": "--quiet",
                                    "shortcut": "-q"
                                },
                                {
                                    "description": "To which block",
                                    "option": "--to",
                                    "shortcut": "-t",
                                    "value": "<TO>"
                                },
                                {
                                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)",
                                    "option": "--verbosity",
                                    "shortcut": "-v"
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "reth stage dump merkle",
                            "description": "Stage for dumping merkle data.",
                            "usage": "reth stage dump merkle [OPTIONS] --output-datadir <OUTPUT_PATH> --from <FROM> --to <TO>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "default": "always",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--output-datadir",
                                    "description": "The path to the new datadir folder.",
                                    "value": "<OUTPUT_PATH>"
                                },
                                {
                                    "option": "-d",
                                    "shortcut": "--dry-run",
                                    "description": "If passed, it will dry-run a stage execution from the newly created database right after dumping"
                                },
                                {
                                    "option": "-f",
                                    "shortcut": "--from",
                                    "description": "From which block",
                                    "value": "<FROM>"
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-t",
                                    "shortcut": "--to",
                                    "description": "To which block",
                                    "value": "<TO>"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "Errors",
                                        "Warnings",
                                        "Info",
                                        "Debug",
                                        "Traces"
                                    ]
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "reth stage dump storage-hashing",
                            "description": "stage",
                            "usage": "reth stage dump storage-hashing [OPTIONS] --output-datadir <OUTPUT_PATH> --from <FROM> --to <TO>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal"
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal"
                                },
                                {
                                    "option": "--output-datadir",
                                    "description": "The path to the new datadir folder.",
                                    "value": "<OUTPUT_PATH>"
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "-d",
                                    "shortcut": "--dry-run",
                                    "description": "If passed, it will dry-run a stage execution from the newly created database right after dumping"
                                },
                                {
                                    "option": "-f",
                                    "shortcut": "--from",
                                    "description": "From which block",
                                    "value": "<FROM>"
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-t",
                                    "shortcut": "--to",
                                    "description": "To which block",
                                    "value": "<TO>"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity",
                                    "description": "Set the minimum log level. -v      Errors -vv     Warnings -vvv    Info -vvvv   Debug -vvvvv  Traces (warning: very verbose!)"
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--chain",
                            "value": "<CHAIN_OR_PATH>",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                            "default": "mainnet"
                        },
                        {
                            "option": "--color",
                            "value": "<COLOR>",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "tags": [
                                "always: Colors on",
                                "auto:   Colors on",
                                "never:  Colors off"
                            ]
                        },
                        {
                            "option": "--config",
                            "value": "<FILE>",
                            "description": "The path to the configuration file to use"
                        },
                        {
                            "option": "--datadir",
                            "value": "<DATA_DIR>",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`, Windows: `{FOLDERID_RoamingAppData}/reth/`, macOS: `$HOME/Library/Application Support/reth/`",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "value": "<PATH>",
                            "description": "The absolute path to store static files in."
                        },
                        {
                            "option": "--db.exclusive",
                            "value": "<EXCLUSIVE>",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "tags": [
                                "possible values: true, false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "value": "<GROWTH_STEP>",
                            "description": "Database growth step (e.g., 4GB, 4KB)"
                        },
                        {
                            "option": "--db.log-level",
                            "value": "<LOG_LEVEL>",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                            "tags": [
                                "fatal:   Enables logging for critical conditions, i.e. assertion failures",
                                "error:   Enables logging for error conditions",
                                "warn:    Enables logging for warning conditions",
                                "notice:  Enables logging for normal but significant condition",
                                "verbose: Enables logging for verbose informational",
                                "debug:   Enables logging for debug-level messages",
                                "trace:   Enables logging for trace debug-level messages",
                                "extra:   Enables logging for extra debug-level messages"
                            ]
                        },
                        {
                            "option": "--db.max-size",
                            "value": "<MAX_SIZE>",
                            "description": "Maximum database size (e.g., 4TB, 8MB)"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>",
                            "description": "Read transaction timeout in seconds, 0 means no timeout"
                        },
                        {
                            "option": "--instance",
                            "value": "<INSTANCE>",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "value": "<PATH>",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to the log file",
                            "default": "terminal",
                            "tags": [
                                "json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                "log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                "terminal: Represents terminal-friendly formatting for logs"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "value": "<COUNT>",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "value": "<SIZE>",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to journald",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to stdout",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to stdout",
                            "default": "terminal",
                            "tags": [
                                "json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                "log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                "terminal: Represents terminal-friendly formatting for logs"
                            ]
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity...",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        }
                    ]
                },
                {
                    "name": "reth stage run",
                    "description": "Run a single stage. Note that this won't use the Pipeline and as a result runs stages assuming that all the data can be held in memory. It is not recommended to run a stage for really large block ranges if your computer does not have a lot of memory to store all the data.",
                    "usage": "Usage: reth stage run [OPTIONS] --from <FROM> --to <TO> <STAGE>",
                    "options": [
                        {
                            "option": "--addr",
                            "description": "Network listening address",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--batch-size",
                            "description": "Batch size for stage execution and unwind",
                            "value": "<BATCH_SIZE>"
                        },
                        {
                            "option": "--bootnodes",
                            "description": "Comma separated enode URLs for P2P discovery bootstrap. Will fall back to a network-specific default if not specified.",
                            "value": "<BOOTNODES>"
                        },
                        {
                            "option": "--chain",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                            "value": "<CHAIN_OR_PATH>",
                            "default": "mainnet"
                        },
                        {
                            "option": "--checkpoints",
                            "description": "Save stage checkpoints"
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--commit",
                            "shortcut": "-c",
                            "description": "Commits the changes in the database. WARNING: potentially destructive. Useful when you want to run diagnostics on the database."
                        },
                        {
                            "option": "--config",
                            "description": "The path to the configuration file to use",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--datadir",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: Linux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/, Windows: {FOLDERID_RoamingAppData}/reth/, macOS: $HOME/Library/Application Support/reth/",
                            "value": "<DATA_DIR>",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "description": "The absolute path to store static files in.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--db.exclusive",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "value": "<EXCLUSIVE>"
                        },
                        {
                            "option": "--db.growth-step",
                            "description": "Database growth step (e.g., 4GB, 4KB)",
                            "value": "<GROWTH_STEP>"
                        },
                        {
                            "option": "--db.log-level",
                            "description": "Database logging level. Levels higher than 'notice' require a debug build. Possible values: fatal, error, warn, notice, verbose, debug, trace, extra",
                            "value": "<LOG_LEVEL>"
                        },
                        {
                            "option": "--db.max-size",
                            "description": "Maximum database size (e.g., 4TB, 8MB)",
                            "value": "<MAX_SIZE>"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "description": "Read transaction timeout in seconds, 0 means no timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>"
                        },
                        {
                            "option": "--disable-discv4-discovery",
                            "description": "Disable Discv4 discovery"
                        },
                        {
                            "option": "--disable-discovery",
                            "shortcut": "-d",
                            "description": "Disable the discovery service"
                        },
                        {
                            "option": "--disable-dns-discovery",
                            "description": "Disable the DNS discovery"
                        },
                        {
                            "option": "--disable-nat",
                            "description": "Disable Nat discovery"
                        },
                        {
                            "option": "--discovery.addr",
                            "description": "The UDP address to use for devp2p peer discovery version 4",
                            "value": "<DISCOVERY_ADDR>",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--discovery.port",
                            "description": "The UDP port to use for devp2p peer discovery version 4",
                            "value": "<DISCOVERY_PORT>",
                            "default": "30303"
                        },
                        {
                            "option": "--discovery.v5.addr",
                            "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by RLPx address, if it's also IPv4",
                            "value": "<DISCOVERY_V5_ADDR>"
                        },
                        {
                            "option": "--discovery.v5.addr.ipv6",
                            "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by RLPx address, if it's also IPv6",
                            "value": "<DISCOVERY_V5_ADDR_IPV6>"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-countdown",
                            "description": "The number of times to carry out boost lookup queries at bootstrap",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN>",
                            "default": "100"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-interval",
                            "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL>",
                            "default": "5"
                        },
                        {
                            "option": "--discovery.v5.lookup-interval",
                            "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                            "value": "<DISCOVERY_V5_LOOKUP_INTERVAL>",
                            "default": "60"
                        },
                        {
                            "option": "--discovery.v5.port",
                            "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless --addr is IPv4, or --discovery.v5.addr is set",
                            "value": "<DISCOVERY_V5_PORT>",
                            "default": "9200"
                        },
                        {
                            "option": "--discovery.v5.port.ipv6",
                            "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless --addr is IPv6, or --discovery.addr.ipv6 is set",
                            "value": "<DISCOVERY_V5_PORT_IPV6>",
                            "default": "9200"
                        },
                        {
                            "option": "--dns-retries",
                            "description": "Amount of DNS resolution requests retries to perform when peering",
                            "value": "<DNS_RETRIES>",
                            "default": "0"
                        },
                        {
                            "option": "--enable-discv5-discovery",
                            "description": "Enable Discv5 discovery"
                        },
                        {
                            "option": "--from",
                            "description": "The height to start at",
                            "value": "<FROM>"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--identity",
                            "description": "Custom node identity",
                            "value": "<IDENTITY>",
                            "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - DISCOVERY_PORT: default + instance - 1 - AUTH_PORT: default + instance * 100 - 100 - HTTP_RPC_PORT: default - instance + 1 - WS_RPC_PORT: default + instance * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file. Possible values: json, log-fmt, terminal",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout. Possible values: json, log-fmt, terminal",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--max-inbound-peers",
                            "description": "Maximum number of inbound requests. default: 30",
                            "value": "<MAX_INBOUND_PEERS>"
                        },
                        {
                            "option": "--max-outbound-peers",
                            "description": "Maximum number of outbound requests. default: 100",
                            "value": "<MAX_OUTBOUND_PEERS>"
                        },
                        {
                            "option": "--max-pending-imports",
                            "description": "Max number of transactions to import concurrently.",
                            "value": "<COUNT>",
                            "default": "4096"
                        },
                        {
                            "option": "--max-seen-tx-history",
                            "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                            "value": "<COUNT>",
                            "default": "320"
                        },
                        {
                            "option": "--max-tx-pending-fetch",
                            "description": "Max capacity of cache of hashes for transactions pending fetch.",
                            "value": "<COUNT>",
                            "default": "25600"
                        },
                        {
                            "option": "--max-tx-reqs",
                            "description": "Max concurrent GetPooledTransactions requests.",
                            "value": "<COUNT>",
                            "default": "130"
                        },
                        {
                            "option": "--max-tx-reqs-peer",
                            "description": "Max concurrent GetPooledTransactions requests per peer.",
                            "value": "<COUNT>",
                            "default": "1"
                        },
                        {
                            "option": "--metrics",
                            "description": "Enable Prometheus metrics. The metrics will be served at the given interface and port.",
                            "value": "<SOCKET>"
                        },
                        {
                            "option": "--nat",
                            "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                            "value": "<NAT>",
                            "default": "any"
                        },
                        {
                            "option": "--net-if.experimental",
                            "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker eth0 is tried.",
                            "value": "<IF_NAME>"
                        },
                        {
                            "option": "--no-persist-peers",
                            "description": "Do not persist peers."
                        },
                        {
                            "option": "--p2p-secret-key",
                            "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--peers-file",
                            "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with --no-persist-peers.",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--pooled-tx-pack-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since RLPx protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see RLPx specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB.",
                            "value": "<BYTES>",
                            "default": "131072"
                        },
                        {
                            "option": "--pooled-tx-response-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                            "value": "<BYTES>",
                            "default": "2097152"
                        },
                        {
                            "option": "--port",
                            "description": "Network listening port",
                            "value": "<PORT>",
                            "default": "30303"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "--skip-unwind",
                            "shortcut": "-s",
                            "description": "Normally, running the stage requires unwinding for stages that already have been run, in order to not rewrite to the same database slots. You can optionally skip the unwinding phase if you're syncing a block range that has not been synced before."
                        },
                        {
                            "option": "--to",
                            "shortcut": "-t",
                            "description": "The end of the stage",
                            "value": "<TO>"
                        },
                        {
                            "option": "--trusted-only",
                            "description": "Connect to or accept from trusted peers only"
                        },
                        {
                            "option": "--trusted-peers",
                            "description": "Comma separated enode URLs of trusted peers for P2P connections. --trusted-peers enode://abcd@192.168.0.1:30303",
                            "value": "<TRUSTED_PEERS>"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": [
                        {
                            "name": "reth stage run stage",
                            "subcommands": [],
                            "options": []
                        }
                    ]
                },
                {
                    "name": "reth stage unwind",
                    "description": "Unwinds a certain block range, deleting it from the database",
                    "usage": "Usage: reth stage unwind [OPTIONS] <COMMAND>",
                    "subcommands": [
                        {
                            "name": "reth stage unwind num-blocks",
                            "description": "Unwinds the database from the latest block, until the given number of blocks have been reached",
                            "usage": "Usage: reth stage unwind num-blocks [OPTIONS] <AMOUNT>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "default": "always",
                                    "value": "<COLOR>",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node.\nConfigures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.\nMax number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.\nChanges to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "default": "1",
                                    "value": "<INSTANCE>"
                                },
                                {
                                    "shortcut": "-h",
                                    "option": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "default": "/home/ahmad/.cache/reth/logs",
                                    "value": "<PATH>"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "default": "debug",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "default": "terminal",
                                    "value": "<FORMAT>",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "default": "5",
                                    "value": "<COUNT>"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "default": "200",
                                    "value": "<SIZE>"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "default": "error",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "default": "",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "default": "terminal",
                                    "value": "<FORMAT>",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "shortcut": "-q",
                                    "option": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "shortcut": "-v",
                                    "option": "--verbosity",
                                    "description": "Set the minimum log level.\n-v      Errors\n-vv     Warnings\n-vvv    Info\n-vvvv   Debug\n-vvvvv  Traces (warning: very verbose!)"
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "reth stage unwind to-block",
                            "description": "Unwinds the database from the latest block, until the given block number or hash has been reached, that block is not included",
                            "usage": "Usage: reth stage unwind to-block [OPTIONS] <TARGET>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "default": "always",
                                    "value": "<COLOR>",
                                    "tags": [
                                        "always: Colors on",
                                        "auto: Colors on",
                                        "never: Colors off"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "default": "1",
                                    "value": "<INSTANCE>"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "default": "/home/ahmad/.cache/reth/logs",
                                    "value": "<PATH>"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "default": "debug",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "default": "terminal",
                                    "value": "<FORMAT>",
                                    "tags": [
                                        "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                        "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                        "terminal: Represents terminal-friendly formatting for logs"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "default": "5",
                                    "value": "<COUNT>"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "default": "200",
                                    "value": "<SIZE>"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "default": "error",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "default": "",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "default": "terminal",
                                    "value": "<FORMAT>",
                                    "tags": [
                                        "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                        "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                        "terminal: Represents terminal-friendly formatting for logs"
                                    ]
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "-v Errors",
                                        "-vv Warnings",
                                        "-vvv Info",
                                        "-vvvv Debug",
                                        "-vvvvv Traces (warning: very verbose!)"
                                    ]
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--addr",
                            "description": "Network listening address",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--bootnodes",
                            "description": "Comma separated enode URLs for P2P discovery bootstrap. Will fall back to a network-specific default if not specified."
                        },
                        {
                            "option": "--chain",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
                            "default": "mainnet"
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "tags": [
                                "always",
                                "auto",
                                "never"
                            ]
                        },
                        {
                            "option": "--config",
                            "description": "The path to the configuration file to use"
                        },
                        {
                            "option": "--datadir",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "description": "The absolute path to store static files in."
                        },
                        {
                            "option": "--db.exclusive",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "tags": [
                                "true",
                                "false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "description": "Database growth step (e.g., 4GB, 4KB)"
                        },
                        {
                            "option": "--db.log-level",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                            "tags": [
                                "fatal",
                                "error",
                                "warn",
                                "notice",
                                "verbose",
                                "debug",
                                "trace",
                                "extra"
                            ]
                        },
                        {
                            "option": "--db.max-size",
                            "description": "Maximum database size (e.g., 4TB, 8MB)"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "description": "Read transaction timeout in seconds, 0 means no timeout"
                        },
                        {
                            "option": "--disable-dns-discovery",
                            "description": "Disable the DNS discovery"
                        },
                        {
                            "option": "--disable-discv4-discovery",
                            "description": "Disable Discv4 discovery"
                        },
                        {
                            "option": "--disable-discovery",
                            "shortcut": "-d",
                            "description": "Disable the discovery service"
                        },
                        {
                            "option": "--disable-nat",
                            "description": "Disable Nat discovery"
                        },
                        {
                            "option": "--discovery.addr",
                            "description": "The UDP address to use for devp2p peer discovery version 4",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--discovery.port",
                            "description": "The UDP port to use for devp2p peer discovery version 4",
                            "default": "30303"
                        },
                        {
                            "option": "--discovery.v5.addr",
                            "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4"
                        },
                        {
                            "option": "--discovery.v5.addr.ipv6",
                            "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-countdown",
                            "description": "The number of times to carry out boost lookup queries at bootstrap",
                            "default": "100"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-interval",
                            "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                            "default": "5"
                        },
                        {
                            "option": "--discovery.v5.lookup-interval",
                            "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                            "default": "60"
                        },
                        {
                            "option": "--discovery.v5.port",
                            "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                            "default": "9200"
                        },
                        {
                            "option": "--discovery.v5.port.ipv6",
                            "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                            "default": "9200"
                        },
                        {
                            "option": "--dns-retries",
                            "description": "Amount of DNS resolution requests retries to perform when peering",
                            "default": "0"
                        },
                        {
                            "option": "--enable-discv5-discovery",
                            "description": "Enable Discv5 discovery"
                        },
                        {
                            "option": "--identity",
                            "description": "Custom node identity",
                            "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--max-inbound-peers",
                            "description": "Maximum number of inbound requests.",
                            "default": "30"
                        },
                        {
                            "option": "--max-outbound-peers",
                            "description": "Maximum number of outbound requests.",
                            "default": "100"
                        },
                        {
                            "option": "--max-pending-imports",
                            "description": "Max number of transactions to import concurrently.",
                            "default": "4096"
                        },
                        {
                            "option": "--max-seen-tx-history",
                            "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                            "default": "320"
                        },
                        {
                            "option": "--max-tx-pending-fetch",
                            "description": "Max capacity of cache of hashes for transactions pending fetch.",
                            "default": "25600"
                        },
                        {
                            "option": "--max-tx-reqs",
                            "description": "Max concurrent `GetPooledTransactions` requests.",
                            "default": "130"
                        },
                        {
                            "option": "--max-tx-reqs-peer",
                            "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                            "default": "1"
                        },
                        {
                            "option": "--nat",
                            "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                            "default": "any"
                        },
                        {
                            "option": "--net-if.experimental",
                            "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried."
                        },
                        {
                            "option": "--no-persist-peers",
                            "description": "Do not persist peers."
                        },
                        {
                            "option": "--offline",
                            "description": "If this is enabled, then all stages except headers, bodies, and sender recovery will be unwound"
                        },
                        {
                            "option": "--p2p-secret-key",
                            "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used."
                        },
                        {
                            "option": "--peers-file",
                            "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with `--no-persist-peers`."
                        },
                        {
                            "option": "--pooled-tx-pack-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see `RLPx` specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB. Default is 128 KiB.",
                            "default": "131072"
                        },
                        {
                            "option": "--pooled-tx-response-soft-limit",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                            "default": "2097152"
                        },
                        {
                            "option": "--port",
                            "description": "Network listening port",
                            "default": "30303"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "--trusted-only",
                            "description": "Connect to or accept from trusted peers only"
                        },
                        {
                            "option": "--trusted-peers",
                            "description": "Comma separated enode URLs of trusted peers for P2P connections. --trusted-peers enode://abcd@192.168.0.1:30303"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Set the minimum log level. -v      Errors -vv     Warnings -vvv    Info -vvvv   Debug -vvvvv  Traces (warning: very verbose!)"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        }
                    ]
                }
            ],
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file.",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "mainnet"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>"
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity...",
                    "description": "Set the minimum log level."
                }
            ]
        }
    ],
    "options": [
        {
            "option": "--chain",
            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: mainnet, sepolia, holesky, dev",
            "value": "<CHAIN_OR_PATH>",
            "default": "mainnet"
        },
        {
            "option": "--color",
            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
            "value": "<COLOR>",
            "default": "always"
        },
        {
            "option": "--instance",
            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults.",
            "value": "<INSTANCE>",
            "default": "1"
        },
        {
            "option": "--log.file.directory",
            "description": "The path to put log files in",
            "value": "<PATH>",
            "default": "/home/ahmad/.cache/reth/logs"
        },
        {
            "option": "--log.file.filter",
            "description": "The filter to use for logs written to the log file",
            "value": "<FILTER>",
            "default": "debug"
        },
        {
            "option": "--log.file.format",
            "description": "The format to use for logs written to the log file",
            "value": "<FORMAT>",
            "default": "terminal"
        },
        {
            "option": "--log.file.max-files",
            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
            "value": "<COUNT>",
            "default": "5"
        },
        {
            "option": "--log.file.max-size",
            "description": "The maximum size (in MB) of one log file",
            "value": "<SIZE>",
            "default": "200"
        },
        {
            "option": "--log.journald",
            "description": "Write logs to journald"
        },
        {
            "option": "--log.journald.filter",
            "description": "The filter to use for logs written to journald",
            "value": "<FILTER>",
            "default": "error"
        },
        {
            "option": "--log.stdout.filter",
            "description": "The filter to use for logs written to stdout",
            "value": "<FILTER>",
            "default": ""
        },
        {
            "option": "--log.stdout.format",
            "description": "The format to use for logs written to stdout",
            "value": "<FORMAT>",
            "default": "terminal"
        },
        {
            "option": "-h",
            "shortcut": "--help",
            "description": "Print help (see a summary with '-h')"
        },
        {
            "option": "-q",
            "shortcut": "--quiet",
            "description": "Silence all log output"
        },
        {
            "option": "-v",
            "shortcut": "--verbosity",
            "description": "Set the minimum log level."
        },
        {
            "option": "-V",
            "shortcut": "--version",
            "description": "Print version"
        }
    ],
    "version": "1.1.2"
}