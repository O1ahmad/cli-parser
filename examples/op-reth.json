{
    "name": "reth",
    "description": "Reth is a command-line tool for managing the Reth node and its components.",
    "usage": "Usage: reth [OPTIONS] <COMMAND>",
    "subcommands": [
        {
            "description": "Write config to stdout",
            "name": "reth config",
            "usage": "reth config [OPTIONS]",
            "options": [
                {
                    "option": "--chain",
                    "value": "<CHAIN_OR_PATH>",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "default": "dev"
                },
                {
                    "option": "--color",
                    "value": "<COLOR>",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "default": "always",
                    "tags": [
                        "always",
                        "auto",
                        "never"
                    ]
                },
                {
                    "option": "--config",
                    "value": "<FILE>",
                    "description": "The path to the configuration file to use."
                },
                {
                    "option": "--default",
                    "description": "Show the default config"
                },
                {
                    "option": "--instance",
                    "value": "<INSTANCE>",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "value": "<PATH>",
                    "description": "The path to put log files in",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to the log file",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to the log file",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--log.file.max-files",
                    "value": "<COUNT>",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "value": "<SIZE>",
                    "description": "The maximum size (in MB) of one log file",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to journald",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to stdout",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to stdout",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "shortcut": "-h",
                    "option": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "shortcut": "-q",
                    "option": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "shortcut": "-v",
                    "option": "--verbosity",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                }
            ],
            "subcommands": []
        },
        {
            "name": "reth db",
            "description": "Database debugging utilities",
            "usage": "Usage: reth db [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "reth db checksum",
                    "description": "Calculates the content checksum of a table",
                    "usage": "Usage: reth db checksum [OPTIONS] <TABLE>",
                    "subcommands": [],
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--end-key",
                            "description": "The end of the range to checksum",
                            "value": "<END_KEY>"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--limit",
                            "description": "The maximum number of records that are queried and used to compute the checksum",
                            "value": "<LIMIT>"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--start-key",
                            "description": "The start of the range to checksum",
                            "value": "<START_KEY>"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level."
                        }
                    ]
                },
                {
                    "name": "reth db clear",
                    "description": "Deletes all table entries",
                    "usage": "reth db clear [OPTIONS] <COMMAND>",
                    "subcommands": [
                        {
                            "name": "reth db clear mdbx",
                            "description": "Deletes all database table entries",
                            "usage": "reth db clear mdbx [OPTIONS] <TABLE>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "default": "always",
                                    "tags": [
                                        "always: Colors on",
                                        "auto: Colors on",
                                        "never: Colors off"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                        "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                        "terminal: Represents terminal-friendly formatting for logs"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                        "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                        "terminal: Represents terminal-friendly formatting for logs"
                                    ]
                                },
                                {
                                    "option": "--quiet",
                                    "shortcut": "-q",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "--help",
                                    "shortcut": "-h",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "--verbosity",
                                    "shortcut": "-v",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "-v Errors",
                                        "-vv Warnings",
                                        "-vvv Info",
                                        "-vvvv Debug",
                                        "-vvvvv Traces (warning: very verbose!)"
                                    ]
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "reth db clear static-file",
                            "description": "Deletes all static file segment entries",
                            "usage": "Usage: reth db clear static-file [OPTIONS] <SEGMENT>",
                            "options": [
                                {
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting\n\nPossible values:\n- always: Colors on\n- auto:   Colors on\n- never:  Colors off",
                                    "option": "--color",
                                    "default": "always",
                                    "value": "<COLOR>"
                                },
                                {
                                    "description": "Write logs to journald",
                                    "option": "--log.journald"
                                },
                                {
                                    "description": "The filter to use for logs written to journald",
                                    "option": "--log.journald.filter",
                                    "default": "error",
                                    "value": "<FILTER>"
                                },
                                {
                                    "description": "The format to use for logs written to the log file\n\nPossible values:\n- json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n- log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n- terminal: Represents terminal-friendly formatting for logs",
                                    "option": "--log.file.format",
                                    "default": "terminal",
                                    "value": "<FORMAT>"
                                },
                                {
                                    "description": "The filter to use for logs written to the log file",
                                    "option": "--log.file.filter",
                                    "default": "debug",
                                    "value": "<FILTER>"
                                },
                                {
                                    "description": "The path to put log files in",
                                    "option": "--log.file.directory",
                                    "default": "/home/ahmad/.cache/reth/logs",
                                    "value": "<PATH>"
                                },
                                {
                                    "description": "The maximum size (in MB) of one log file",
                                    "option": "--log.file.max-size",
                                    "default": "200",
                                    "value": "<SIZE>"
                                },
                                {
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "option": "--log.file.max-files",
                                    "default": "5",
                                    "value": "<COUNT>"
                                },
                                {
                                    "description": "The format to use for logs written to stdout\n\nPossible values:\n- json:     Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging\n- log-fmt:  Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications\n- terminal: Represents terminal-friendly formatting for logs",
                                    "option": "--log.stdout.format",
                                    "default": "terminal",
                                    "value": "<FORMAT>"
                                },
                                {
                                    "description": "The filter to use for logs written to stdout",
                                    "option": "--log.stdout.filter",
                                    "default": "",
                                    "value": "<FILTER>"
                                },
                                {
                                    "description": "Add a new instance of a node.\n\nConfigures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.\n\nMax number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.\n\nChanges to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "option": "--instance",
                                    "default": "1",
                                    "value": "<INSTANCE>"
                                },
                                {
                                    "description": "Print help (see a summary with '-h')",
                                    "option": "--help",
                                    "shortcut": "-h"
                                },
                                {
                                    "description": "Silence all log output",
                                    "option": "--quiet",
                                    "shortcut": "-q"
                                },
                                {
                                    "description": "Set the minimum log level.\n\n-v      Errors\n-vv     Warnings\n-vvv    Info\n-vvvv   Debug\n-vvvvv  Traces (warning: very verbose!)",
                                    "option": "--verbosity",
                                    "shortcut": "-v"
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        }
                    ]
                },
                {
                    "description": "Create a diff between two database tables or two entire databases",
                    "name": "reth db diff",
                    "options": [
                        {
                            "default": "always",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "option": "--color",
                            "tags": [
                                "always",
                                "auto",
                                "never"
                            ]
                        },
                        {
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "option": "--db.exclusive",
                            "tags": [
                                "true",
                                "false"
                            ]
                        },
                        {
                            "description": "Database growth step (e.g., 4GB, 4KB)",
                            "option": "--db.growth-step",
                            "value": "<GROWTH_STEP>"
                        },
                        {
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                            "option": "--db.log-level",
                            "tags": [
                                "fatal",
                                "error",
                                "warn",
                                "notice",
                                "verbose",
                                "debug",
                                "trace",
                                "extra"
                            ],
                            "value": "<LOG_LEVEL>"
                        },
                        {
                            "description": "Maximum database size (e.g., 4TB, 8MB)",
                            "option": "--db.max-size",
                            "value": "<MAX_SIZE>"
                        },
                        {
                            "description": "Read transaction timeout in seconds, 0 means no timeout",
                            "option": "--db.read-transaction-timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>"
                        },
                        {
                            "default": "1",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "option": "--instance",
                            "value": "<INSTANCE>"
                        },
                        {
                            "description": "Write logs to journald",
                            "option": "--log.journald"
                        },
                        {
                            "default": "error",
                            "description": "The filter to use for logs written to journald",
                            "option": "--log.journald.filter",
                            "value": "<FILTER>"
                        },
                        {
                            "default": "/home/ahmad/.cache/reth/logs",
                            "description": "The path to put log files in",
                            "option": "--log.file.directory",
                            "value": "<PATH>"
                        },
                        {
                            "default": "terminal",
                            "description": "The format to use for logs written to the log file",
                            "option": "--log.file.format",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ],
                            "value": "<FORMAT>"
                        },
                        {
                            "default": "debug",
                            "description": "The filter to use for logs written to the log file",
                            "option": "--log.file.filter",
                            "value": "<FILTER>"
                        },
                        {
                            "default": "5",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "option": "--log.file.max-files",
                            "value": "<COUNT>"
                        },
                        {
                            "default": "200",
                            "description": "The maximum size (in MB) of one log file",
                            "option": "--log.file.max-size",
                            "value": "<SIZE>"
                        },
                        {
                            "default": "terminal",
                            "description": "The format to use for logs written to stdout",
                            "option": "--log.stdout.format",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ],
                            "value": "<FORMAT>"
                        },
                        {
                            "default": "",
                            "description": "The filter to use for logs written to stdout",
                            "option": "--log.stdout.filter",
                            "value": "<FILTER>"
                        },
                        {
                            "description": "The output directory for the diff report.",
                            "option": "--output",
                            "value": "<OUTPUT>"
                        },
                        {
                            "description": "The path to the data dir for all reth files and subdirectories.",
                            "option": "--secondary-datadir",
                            "value": "<SECONDARY_DATADIR>"
                        },
                        {
                            "description": "The table name to diff. If not specified, all tables are diffed.",
                            "option": "--table",
                            "value": "<TABLE>"
                        },
                        {
                            "description": "Silence all log output",
                            "option": "--quiet",
                            "shortcut": "-q"
                        },
                        {
                            "description": "Print help (see a summary with '-h')",
                            "option": "--help",
                            "shortcut": "-h"
                        },
                        {
                            "description": "Set the minimum log level.",
                            "option": "--verbosity",
                            "shortcut": "-v"
                        }
                    ],
                    "usage": "reth db diff [OPTIONS] --secondary-datadir <SECONDARY_DATADIR> --output <OUTPUT>",
                    "subcommands": []
                },
                {
                    "description": "Deletes all database entries",
                    "name": "reth db drop",
                    "usage": "Usage: reth db drop [OPTIONS]",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-f",
                            "shortcut": "--force",
                            "description": "Bypasses the interactive confirmation and drops the database directly"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "..."
                            ]
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth db get",
                    "description": "Gets the content of a table for the given key",
                    "usage": "Usage: reth db get [OPTIONS] <COMMAND>",
                    "subcommands": [
                        {
                            "name": "reth db get mdbx",
                            "description": "Gets the content of a database table for the given key",
                            "usage": "Usage: reth db get mdbx [OPTIONS] <TABLE> <KEY> [SUBKEY]",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--raw",
                                    "description": "Output bytes instead of human-readable decoded value"
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity",
                                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "description": "Gets the content of a static file segment for the given key",
                            "name": "reth db get static-file",
                            "usage": "Usage: reth db get static-file [OPTIONS] <SEGMENT> <KEY>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--quiet",
                                    "shortcut": "-q",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "--raw",
                                    "description": "Output bytes instead of human-readable decoded value"
                                },
                                {
                                    "option": "--help",
                                    "shortcut": "-h",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "--verbosity",
                                    "shortcut": "-v",
                                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "tags": [
                                "always: Colors on",
                                "auto: Colors on",
                                "never: Colors off"
                            ]
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node.\n\nConfigures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.\n\nMax number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.\n\nChanges to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                "terminal: Represents terminal-friendly formatting for logs"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                "terminal: Represents terminal-friendly formatting for logs"
                            ]
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "-v Errors",
                                "-vv Warnings",
                                "-vvv Info",
                                "-vvvv Debug",
                                "-vvvvv Traces (warning: very verbose!)"
                            ]
                        }
                    ]
                },
                {
                    "name": "reth db list",
                    "description": "Lists the contents of a table",
                    "usage": "reth db list [OPTIONS] <TABLE>",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "shortcut": "-i",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200.",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--min-key-size",
                            "description": "Minimum size of key in bytes",
                            "value": "<MIN_KEY_SIZE>",
                            "default": "0"
                        },
                        {
                            "option": "--min-row-size",
                            "description": "Minimum size of row in bytes",
                            "value": "<MIN_ROW_SIZE>",
                            "default": "0"
                        },
                        {
                            "option": "--min-value-size",
                            "description": "Minimum size of value in bytes",
                            "value": "<MIN_VALUE_SIZE>",
                            "default": "0"
                        },
                        {
                            "option": "--raw",
                            "description": "Output bytes instead of human-readable decoded value"
                        },
                        {
                            "option": "--search",
                            "description": "Search parameter for both keys and values. Prefix it with `0x` to search for binary data, and text otherwise.",
                            "value": "<SEARCH>"
                        },
                        {
                            "option": "-c",
                            "shortcut": "--count",
                            "description": "Returns the number of rows found"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-j",
                            "shortcut": "--json",
                            "description": "Dump as JSON instead of using TUI"
                        },
                        {
                            "option": "-l",
                            "shortcut": "--len",
                            "description": "How many items to take from the walker",
                            "value": "<LEN>",
                            "default": "5"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-r",
                            "shortcut": "--reverse",
                            "description": "Reverse the order of the entries. If enabled last table entries are read"
                        },
                        {
                            "option": "-s",
                            "shortcut": "--skip",
                            "description": "Skip first N entries",
                            "value": "<SKIP>",
                            "default": "0"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "Errors",
                                "Warnings",
                                "Info",
                                "Debug",
                                "Traces"
                            ]
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth db path",
                    "description": "Returns the full database path",
                    "usage": "reth db path [OPTIONS]",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node.\n\nConfigures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.\n\nMax number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.\n\nChanges to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity...",
                            "description": "Set the minimum log level."
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth db stats",
                    "description": "Lists all the tables, their entry count and their size",
                    "usage": "reth db stats [OPTIONS]",
                    "options": [
                        {
                            "option": "--checksum",
                            "description": "Show a checksum of each table in the database. WARNING: this option will take a long time to run, as it needs to traverse and hash the entire database. For individual table checksums, use the `reth db checksum` command."
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--detailed-segments",
                            "description": "Show detailed information per static file segment"
                        },
                        {
                            "option": "--detailed-sizes",
                            "description": "Show only the total size for static files"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "..."
                            ]
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth db version",
                    "description": "Lists current and local database versions",
                    "usage": "reth db version [OPTIONS]",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "-v      Errors",
                                "-vv     Warnings",
                                "-vvv    Info",
                                "-vvvv   Debug",
                                "-vvvvv  Traces (warning: very verbose!)"
                            ]
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "dev"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--config",
                    "description": "The path to the configuration file to use",
                    "value": "<FILE>"
                },
                {
                    "option": "--datadir",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/ - Windows: {FOLDERID_RoamingAppData}/reth/ - macOS: $HOME/Library/Application Support/reth/",
                    "value": "<DATA_DIR>",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "description": "The absolute path to store static files in.",
                    "value": "<PATH>"
                },
                {
                    "option": "--db.exclusive",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "value": "<EXCLUSIVE>"
                },
                {
                    "option": "--db.growth-step",
                    "description": "Database growth step (e.g., 4GB, 4KB)",
                    "value": "<GROWTH_STEP>"
                },
                {
                    "option": "--db.log-level",
                    "description": "Database logging level. Levels higher than 'notice' require a debug build",
                    "value": "<LOG_LEVEL>"
                },
                {
                    "option": "--db.max-size",
                    "description": "Maximum database size (e.g., 4TB, 8MB)",
                    "value": "<MAX_SIZE>"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "description": "Read transaction timeout in seconds, 0 means no timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - DISCOVERY_PORT: default + instance - 1 - AUTH_PORT: default + instance * 100 - 100 - HTTP_RPC_PORT: default - instance + 1 - WS_RPC_PORT: default + instance * 2 - 2",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity...",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                }
            ]
        },
        {
            "name": "reth dump-genesis",
            "description": "Dumps genesis block JSON configuration to stdout",
            "usage": "Usage: reth dump-genesis [OPTIONS]",
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "dev"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting Possible values: - always: Colors on - auto: Colors on - never: Colors off",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file Possible values: - json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging - log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications - terminal: Represents terminal-friendly formatting for logs",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout Possible values: - json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging - log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications - terminal: Represents terminal-friendly formatting for logs",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                }
            ],
            "subcommands": []
        },
        {
            "description": "This syncs RLP encoded OP blocks below Bedrock from a file, without executing",
            "name": "reth import-op",
            "usage": "Usage: reth import-op [OPTIONS] <IMPORT_PATH>",
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "dev"
                },
                {
                    "option": "--chunk-len",
                    "description": "Chunk byte length to read from file.",
                    "value": "<CHUNK_LEN>"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting. Possible values: always, auto, never",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--config",
                    "description": "The path to the configuration file to use",
                    "value": "<FILE>"
                },
                {
                    "option": "--datadir",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/ - Windows: {FOLDERID_RoamingAppData}/reth/ - macOS: $HOME/Library/Application Support/reth/",
                    "value": "<DATA_DIR>",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "description": "The absolute path to store static files in.",
                    "value": "<PATH>"
                },
                {
                    "option": "--db.exclusive",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "value": "<EXCLUSIVE>"
                },
                {
                    "option": "--db.growth-step",
                    "description": "Database growth step (e.g., 4GB, 4KB)",
                    "value": "<GROWTH_STEP>"
                },
                {
                    "option": "--db.log-level",
                    "description": "Database logging level. Levels higher than notice require a debug build. Possible values: fatal, error, warn, notice, verbose, debug, trace, extra",
                    "value": "<LOG_LEVEL>"
                },
                {
                    "option": "--db.max-size",
                    "description": "Maximum database size (e.g., 4TB, 8MB)",
                    "value": "<MAX_SIZE>"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "description": "Read transaction timeout in seconds, 0 means no timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - DISCOVERY_PORT: default + instance - 1 - AUTH_PORT: default + instance * 100 - 100 - HTTP_RPC_PORT: default - instance + 1 - WS_RPC_PORT: default + instance * 2 - 2",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file. Possible values: json, log-fmt, terminal",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout. Possible values: json, log-fmt, terminal",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                }
            ],
            "subcommands": []
        },
        {
            "name": "reth import-receipts-op",
            "description": "This imports RLP encoded receipts from a file",
            "usage": "Usage: reth import-receipts-op [OPTIONS] <IMPORT_PATH>",
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "dev"
                },
                {
                    "option": "--chunk-len",
                    "description": "Chunk byte length to read from file.",
                    "value": "<CHUNK_LEN>"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always",
                    "tags": [
                        "always",
                        "auto",
                        "never"
                    ]
                },
                {
                    "option": "--config",
                    "description": "The path to the configuration file to use",
                    "value": "<FILE>"
                },
                {
                    "option": "--datadir",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`, Windows: `{FOLDERID_RoamingAppData}/reth/`, macOS: `$HOME/Library/Application Support/reth/`",
                    "value": "<DATA_DIR>",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "description": "The absolute path to store static files in.",
                    "value": "<PATH>"
                },
                {
                    "option": "--db.exclusive",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "value": "<EXCLUSIVE>",
                    "tags": [
                        "true",
                        "false"
                    ]
                },
                {
                    "option": "--db.growth-step",
                    "description": "Database growth step (e.g., 4GB, 4KB)",
                    "value": "<GROWTH_STEP>"
                },
                {
                    "option": "--db.log-level",
                    "description": "Database logging level. Levels higher than \"notice\" require a debug build. Possible values: fatal, error, warn, notice, verbose, debug, trace, extra",
                    "value": "<LOG_LEVEL>"
                },
                {
                    "option": "--db.max-size",
                    "description": "Maximum database size (e.g., 4TB, 8MB)",
                    "value": "<MAX_SIZE>"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "description": "Read transaction timeout in seconds, 0 means no timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.",
                    "value": "<INSTANCE>",
                    "default": 1
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file. Possible values: json, log-fmt, terminal",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": 5
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": 200
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout. Possible values: json, log-fmt, terminal",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level. -v Errors, -vv Warnings, -vvv Info, -vvvv Debug, -vvvvv Traces (warning: very verbose!)"
                }
            ],
            "subcommands": []
        },
        {
            "name": "reth init",
            "description": "Initialize the database from a genesis file",
            "usage": "Usage: reth init [OPTIONS]",
            "options": [
                {
                    "option": "--chain",
                    "value": "<CHAIN_OR_PATH>",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "default": "dev"
                },
                {
                    "option": "--color",
                    "value": "<COLOR>",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "default": "always",
                    "tags": [
                        "always",
                        "auto",
                        "never"
                    ]
                },
                {
                    "option": "--config",
                    "value": "<FILE>",
                    "description": "The path to the configuration file to use"
                },
                {
                    "option": "--datadir",
                    "value": "<DATA_DIR>",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: Linux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/, Windows: {FOLDERID_RoamingAppData}/reth/, macOS: $HOME/Library/Application Support/reth/",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "value": "<PATH>",
                    "description": "The absolute path to store static files in."
                },
                {
                    "option": "--db.exclusive",
                    "value": "<EXCLUSIVE>",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "tags": [
                        "true",
                        "false"
                    ]
                },
                {
                    "option": "--db.growth-step",
                    "value": "<GROWTH_STEP>",
                    "description": "Database growth step (e.g., 4GB, 4KB)"
                },
                {
                    "option": "--db.log-level",
                    "value": "<LOG_LEVEL>",
                    "description": "Database logging level. Levels higher than 'notice' require a debug build",
                    "tags": [
                        "fatal",
                        "error",
                        "warn",
                        "notice",
                        "verbose",
                        "debug",
                        "trace",
                        "extra"
                    ]
                },
                {
                    "option": "--db.max-size",
                    "value": "<MAX_SIZE>",
                    "description": "Maximum database size (e.g., 4TB, 8MB)"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>",
                    "description": "Read transaction timeout in seconds, 0 means no timeout"
                },
                {
                    "option": "--instance",
                    "value": "<INSTANCE>",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: DISCOVERY_PORT: default + instance - 1, AUTH_PORT: default + instance * 100 - 100, HTTP_RPC_PORT: default - instance + 1, WS_RPC_PORT: default + instance * 2 - 2",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "value": "<PATH>",
                    "description": "The path to put log files in",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to the log file",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to the log file",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--log.file.max-files",
                    "value": "<COUNT>",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "value": "<SIZE>",
                    "description": "The maximum size (in MB) of one log file",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to journald",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to stdout",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to stdout",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity...",
                    "description": "Set the minimum log level. -v Errors, -vv Warnings, -vvv Info, -vvvv Debug, -vvvvv Traces (warning: very verbose!)"
                }
            ],
            "subcommands": []
        },
        {
            "name": "reth init-state",
            "description": "Initialize the database from a state dump file",
            "usage": "Usage: reth init-state [OPTIONS] <STATE_DUMP_FILE>",
            "options": [
                {
                    "option": "--chain",
                    "value": "<CHAIN_OR_PATH>",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "default": "dev"
                },
                {
                    "option": "--color",
                    "value": "<COLOR>",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "default": "always"
                },
                {
                    "option": "--config",
                    "value": "<FILE>",
                    "description": "The path to the configuration file to use"
                },
                {
                    "option": "--datadir",
                    "value": "<DATA_DIR>",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "value": "<PATH>",
                    "description": "The absolute path to store static files in."
                },
                {
                    "option": "--db.exclusive",
                    "value": "<EXCLUSIVE>",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume"
                },
                {
                    "option": "--db.growth-step",
                    "value": "<GROWTH_STEP>",
                    "description": "Database growth step (e.g., 4GB, 4KB)"
                },
                {
                    "option": "--db.log-level",
                    "value": "<LOG_LEVEL>",
                    "description": "Database logging level. Levels higher than \"notice\" require a debug build"
                },
                {
                    "option": "--db.max-size",
                    "value": "<MAX_SIZE>",
                    "description": "Maximum database size (e.g., 4TB, 8MB)"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>",
                    "description": "Read transaction timeout in seconds, 0 means no timeout"
                },
                {
                    "option": "--header",
                    "value": "<HEADER_FILE>",
                    "description": "Header file containing the header in an RLP encoded format."
                },
                {
                    "option": "--header-hash",
                    "value": "<HEADER_HASH>",
                    "description": "Hash of the header."
                },
                {
                    "option": "--instance",
                    "value": "<INSTANCE>",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults.",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "value": "<PATH>",
                    "description": "The path to put log files in",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to the log file",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to the log file",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "value": "<COUNT>",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "value": "<SIZE>",
                    "description": "The maximum size (in MB) of one log file",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to journald",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to stdout",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to stdout",
                    "default": "terminal"
                },
                {
                    "option": "--total-difficulty",
                    "value": "<TOTAL_DIFFICULTY>",
                    "description": "Total difficulty of the header."
                },
                {
                    "option": "--without-evm",
                    "description": "Specifies whether to initialize the state without relying on EVM historical data."
                },
                {
                    "option": "--without-ovm",
                    "description": "**Optimism Mainnet Only** Specifies whether to initialize the state without relying on OVM historical data."
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level."
                }
            ],
            "subcommands": []
        },
        {
            "name": "reth node",
            "description": "Start the node",
            "usage": "Usage: reth node [OPTIONS]",
            "options": [
                {
                    "option": "--addr",
                    "description": "Network listening address",
                    "value": "<ADDR>",
                    "default": "0.0.0.0"
                },
                {
                    "option": "--auth-ipc",
                    "description": "Enable auth engine API over IPC"
                },
                {
                    "option": "--auth-ipc.path",
                    "description": "Filename for auth IPC socket/pipe within the datadir",
                    "value": "<AUTH_IPC_PATH>",
                    "default": "/tmp/reth_engine_api.ipc"
                },
                {
                    "option": "--authrpc.addr",
                    "description": "Auth server address to listen on",
                    "value": "<AUTH_ADDR>",
                    "default": "127.0.0.1"
                },
                {
                    "option": "--authrpc.jwtsecret",
                    "description": "Path to a JWT secret to use for the authenticated engine-API RPC server.",
                    "value": "<PATH>"
                },
                {
                    "option": "--authrpc.port",
                    "description": "Auth server port to listen on",
                    "value": "<AUTH_PORT>",
                    "default": "8551"
                },
                {
                    "option": "--blobpool.pricebump",
                    "description": "Price bump percentage to replace an already existing blob transaction",
                    "value": "<BLOB_TRANSACTION_PRICE_BUMP>",
                    "default": "100"
                },
                {
                    "option": "--block-interval",
                    "description": "Minimum pruning interval measured in blocks",
                    "value": "<BLOCK_INTERVAL>"
                },
                {
                    "option": "--bootnodes",
                    "description": "Comma separated enode URLs for P2P discovery bootstrap.",
                    "value": "<BOOTNODES>"
                },
                {
                    "option": "--builder.deadline",
                    "description": "The deadline for when the payload builder job should resolve",
                    "value": "<SECONDS>",
                    "default": "12"
                },
                {
                    "option": "--builder.disallow",
                    "description": "Path to file containing disallowed addresses, json-encoded list of strings. Block validation API will reject blocks containing transactions from these addresses",
                    "value": "<PATH>"
                },
                {
                    "option": "--builder.extradata",
                    "description": "Block extra data set by the payload builder",
                    "value": "<EXTRADATA>",
                    "default": "reth/v1.1.2/linux"
                },
                {
                    "option": "--builder.gaslimit",
                    "description": "Target gas ceiling for built blocks",
                    "value": "<GAS_LIMIT>",
                    "default": "30000000"
                },
                {
                    "option": "--builder.interval",
                    "description": "The interval at which the job should build a new payload after the last.",
                    "value": "<DURATION>",
                    "default": "1"
                },
                {
                    "option": "--builder.max-tasks",
                    "description": "Maximum number of tasks to spawn for building a payload",
                    "value": "<MAX_PAYLOAD_TASKS>",
                    "default": "3"
                },
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "dev"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--config",
                    "description": "The path to the configuration file to use.",
                    "value": "<FILE>"
                },
                {
                    "option": "--datadir",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`. Windows: `{FOLDERID_RoamingAppData}/reth/`. macOS: `$HOME/Library/Application Support/reth/`",
                    "value": "<DATA_DIR>",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "description": "The absolute path to store static files in.",
                    "value": "<PATH>"
                },
                {
                    "option": "--db.exclusive",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "value": "<EXCLUSIVE>"
                },
                {
                    "option": "--db.growth-step",
                    "description": "Database growth step (e.g., 4GB, 4KB)",
                    "value": "<GROWTH_STEP>"
                },
                {
                    "option": "--db.log-level",
                    "description": "Database logging level. Levels higher than 'notice' require a debug build Possible values: - fatal: Enables logging for critical conditions, i.e. assertion failures - error: Enables logging for error conditions - warn: Enables logging for warning conditions - notice: Enables logging for normal but significant condition - verbose: Enables logging for verbose informational - debug: Enables logging for debug-level messages - trace: Enables logging for trace debug-level messages - extra: Enables logging for extra debug-level messages",
                    "value": "<LOG_LEVEL>"
                },
                {
                    "option": "--db.max-size",
                    "description": "Maximum database size (e.g., 4TB, 8MB)",
                    "value": "<MAX_SIZE>"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "description": "Read transaction timeout in seconds, 0 means no timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>"
                },
                {
                    "option": "--debug.engine-api-store",
                    "description": "The path to store engine API messages at. If specified, all of the intercepted engine API messages will be written to specified location",
                    "value": "<PATH>"
                },
                {
                    "option": "--debug.etherscan",
                    "description": "Runs a fake consensus client that advances the chain using recent block hashes on Etherscan. If specified, requires an `ETHERSCAN_API_KEY` environment variable",
                    "value": "[<ETHERSCAN_API_URL>]"
                },
                {
                    "option": "--debug.healthy-node-rpc-url",
                    "description": "The RPC URL of a healthy node to use for comparing invalid block hook results against.",
                    "value": "<URL>"
                },
                {
                    "option": "--debug.invalid-block-hook",
                    "description": "Determines which type of invalid block hook to install Example: `witness,prestate` [possible values: witness, pre-state, opcode]",
                    "value": "<INVALID_BLOCK_HOOK>",
                    "default": "witness"
                },
                {
                    "option": "--debug.max-block",
                    "description": "Runs the sync only up to the specified block",
                    "value": "<MAX_BLOCK>"
                },
                {
                    "option": "--debug.reorg-depth",
                    "description": "The reorg depth for chain reorgs",
                    "value": "<REORG_DEPTH>"
                },
                {
                    "option": "--debug.reorg-frequency",
                    "description": "If provided, the chain will be reorged at specified frequency",
                    "value": "<REORG_FREQUENCY>"
                },
                {
                    "option": "--debug.rpc-consensus-ws",
                    "description": "Runs a fake consensus client using blocks fetched from an RPC `WebSocket` endpoint",
                    "value": "<RPC_CONSENSUS_WS>"
                },
                {
                    "option": "--debug.skip-fcu",
                    "description": "If provided, the engine will skip `n` consecutive FCUs",
                    "value": "<SKIP_FCU>"
                },
                {
                    "option": "--debug.skip-new-payload",
                    "description": "If provided, the engine will skip `n` consecutive new payloads",
                    "value": "<SKIP_NEW_PAYLOAD>"
                },
                {
                    "option": "--debug.terminate",
                    "description": "Flag indicating whether the node should be terminated after the pipeline sync"
                },
                {
                    "option": "--debug.tip",
                    "description": "Set the chain tip manually for testing purposes. NOTE: This is a temporary flag",
                    "value": "<TIP>"
                },
                {
                    "option": "--disable-dns-discovery",
                    "description": "Disable the DNS discovery"
                },
                {
                    "option": "--disable-discv4-discovery",
                    "description": "Disable Discv4 discovery"
                },
                {
                    "option": "--disable-nat",
                    "description": "Disable Nat discovery"
                },
                {
                    "option": "--discovery.addr",
                    "description": "The UDP address to use for devp2p peer discovery version 4",
                    "value": "<DISCOVERY_ADDR>",
                    "default": "0.0.0.0"
                },
                {
                    "option": "--discovery.port",
                    "description": "The UDP port to use for devp2p peer discovery version 4",
                    "value": "<DISCOVERY_PORT>",
                    "default": "30303"
                },
                {
                    "option": "--discovery.v5.addr",
                    "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4",
                    "value": "<DISCOVERY_V5_ADDR>"
                },
                {
                    "option": "--discovery.v5.addr.ipv6",
                    "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6",
                    "value": "<DISCOVERY_V5_ADDR_IPV6>"
                },
                {
                    "option": "--discovery.v5.bootstrap.lookup-countdown",
                    "description": "The number of times to carry out boost lookup queries at bootstrap",
                    "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN>",
                    "default": "100"
                },
                {
                    "option": "--discovery.v5.bootstrap.lookup-interval",
                    "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                    "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL>",
                    "default": "5"
                },
                {
                    "option": "--discovery.v5.lookup-interval",
                    "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                    "value": "<DISCOVERY_V5_LOOKUP_INTERVAL>",
                    "default": "60"
                },
                {
                    "option": "--discovery.v5.port",
                    "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                    "value": "<DISCOVERY_V5_PORT>",
                    "default": "9200"
                },
                {
                    "option": "--discovery.v5.port.ipv6",
                    "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                    "value": "<DISCOVERY_V5_PORT_IPV6>",
                    "default": "9200"
                },
                {
                    "option": "--dns-retries",
                    "description": "Amount of DNS resolution requests retries to perform when peering",
                    "value": "<DNS_RETRIES>",
                    "default": "0"
                },
                {
                    "option": "--enable-discv5-discovery",
                    "description": "Enable Discv5 discovery"
                },
                {
                    "option": "--engine.experimental",
                    "description": "Enable the experimental engine features on reth binary DEPRECATED: experimental engine is default now, use --engine.legacy to enable the legacy functionality"
                },
                {
                    "option": "--engine.legacy",
                    "description": "Enable the legacy engine on reth binary"
                },
                {
                    "option": "--engine.memory-block-buffer-target",
                    "description": "Configure the target number of blocks to keep in memory",
                    "value": "<MEMORY_BLOCK_BUFFER_TARGET>",
                    "default": "2"
                },
                {
                    "option": "--engine.persistence-threshold",
                    "description": "Configure persistence threshold for engine experimental",
                    "value": "<PERSISTENCE_THRESHOLD>",
                    "default": "2"
                },
                {
                    "option": "--full",
                    "description": "Run full node. Only the most recent [`MINIMUM_PRUNING_DISTANCE`] block states are stored"
                },
                {
                    "option": "--gpo.blocks",
                    "description": "Number of recent blocks to check for gas price",
                    "value": "<BLOCKS>",
                    "default": "20"
                },
                {
                    "option": "--gpo.ignoreprice",
                    "description": "Gas Price below which gpo will ignore transactions",
                    "value": "<IGNORE_PRICE>",
                    "default": "2"
                },
                {
                    "option": "--gpo.maxprice",
                    "description": "Maximum transaction priority fee(or gasprice before London Fork) to be recommended by gpo",
                    "value": "<MAX_PRICE>",
                    "default": "500000000000"
                },
                {
                    "option": "--gpo.percentile",
                    "description": "The percentile of gas prices to use for the estimate",
                    "value": "<PERCENTILE>",
                    "default": "60"
                },
                {
                    "option": "--http",
                    "description": "Enable the HTTP-RPC server"
                },
                {
                    "option": "--http.addr",
                    "description": "Http server address to listen on",
                    "value": "<HTTP_ADDR>",
                    "default": "127.0.0.1"
                },
                {
                    "option": "--http.api",
                    "description": "Rpc Modules to be configured for the HTTP server [possible values: admin, debug, eth, net, trace, txpool, web3, rpc, reth, ots, flashbots]",
                    "value": "<HTTP_API>"
                },
                {
                    "option": "--http.corsdomain",
                    "description": "Http Corsdomain to allow request from",
                    "value": "<HTTP_CORSDOMAIN>"
                },
                {
                    "option": "--http.port",
                    "description": "Http server port to listen on",
                    "value": "<HTTP_PORT>",
                    "default": "8545"
                },
                {
                    "option": "--identity",
                    "description": "Custom node identity",
                    "value": "<IDENTITY>",
                    "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--ipcdisable",
                    "description": "Disable the IPC-RPC server"
                },
                {
                    "option": "--ipcpath",
                    "description": "Filename for IPC socket/pipe within the datadir",
                    "value": "<IPCPATH>",
                    "default": "/tmp/reth.ipc"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file Possible values: - json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging - log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications - terminal: Represents terminal-friendly formatting for logs",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout Possible values: - json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging - log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications - terminal: Represents terminal-friendly formatting for logs",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--max-inbound-peers",
                    "description": "Maximum number of inbound requests.",
                    "value": "<MAX_INBOUND_PEERS>",
                    "default": "30"
                },
                {
                    "option": "--max-outbound-peers",
                    "description": "Maximum number of outbound requests.",
                    "value": "<MAX_OUTBOUND_PEERS>",
                    "default": "100"
                },
                {
                    "option": "--max-pending-imports",
                    "description": "Max number of transactions to import concurrently.",
                    "value": "<COUNT>",
                    "default": "4096"
                },
                {
                    "option": "--max-seen-tx-history",
                    "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                    "value": "<COUNT>",
                    "default": "320"
                },
                {
                    "option": "--max-tx-pending-fetch",
                    "description": "Max capacity of cache of hashes for transactions pending fetch.",
                    "value": "<COUNT>",
                    "default": "25600"
                },
                {
                    "option": "--max-tx-reqs",
                    "description": "Max concurrent `GetPooledTransactions` requests.",
                    "value": "<COUNT>",
                    "default": "130"
                },
                {
                    "option": "--max-tx-reqs-peer",
                    "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                    "value": "<COUNT>",
                    "default": "1"
                },
                {
                    "option": "--metrics",
                    "description": "Enable Prometheus metrics. The metrics will be served at the given interface and port.",
                    "value": "<SOCKET>"
                },
                {
                    "option": "--nat",
                    "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                    "value": "<NAT>",
                    "default": "any"
                },
                {
                    "option": "--net-if.experimental",
                    "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried.",
                    "value": "<IF_NAME>"
                },
                {
                    "option": "--no-persist-peers",
                    "description": "Do not persist peers."
                },
                {
                    "option": "--p2p-secret-key",
                    "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.",
                    "value": "<PATH>"
                },
                {
                    "option": "--peers-file",
                    "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with `--no-persist-peers`.",
                    "value": "<FILE>"
                },
                {
                    "option": "--pooled-tx-pack-soft-limit",
                    "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see `RLPx` specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB.",
                    "value": "<BYTES>",
                    "default": "131072"
                },
                {
                    "option": "--pooled-tx-response-soft-limit",
                    "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                    "value": "<BYTES>",
                    "default": "2097152"
                },
                {
                    "option": "--port",
                    "description": "Network listening port",
                    "value": "<PORT>",
                    "default": "30303"
                },
                {
                    "option": "--prune.accounthistory.before",
                    "description": "Prune account history before the specified block number. The specified block number is not pruned",
                    "value": "<BLOCK_NUMBER>"
                },
                {
                    "option": "--prune.accounthistory.distance",
                    "description": "Prune account before the `head-N` block number. In other words, keep last N + 1 blocks",
                    "value": "<BLOCKS>"
                },
                {
                    "option": "--prune.accounthistory.full",
                    "description": "Prunes all account history"
                },
                {
                    "option": "--prune.receipts.before",
                    "description": "Prune receipts before the specified block number. The specified block number is not pruned",
                    "value": "<BLOCK_NUMBER>"
                },
                {
                    "option": "--prune.receipts.distance",
                    "description": "Prune receipts before the `head-N` block number. In other words, keep last N + 1 blocks",
                    "value": "<BLOCKS>"
                },
                {
                    "option": "--prune.receipts.full",
                    "description": "Prunes all receipt data"
                },
                {
                    "option": "--prune.receiptslogfilter",
                    "description": "Configure receipts log filter. Format: <`address`>:<`prune_mode`>[,<`address`>:<`prune_mode`>...] Where <`prune_mode`> can be 'full', 'distance:<`blocks`>', or 'before:<`block_number`>'",
                    "value": "<FILTER_CONFIG>"
                },
                {
                    "option": "--prune.senderrecovery.before",
                    "description": "Prune sender recovery data before the specified block number. The specified block number is not pruned",
                    "value": "<BLOCK_NUMBER>"
                },
                {
                    "option": "--prune.senderrecovery.distance",
                    "description": "Prune sender recovery data before the `head-N` block number. In other words, keep last N + 1 blocks",
                    "value": "<BLOCKS>"
                },
                {
                    "option": "--prune.senderrecovery.full",
                    "description": "Prunes all sender recovery data"
                },
                {
                    "option": "--prune.storagehistory.before",
                    "description": "Prune storage history before the specified block number. The specified block number is not pruned",
                    "value": "<BLOCK_NUMBER>"
                },
                {
                    "option": "--prune.storagehistory.distance",
                    "description": "Prune storage history before the `head-N` block number. In other words, keep last N + 1 blocks",
                    "value": "<BLOCKS>"
                },
                {
                    "option": "--prune.storagehistory.full",
                    "description": "Prunes all storage history data"
                },
                {
                    "option": "--prune.transactionlookup.before",
                    "description": "Prune transaction lookup data before the specified block number. The specified block number is not pruned",
                    "value": "<BLOCK_NUMBER>"
                },
                {
                    "option": "--prune.transactionlookup.distance",
                    "description": "Prune transaction lookup data before the `head-N` block number. In other words, keep last N + 1 blocks",
                    "value": "<BLOCKS>"
                },
                {
                    "option": "--prune.transactionlookup.full",
                    "description": "Prunes all transaction lookup data"
                },
                {
                    "option": "--quiet",
                    "description": "Silence all log output",
                    "shortcut": "-q"
                },
                {
                    "option": "--rollup.compute-pending-block",
                    "description": "By default the pending block equals the latest block to save resources and not leak txs from the tx-pool, this flag enables computing of the pending block from the tx-pool instead. If `compute_pending_block` is not enabled, the payload builder will use the payload attributes from the latest block. Note that this flag is not yet functional."
                },
                {
                    "option": "--rollup.disable-tx-pool-gossip",
                    "description": "Disable transaction pool gossip"
                },
                {
                    "option": "--rollup.discovery.v4",
                    "description": "enables discovery v4 if provided"
                },
                {
                    "option": "--rollup.enable-genesis-walkback",
                    "description": "Enable walkback to genesis on startup. This is useful for re-validating the existing DB prior to beginning normal syncing"
                },
                {
                    "option": "--rollup.sequencer-http",
                    "description": "HTTP endpoint for the sequencer mempool",
                    "value": "<HTTP_URL>"
                },
                {
                    "option": "--rpc.eth-proof-window",
                    "description": "The maximum proof window for historical proof generation. This value allows for generating historical proofs up to configured number of blocks from current tip (up to `tip - window`)",
                    "value": "<RPC_ETH_PROOF_WINDOW>",
                    "default": "0"
                },
                {
                    "option": "--rpc.gascap",
                    "description": "Maximum gas limit for `eth_call` and call tracing RPC methods",
                    "value": "<GAS_CAP>",
                    "default": "50000000"
                },
                {
                    "option": "--rpc.jwtsecret",
                    "description": "Hex encoded JWT secret to authenticate the regular RPC server(s), see `--http.api` and `--ws.api`. This is __not__ used for the authenticated engine-API RPC server, see `--authrpc.jwtsecret`.",
                    "value": "<HEX>"
                },
                {
                    "option": "--rpc.max-blocks-per-filter",
                    "description": "Maximum number of blocks that could be scanned per filter request. (0 = entire chain)",
                    "value": "<COUNT>",
                    "default": "100000"
                },
                {
                    "option": "--rpc.max-connections",
                    "description": "Maximum number of RPC server connections",
                    "value": "<COUNT>",
                    "default": "500"
                },
                {
                    "option": "--rpc.max-logs-per-response",
                    "description": "Maximum number of logs that can be returned in a single response. (0 = no limit)",
                    "value": "<COUNT>",
                    "default": "20000"
                },
                {
                    "option": "--rpc.max-request-size",
                    "description": "Set the maximum RPC request payload size for both HTTP and WS in megabytes",
                    "value": "<RPC_MAX_REQUEST_SIZE>",
                    "default": "15"
                },
                {
                    "option": "--rpc.max-response-size",
                    "description": "Set the maximum RPC response payload size for both HTTP and WS in megabytes",
                    "value": "<RPC_MAX_RESPONSE_SIZE>",
                    "default": "160",
                    "tags": [
                        "aliases: rpc.returndata.limit"
                    ]
                },
                {
                    "option": "--rpc.max-simulate-blocks",
                    "description": "Maximum number of blocks for `eth_simulateV1` call",
                    "value": "<BLOCKS_COUNT>",
                    "default": "256"
                },
                {
                    "option": "--rpc.max-subscriptions-per-connection",
                    "description": "Set the maximum concurrent subscriptions per connection",
                    "value": "<RPC_MAX_SUBSCRIPTIONS_PER_CONNECTION>",
                    "default": "1024"
                },
                {
                    "option": "--rpc.max-tracing-requests",
                    "description": "Maximum number of concurrent tracing requests. By default this chooses a sensible value based on the number of available cores. Tracing requests are generally CPU bound. Choosing a value that is higher than the available CPU cores can have a negative impact on the performance of the node and affect the node's ability to maintain sync.",
                    "value": "<COUNT>",
                    "default": "10"
                },
                {
                    "option": "--rpc.proof-permits",
                    "description": "Maximum number of concurrent getproof requests",
                    "value": "<COUNT>",
                    "default": "25"
                },
                {
                    "option": "--rpc-cache.max-blocks",
                    "description": "Max number of blocks in cache",
                    "value": "<MAX_BLOCKS>",
                    "default": "5000"
                },
                {
                    "option": "--rpc-cache.max-concurrent-db-requests",
                    "description": "Max number of concurrent database requests",
                    "value": "<MAX_CONCURRENT_DB_REQUESTS>",
                    "default": "512"
                },
                {
                    "option": "--rpc-cache.max-envs",
                    "description": "Max number of bytes for cached env data",
                    "value": "<MAX_ENVS>",
                    "default": "1000"
                },
                {
                    "option": "--rpc-cache.max-receipts",
                    "description": "Max number receipts in cache",
                    "value": "<MAX_RECEIPTS>",
                    "default": "2000"
                },
                {
                    "option": "--trusted-only",
                    "description": "Connect to or accept from trusted peers only"
                },
                {
                    "option": "--trusted-peers",
                    "description": "Comma separated enode URLs of trusted peers for P2P connections. --trusted-peers enode://abcd@192.168.0.1:30303",
                    "value": "<TRUSTED_PEERS>"
                },
                {
                    "option": "--txpool.additional-validation-tasks",
                    "description": "Number of additional transaction validation tasks to spawn",
                    "value": "<ADDITIONAL_VALIDATION_TASKS>",
                    "default": "1"
                },
                {
                    "option": "--txpool.basefee-max-count",
                    "description": "Max number of transaction in the basefee sub-pool",
                    "value": "<BASEFEE_MAX_COUNT>",
                    "default": "10000"
                },
                {
                    "option": "--txpool.basefee-max-size",
                    "description": "Max size of the basefee sub-pool in megabytes",
                    "value": "<BASEFEE_MAX_SIZE>",
                    "default": "20"
                },
                {
                    "option": "--txpool.gas-limit",
                    "description": "The default enforced gas limit for transactions entering the pool",
                    "value": "<GAS_LIMIT>",
                    "default": "30000000"
                },
                {
                    "option": "--txpool.locals",
                    "description": "Flag to allow certain addresses as local",
                    "value": "<LOCALS>"
                },
                {
                    "option": "--txpool.max-account-slots",
                    "description": "Max number of executable transaction slots guaranteed per account",
                    "value": "<MAX_ACCOUNT_SLOTS>",
                    "default": "16"
                },
                {
                    "option": "--txpool.max-cached-entries",
                    "description": "The maximum number of blobs to keep in the in memory blob cache",
                    "value": "<MAX_CACHED_ENTRIES>",
                    "default": "100"
                },
                {
                    "option": "--txpool.max-new-pending-txs-notifications",
                    "description": "How many new pending transactions to buffer and send to in progress pending transaction iterators",
                    "value": "<MAX_NEW_PENDING_TXS_NOTIFICATIONS>",
                    "default": "200"
                },
                {
                    "option": "--txpool.max-new-txns",
                    "description": "Maximum number of new transactions to buffer",
                    "value": "<NEW_TX_LISTENER_BUFFER_SIZE>",
                    "default": "1024"
                },
                {
                    "option": "--txpool.max-pending-txns",
                    "description": "Maximum number of pending transactions from the network to buffer",
                    "value": "<PENDING_TX_LISTENER_BUFFER_SIZE>",
                    "default": "2048"
                },
                {
                    "option": "--txpool.max-tx-input-bytes",
                    "description": "Max size in bytes of a single transaction allowed to enter the pool",
                    "value": "<MAX_TX_INPUT_BYTES>",
                    "default": "131072"
                },
                {
                    "option": "--txpool.minimal-protocol-fee",
                    "description": "Minimum base fee required by the protocol",
                    "value": "<MINIMAL_PROTOCOL_BASEFEE>",
                    "default": "7"
                },
                {
                    "option": "--txpool.no-local-transactions-propagation",
                    "description": "Flag to toggle local transaction propagation"
                },
                {
                    "option": "--txpool.nolocals",
                    "description": "Flag to disable local transaction exemptions"
                },
                {
                    "option": "--txpool.pending-max-count",
                    "description": "Max number of transaction in the pending sub-pool",
                    "value": "<PENDING_MAX_COUNT>",
                    "default": "10000"
                },
                {
                    "option": "--txpool.pending-max-size",
                    "description": "Max size of the pending sub-pool in megabytes",
                    "value": "<PENDING_MAX_SIZE>",
                    "default": "20"
                },
                {
                    "option": "--txpool.pricebump",
                    "description": "Price bump (in %) for the transaction pool underpriced check",
                    "value": "<PRICE_BUMP>",
                    "default": "10"
                },
                {
                    "option": "--txpool.queued-max-count",
                    "description": "Max number of transaction in the queued sub-pool",
                    "value": "<QUEUED_MAX_COUNT>",
                    "default": "10000"
                },
                {
                    "option": "--txpool.queued-max-size",
                    "description": "Max size of the queued sub-pool in megabytes",
                    "value": "<QUEUED_MAX_SIZE>",
                    "default": "20"
                },
                {
                    "option": "--verbosity",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)",
                    "shortcut": "-v"
                },
                {
                    "option": "--with-unused-ports",
                    "description": "Sets all ports to unused, allowing the OS to choose random unused ports when sockets are bound. Mutually exclusive with `--instance`."
                },
                {
                    "option": "--ws",
                    "description": "Enable the WS-RPC server"
                },
                {
                    "option": "--ws.addr",
                    "description": "Ws server address to listen on",
                    "value": "<WS_ADDR>",
                    "default": "127.0.0.1"
                },
                {
                    "option": "--ws.api",
                    "description": "Rpc Modules to be configured for the WS server [possible values: admin, debug, eth, net, trace, txpool, web3, rpc, reth, ots, flashbots]",
                    "value": "<WS_API>"
                },
                {
                    "option": "--ws.origins",
                    "description": "Origins from which to accept `WebSocket` requests",
                    "value": "<ws.origins>"
                },
                {
                    "option": "--ws.port",
                    "description": "Ws server port to listen on",
                    "value": "<WS_PORT>",
                    "default": "8546"
                },
                {
                    "option": "-d",
                    "description": "Disable the discovery service",
                    "shortcut": "--disable-discovery"
                },
                {
                    "option": "-h",
                    "description": "Print help (see a summary with '-h')",
                    "shortcut": "--help"
                },
                {
                    "option": "-q",
                    "description": "Silence all log output",
                    "shortcut": "--quiet"
                },
                {
                    "option": "-v",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)",
                    "shortcut": "--verbosity"
                }
            ],
            "subcommands": []
        },
        {
            "name": "reth p2p",
            "description": "P2P Debugging utilities",
            "usage": "Usage: reth p2p [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "reth p2p body",
                    "description": "Download block body",
                    "usage": "reth p2p body [OPTIONS] <ID>",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node.\n\nConfigures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.\n\nMax number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.\n\nChanges to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "shortcut": "-h",
                            "option": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "shortcut": "-q",
                            "option": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "shortcut": "-v",
                            "option": "--verbosity",
                            "description": "Set the minimum log level."
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth p2p header",
                    "description": "Download block header",
                    "usage": "reth p2p header [OPTIONS] <ID>",
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "value": "<COLOR>"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "default": "1",
                            "value": "<INSTANCE>"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug",
                            "value": "<FILTER>"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "default": "terminal",
                            "value": "<FORMAT>"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5",
                            "value": "<COUNT>"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200",
                            "value": "<SIZE>"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "default": "error",
                            "value": "<FILTER>"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "default": "",
                            "value": "<FILTER>"
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "default": "terminal",
                            "value": "<FORMAT>"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth p2p rlpx",
                    "description": "RLPx commands",
                    "usage": "Usage: reth p2p rlpx [OPTIONS] <COMMAND>",
                    "subcommands": [
                        {
                            "name": "reth p2p rlpx ping",
                            "description": "The node to ping",
                            "usage": "reth p2p rlpx ping [OPTIONS] <NODE>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always"
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal"
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal"
                                },
                                {
                                    "option": "--help",
                                    "shortcut": "-h",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "--verbosity",
                                    "shortcut": "-v",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "..."
                                    ]
                                },
                                {
                                    "option": "--quiet",
                                    "shortcut": "-q",
                                    "description": "Silence all log output"
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level.",
                            "tags": [
                                "..."
                            ]
                        }
                    ]
                }
            ],
            "options": [
                {
                    "option": "--addr",
                    "description": "Network listening address",
                    "value": "<ADDR>",
                    "default": "0.0.0.0"
                },
                {
                    "option": "--bootnodes",
                    "description": "Comma separated enode URLs for P2P discovery bootstrap. Will fall back to a network-specific default if not specified.",
                    "value": "<BOOTNODES>"
                },
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "dev"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting. Possible values: always: Colors on, auto: Colors on, never: Colors off",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--config",
                    "description": "The path to the configuration file to use.",
                    "value": "<FILE>"
                },
                {
                    "option": "--datadir",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/ - Windows: {FOLDERID_RoamingAppData}/reth/ - macOS: $HOME/Library/Application Support/reth/",
                    "value": "<DATA_DIR>",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "description": "The absolute path to store static files in.",
                    "value": "<PATH>"
                },
                {
                    "option": "--db.exclusive",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "value": "<EXCLUSIVE>"
                },
                {
                    "option": "--db.growth-step",
                    "description": "Database growth step (e.g., 4GB, 4KB)",
                    "value": "<GROWTH_STEP>"
                },
                {
                    "option": "--db.log-level",
                    "description": "Database logging level. Levels higher than \"notice\" require a debug build. Possible values: fatal, error, warn, notice, verbose, debug, trace, extra",
                    "value": "<LOG_LEVEL>"
                },
                {
                    "option": "--db.max-size",
                    "description": "Maximum database size (e.g., 4TB, 8MB)",
                    "value": "<MAX_SIZE>"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "description": "Read transaction timeout in seconds, 0 means no timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>"
                },
                {
                    "option": "--disable-discv4-discovery",
                    "description": "Disable Discv4 discovery"
                },
                {
                    "option": "--disable-discovery",
                    "shortcut": "-d",
                    "description": "Disable the discovery service"
                },
                {
                    "option": "--disable-dns-discovery",
                    "description": "Disable the DNS discovery"
                },
                {
                    "option": "--disable-nat",
                    "description": "Disable Nat discovery"
                },
                {
                    "option": "--discovery.addr",
                    "description": "The UDP address to use for devp2p peer discovery version 4",
                    "value": "<DISCOVERY_ADDR>",
                    "default": "0.0.0.0"
                },
                {
                    "option": "--discovery.port",
                    "description": "The UDP port to use for devp2p peer discovery version 4",
                    "value": "<DISCOVERY_PORT>",
                    "default": "30303"
                },
                {
                    "option": "--discovery.v5.addr",
                    "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4",
                    "value": "<DISCOVERY_V5_ADDR>"
                },
                {
                    "option": "--discovery.v5.addr.ipv6",
                    "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6",
                    "value": "<DISCOVERY_V5_ADDR_IPV6>"
                },
                {
                    "option": "--discovery.v5.bootstrap.lookup-countdown",
                    "description": "The number of times to carry out boost lookup queries at bootstrap",
                    "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN>",
                    "default": "100"
                },
                {
                    "option": "--discovery.v5.bootstrap.lookup-interval",
                    "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                    "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL>",
                    "default": "5"
                },
                {
                    "option": "--discovery.v5.lookup-interval",
                    "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                    "value": "<DISCOVERY_V5_LOOKUP_INTERVAL>",
                    "default": "60"
                },
                {
                    "option": "--discovery.v5.port",
                    "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                    "value": "<DISCOVERY_V5_PORT>",
                    "default": "9200"
                },
                {
                    "option": "--discovery.v5.port.ipv6",
                    "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                    "value": "<DISCOVERY_V5_PORT_IPV6>",
                    "default": "9200"
                },
                {
                    "option": "--dns-retries",
                    "description": "Amount of DNS resolution requests retries to perform when peering",
                    "value": "<DNS_RETRIES>",
                    "default": "0"
                },
                {
                    "option": "--enable-discv5-discovery",
                    "description": "Enable Discv5 discovery"
                },
                {
                    "option": "--identity",
                    "description": "Custom node identity",
                    "value": "<IDENTITY>",
                    "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file. Possible values: json: Represents JSON formatting for logs. log-fmt: Represents logfmt (key=value) formatting for logs. terminal: Represents terminal-friendly formatting for logs",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout. Possible values: json: Represents JSON formatting for logs. log-fmt: Represents logfmt (key=value) formatting for logs. terminal: Represents terminal-friendly formatting for logs",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--max-inbound-peers",
                    "description": "Maximum number of inbound requests.",
                    "value": "<MAX_INBOUND_PEERS>"
                },
                {
                    "option": "--max-outbound-peers",
                    "description": "Maximum number of outbound requests.",
                    "value": "<MAX_OUTBOUND_PEERS>"
                },
                {
                    "option": "--max-pending-imports",
                    "description": "Max number of transactions to import concurrently.",
                    "value": "<COUNT>",
                    "default": "4096"
                },
                {
                    "option": "--max-seen-tx-history",
                    "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                    "value": "<COUNT>",
                    "default": "320"
                },
                {
                    "option": "--max-tx-pending-fetch",
                    "description": "Max capacity of cache of hashes for transactions pending fetch.",
                    "value": "<COUNT>",
                    "default": "25600"
                },
                {
                    "option": "--max-tx-reqs",
                    "description": "Max concurrent `GetPooledTransactions` requests.",
                    "value": "<COUNT>",
                    "default": "130"
                },
                {
                    "option": "--max-tx-reqs-peer",
                    "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                    "value": "<COUNT>",
                    "default": "1"
                },
                {
                    "option": "--nat",
                    "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                    "value": "<NAT>",
                    "default": "any"
                },
                {
                    "option": "--net-if.experimental",
                    "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried.",
                    "value": "<IF_NAME>"
                },
                {
                    "option": "--no-persist-peers",
                    "description": "Do not persist peers."
                },
                {
                    "option": "--p2p-secret-key",
                    "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used.",
                    "value": "<PATH>"
                },
                {
                    "option": "--peers-file",
                    "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with `--no-persist-peers`.",
                    "value": "<FILE>"
                },
                {
                    "option": "--pooled-tx-pack-soft-limit",
                    "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see `RLPx` specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB. Default is 128 KiB.",
                    "value": "<BYTES>",
                    "default": "131072"
                },
                {
                    "option": "--pooled-tx-response-soft-limit",
                    "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                    "value": "<BYTES>",
                    "default": "2097152"
                },
                {
                    "option": "--port",
                    "description": "Network listening port",
                    "value": "<PORT>",
                    "default": "30303"
                },
                {
                    "option": "--retries",
                    "description": "The number of retries per request",
                    "value": "<RETRIES>",
                    "default": "5"
                },
                {
                    "option": "--trusted-only",
                    "description": "Connect to or accept from trusted peers only"
                },
                {
                    "option": "--trusted-peers",
                    "description": "Comma separated enode URLs of trusted peers for P2P connections.",
                    "value": "<TRUSTED_PEERS>"
                },
                {
                    "option": "--verbosity",
                    "shortcut": "-v",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                },
                {
                    "option": "--quiet",
                    "shortcut": "-q",
                    "description": "Silence all log output"
                },
                {
                    "option": "--help",
                    "shortcut": "-h",
                    "description": "Print help (see a summary with '-h')"
                }
            ]
        },
        {
            "name": "reth prune",
            "usage": "reth prune [OPTIONS]",
            "subcommands": [],
            "options": [
                {
                    "option": "--chain",
                    "value": "<CHAIN_OR_PATH>",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file.\n\nBuilt-in chains:\n    dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "default": "dev"
                },
                {
                    "option": "--color",
                    "value": "<COLOR>",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "default": "always",
                    "tags": [
                        "always",
                        "auto",
                        "never"
                    ]
                },
                {
                    "option": "--config",
                    "value": "<FILE>",
                    "description": "The path to the configuration file to use"
                },
                {
                    "option": "--datadir",
                    "value": "<DATA_DIR>",
                    "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory:\n\n- Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`\n- Windows: `{FOLDERID_RoamingAppData}/reth/`\n- macOS: `$HOME/Library/Application Support/reth/`",
                    "default": "default"
                },
                {
                    "option": "--datadir.static-files",
                    "value": "<PATH>",
                    "description": "The absolute path to store static files in."
                },
                {
                    "option": "--db.exclusive",
                    "value": "<EXCLUSIVE>",
                    "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                    "tags": [
                        "true",
                        "false"
                    ]
                },
                {
                    "option": "--db.growth-step",
                    "value": "<GROWTH_STEP>",
                    "description": "Database growth step (e.g., 4GB, 4KB)"
                },
                {
                    "option": "--db.log-level",
                    "value": "<LOG_LEVEL>",
                    "description": "Database logging level. Levels higher than \"notice\" require a debug build. Possible values:\n- fatal:   Enables logging for critical conditions, i.e. assertion failures\n- error:   Enables logging for error conditions\n- warn:    Enables logging for warning conditions\n- notice:  Enables logging for normal but significant condition\n- verbose: Enables logging for verbose informational\n- debug:   Enables logging for debug-level messages\n- trace:   Enables logging for trace debug-level messages\n- extra:   Enables logging for extra debug-level messages"
                },
                {
                    "option": "--db.max-size",
                    "value": "<MAX_SIZE>",
                    "description": "Maximum database size (e.g., 4TB, 8MB)"
                },
                {
                    "option": "--db.read-transaction-timeout",
                    "value": "<READ_TRANSACTION_TIMEOUT>",
                    "description": "Read transaction timeout in seconds, 0 means no timeout"
                },
                {
                    "option": "--instance",
                    "value": "<INSTANCE>",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "value": "<PATH>",
                    "description": "The path to put log files in",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to the log file",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to the log file",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--log.file.max-files",
                    "value": "<COUNT>",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "value": "<SIZE>",
                    "description": "The maximum size (in MB) of one log file",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to journald",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "value": "<FILTER>",
                    "description": "The filter to use for logs written to stdout",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "value": "<FORMAT>",
                    "description": "The format to use for logs written to stdout",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level.\n\n-v      Errors\n-vv     Warnings\n-vvv    Info\n-vvvv   Debug\n-vvvvv  Traces (warning: very verbose!)"
                }
            ]
        },
        {
            "name": "reth recover",
            "description": "Scripts for node recovery",
            "usage": "Usage: reth recover [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "reth recover storage-tries",
                    "usage": "Usage: reth recover storage-tries [OPTIONS]",
                    "options": [
                        {
                            "option": "--chain",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                            "value": "<CHAIN_OR_PATH>",
                            "default": "dev"
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always",
                            "tags": [
                                "always",
                                "auto",
                                "never"
                            ]
                        },
                        {
                            "option": "--config",
                            "description": "The path to the configuration file to use",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--datadir",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                            "value": "<DATA_DIR>",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "description": "The absolute path to store static files in.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--db.exclusive",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "value": "<EXCLUSIVE>",
                            "tags": [
                                "true",
                                "false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "description": "Database growth step (e.g., 4GB, 4KB)",
                            "value": "<GROWTH_STEP>"
                        },
                        {
                            "option": "--db.log-level",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                            "value": "<LOG_LEVEL>",
                            "tags": [
                                "fatal",
                                "error",
                                "warn",
                                "notice",
                                "verbose",
                                "debug",
                                "trace",
                                "extra"
                            ]
                        },
                        {
                            "option": "--db.max-size",
                            "description": "Maximum database size (e.g., 4TB, 8MB)",
                            "value": "<MAX_SIZE>"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "description": "Read transaction timeout in seconds, 0 means no timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout",
                            "value": "<FORMAT>",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": []
                }
            ],
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "dev"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting. Possible values: always, auto, never",
                    "value": "<COLOR>",
                    "default": "always"
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file. Possible values: json, log-fmt, terminal",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout. Possible values: json, log-fmt, terminal",
                    "value": "<FORMAT>",
                    "default": "terminal"
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity...",
                    "description": "Set the minimum log level. -v Errors, -vv Warnings, -vvv Info, -vvvv Debug, -vvvvv Traces (warning: very verbose!)"
                }
            ]
        },
        {
            "name": "reth stage",
            "description": "Manipulate individual stages",
            "usage": "Usage: reth stage [OPTIONS] <COMMAND>",
            "subcommands": [
                {
                    "name": "reth stage drop",
                    "description": "Drop a stage's tables from the database",
                    "usage": "reth stage drop [OPTIONS] <STAGE>",
                    "options": [
                        {
                            "option": "--chain",
                            "value": "<CHAIN_OR_PATH>",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                            "default": "dev"
                        },
                        {
                            "option": "--color",
                            "value": "<COLOR>",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always"
                        },
                        {
                            "option": "--config",
                            "value": "<FILE>",
                            "description": "The path to the configuration file to use"
                        },
                        {
                            "option": "--datadir",
                            "value": "<DATA_DIR>",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/`; Windows: `{FOLDERID_RoamingAppData}/reth/`; macOS: `$HOME/Library/Application Support/reth/`",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "value": "<PATH>",
                            "description": "The absolute path to store static files in."
                        },
                        {
                            "option": "--db.exclusive",
                            "value": "<EXCLUSIVE>",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume"
                        },
                        {
                            "option": "--db.growth-step",
                            "value": "<GROWTH_STEP>",
                            "description": "Database growth step (e.g., 4GB, 4KB)"
                        },
                        {
                            "option": "--db.log-level",
                            "value": "<LOG_LEVEL>",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build"
                        },
                        {
                            "option": "--db.max-size",
                            "value": "<MAX_SIZE>",
                            "description": "Maximum database size (e.g., 4TB, 8MB)"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>",
                            "description": "Read transaction timeout in seconds, 0 means no timeout"
                        },
                        {
                            "option": "--instance",
                            "value": "<INSTANCE>",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: DISCOVERY_PORT: default + instance - 1; AUTH_PORT: default + instance * 100 - 100; HTTP_RPC_PORT: default - instance + 1; WS_RPC_PORT: default + instance * 2 - 2",
                            "default": "1"
                        },
                        {
                            "shortcut": "-h",
                            "option": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "--log.file.directory",
                            "value": "<PATH>",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to the log file",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "value": "<COUNT>",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "value": "<SIZE>",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to journald",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to stdout",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to stdout",
                            "default": "terminal"
                        },
                        {
                            "shortcut": "-q",
                            "option": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "shortcut": "-v",
                            "option": "--verbosity",
                            "description": "Set the minimum log level. -v Errors; -vv Warnings; -vvv Info; -vvvv Debug; -vvvvv Traces (warning: very verbose!)"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth stage dump",
                    "description": "Dumps a stage from a range into a new database",
                    "usage": "Usage: reth stage dump [OPTIONS] <COMMAND>",
                    "subcommands": [
                        {
                            "description": "AccountHashing stage",
                            "name": "reth stage dump account-hashing",
                            "usage": "Usage: reth stage dump account-hashing [OPTIONS] --output-datadir <OUTPUT_PATH> --from <FROM> --to <TO>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "default": "always",
                                    "value": "<COLOR>",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "default": "1",
                                    "value": "<INSTANCE>"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "default": "/home/ahmad/.cache/reth/logs",
                                    "value": "<PATH>"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "default": "debug",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "default": "terminal",
                                    "value": "<FORMAT>",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "default": "5",
                                    "value": "<COUNT>"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "default": "200",
                                    "value": "<SIZE>"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "default": "error",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "default": "",
                                    "value": "<FILTER>"
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "default": "terminal",
                                    "value": "<FORMAT>",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--output-datadir",
                                    "description": "The path to the new datadir folder.",
                                    "value": "<OUTPUT_PATH>"
                                },
                                {
                                    "option": "-d",
                                    "shortcut": "--dry-run",
                                    "description": "If passed, it will dry-run a stage execution from the newly created database right after dumping"
                                },
                                {
                                    "option": "-f",
                                    "shortcut": "--from",
                                    "description": "From which block",
                                    "value": "<FROM>"
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-t",
                                    "shortcut": "--to",
                                    "description": "To which block",
                                    "value": "<TO>"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "-v",
                                        "-vv",
                                        "-vvv",
                                        "-vvvv",
                                        "-vvvvv"
                                    ]
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "reth stage dump execution",
                            "description": "Execution stage",
                            "usage": "Usage: reth stage dump execution [OPTIONS] --output-datadir <OUTPUT_PATH> --from <FROM> --to <TO>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always",
                                    "tags": [
                                        "always: Colors on",
                                        "auto: Colors on",
                                        "never: Colors off"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                        "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                        "terminal: Represents terminal-friendly formatting for logs"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging",
                                        "log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications",
                                        "terminal: Represents terminal-friendly formatting for logs"
                                    ]
                                },
                                {
                                    "option": "--output-datadir",
                                    "description": "The path to the new datadir folder.",
                                    "value": "<OUTPUT_PATH>"
                                },
                                {
                                    "option": "-d",
                                    "shortcut": "--dry-run",
                                    "description": "If passed, it will dry-run a stage execution from the newly created database right after dumping"
                                },
                                {
                                    "option": "-f",
                                    "shortcut": "--from",
                                    "description": "From which block",
                                    "value": "<FROM>"
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-t",
                                    "shortcut": "--to",
                                    "description": "To which block",
                                    "value": "<TO>"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "-v Errors",
                                        "-vv Warnings",
                                        "-vvv Info",
                                        "-vvvv Debug",
                                        "-vvvvv Traces (warning: very verbose!)"
                                    ]
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "reth stage dump merkle",
                            "description": "Dump Merkle stage data",
                            "usage": "reth stage dump merkle [OPTIONS] --output-datadir <OUTPUT_PATH> --from <FROM> --to <TO>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "default": "always",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--output-datadir",
                                    "description": "The path to the new datadir folder.",
                                    "value": "<OUTPUT_PATH>"
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "default": "1",
                                    "value": "<INSTANCE>"
                                },
                                {
                                    "option": "-d, --dry-run",
                                    "description": "If passed, it will dry-run a stage execution from the newly created database right after dumping"
                                },
                                {
                                    "option": "-f, --from",
                                    "description": "From which block",
                                    "value": "<FROM>"
                                },
                                {
                                    "option": "-h, --help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q, --quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-t, --to",
                                    "description": "To which block",
                                    "value": "<TO>"
                                },
                                {
                                    "option": "-v, --verbosity",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "-v Errors",
                                        "-vv Warnings",
                                        "-vvv Info",
                                        "-vvvv Debug",
                                        "-vvvvv Traces (warning: very verbose!)"
                                    ]
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "reth stage dump storage-hashing",
                            "description": "stage",
                            "usage": "reth stage dump storage-hashing [OPTIONS] --output-datadir <OUTPUT_PATH> --from <FROM> --to <TO>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "default": "always",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--dry-run",
                                    "shortcut": "-d",
                                    "description": "If passed, it will dry-run a stage execution from the newly created database right after dumping"
                                },
                                {
                                    "option": "--from",
                                    "shortcut": "-f",
                                    "description": "From which block",
                                    "value": "<FROM>"
                                },
                                {
                                    "option": "--help",
                                    "shortcut": "-h",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node.\n\nConfigures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine.\n\nMax number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other.\n\nChanges to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--output-datadir",
                                    "description": "The path to the new datadir folder.",
                                    "value": "<OUTPUT_PATH>"
                                },
                                {
                                    "option": "--quiet",
                                    "shortcut": "-q",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "--to",
                                    "shortcut": "-t",
                                    "description": "To which block",
                                    "value": "<TO>"
                                },
                                {
                                    "option": "--verbosity",
                                    "shortcut": "-v",
                                    "description": "Set the minimum log level.",
                                    "tags": [
                                        "-v",
                                        "-vv",
                                        "-vvv",
                                        "-vvvv",
                                        "-vvvvv"
                                    ]
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--chain",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                            "value": "<CHAIN_OR_PATH>",
                            "default": "dev"
                        },
                        {
                            "option": "--color",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "value": "<COLOR>",
                            "default": "always"
                        },
                        {
                            "option": "--config",
                            "description": "The path to the configuration file to use",
                            "value": "<FILE>"
                        },
                        {
                            "option": "--datadir",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: $XDG_DATA_HOME/reth/ or $HOME/.local/share/reth/ - Windows: {FOLDERID_RoamingAppData}/reth/ - macOS: $HOME/Library/Application Support/reth/",
                            "value": "<DATA_DIR>",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "description": "The absolute path to store static files in.",
                            "value": "<PATH>"
                        },
                        {
                            "option": "--db.exclusive",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "value": "<EXCLUSIVE>"
                        },
                        {
                            "option": "--db.growth-step",
                            "description": "Database growth step (e.g., 4GB, 4KB)",
                            "value": "<GROWTH_STEP>"
                        },
                        {
                            "option": "--db.log-level",
                            "description": "Database logging level. Levels higher than 'notice' require a debug build. Possible values: - fatal: Enables logging for critical conditions, i.e. assertion failures - error: Enables logging for error conditions - warn: Enables logging for warning conditions - notice: Enables logging for normal but significant condition - verbose: Enables logging for verbose informational - debug: Enables logging for debug-level messages - trace: Enables logging for trace debug-level messages - extra: Enables logging for extra debug-level messages",
                            "value": "<LOG_LEVEL>"
                        },
                        {
                            "option": "--db.max-size",
                            "description": "Maximum database size (e.g., 4TB, 8MB)",
                            "value": "<MAX_SIZE>"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "description": "Read transaction timeout in seconds, 0 means no timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>"
                        },
                        {
                            "option": "--instance",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - DISCOVERY_PORT: default + instance - 1 - AUTH_PORT: default + instance * 100 - 100 - HTTP_RPC_PORT: default - instance + 1 - WS_RPC_PORT: default + instance * 2 - 2",
                            "value": "<INSTANCE>",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "description": "The path to put log files in",
                            "value": "<PATH>",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "description": "The filter to use for logs written to the log file",
                            "value": "<FILTER>",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "description": "The format to use for logs written to the log file. Possible values: - json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging - log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications - terminal: Represents terminal-friendly formatting for logs",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "--log.file.max-files",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "value": "<COUNT>",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "description": "The maximum size (in MB) of one log file",
                            "value": "<SIZE>",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "description": "The filter to use for logs written to journald",
                            "value": "<FILTER>",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "description": "The filter to use for logs written to stdout",
                            "value": "<FILTER>",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "description": "The format to use for logs written to stdout. Possible values: - json: Represents JSON formatting for logs. This format outputs log records as JSON objects, making it suitable for structured logging - log-fmt: Represents logfmt (key=value) formatting for logs. This format is concise and human-readable, typically used in command-line applications - terminal: Represents terminal-friendly formatting for logs",
                            "value": "<FORMAT>",
                            "default": "terminal"
                        },
                        {
                            "option": "-h",
                            "shortcut": "--help",
                            "description": "Print help (see a summary with '-h')"
                        },
                        {
                            "option": "-q",
                            "shortcut": "--quiet",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "-v",
                            "shortcut": "--verbosity...",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        }
                    ]
                },
                {
                    "name": "reth stage run",
                    "description": "Run a single stage. Note that this won't use the Pipeline and as a result runs stages assuming that all the data can be held in memory. It is not recommended to run a stage for really large block ranges if your computer does not have a lot of memory to store all the data.",
                    "usage": "reth stage run [OPTIONS] --from <FROM> --to <TO> <STAGE>",
                    "options": [
                        {
                            "option": "--addr",
                            "description": "Network listening address",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--batch-size",
                            "value": "<BATCH_SIZE>",
                            "description": "Batch size for stage execution and unwind"
                        },
                        {
                            "option": "--bootnodes",
                            "value": "<BOOTNODES>",
                            "description": "Comma separated enode URLs for P2P discovery bootstrap. Will fall back to a network-specific default if not specified."
                        },
                        {
                            "option": "--chain",
                            "value": "<CHAIN_OR_PATH>",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                            "default": "dev"
                        },
                        {
                            "option": "--checkpoints",
                            "description": "Save stage checkpoints"
                        },
                        {
                            "option": "--color",
                            "value": "<COLOR>",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "tags": [
                                "always",
                                "auto",
                                "never"
                            ]
                        },
                        {
                            "option": "--commit",
                            "shortcut": "-c",
                            "description": "Commits the changes in the database. WARNING: potentially destructive. Useful when you want to run diagnostics on the database."
                        },
                        {
                            "option": "--config",
                            "value": "<FILE>",
                            "description": "The path to the configuration file to use"
                        },
                        {
                            "option": "--datadir",
                            "value": "<DATA_DIR>",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "value": "<PATH>",
                            "description": "The absolute path to store static files in."
                        },
                        {
                            "option": "--db.exclusive",
                            "value": "<EXCLUSIVE>",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "tags": [
                                "true",
                                "false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "value": "<GROWTH_STEP>",
                            "description": "Database growth step (e.g., 4GB, 4KB)"
                        },
                        {
                            "option": "--db.log-level",
                            "value": "<LOG_LEVEL>",
                            "description": "Database logging level. Levels higher than \"notice\" require a debug build",
                            "tags": [
                                "fatal",
                                "error",
                                "warn",
                                "notice",
                                "verbose",
                                "debug",
                                "trace",
                                "extra"
                            ]
                        },
                        {
                            "option": "--db.max-size",
                            "value": "<MAX_SIZE>",
                            "description": "Maximum database size (e.g., 4TB, 8MB)"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>",
                            "description": "Read transaction timeout in seconds, 0 means no timeout"
                        },
                        {
                            "option": "--disable-discv4-discovery",
                            "description": "Disable Discv4 discovery"
                        },
                        {
                            "option": "--disable-discovery",
                            "shortcut": "-d",
                            "description": "Disable the discovery service"
                        },
                        {
                            "option": "--disable-dns-discovery",
                            "description": "Disable the DNS discovery"
                        },
                        {
                            "option": "--disable-nat",
                            "description": "Disable Nat discovery"
                        },
                        {
                            "option": "--discovery.addr",
                            "value": "<DISCOVERY_ADDR>",
                            "description": "The UDP address to use for devp2p peer discovery version 4",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--discovery.port",
                            "value": "<DISCOVERY_PORT>",
                            "description": "The UDP port to use for devp2p peer discovery version 4",
                            "default": "30303"
                        },
                        {
                            "option": "--discovery.v5.addr",
                            "value": "<DISCOVERY_V5_ADDR>",
                            "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4"
                        },
                        {
                            "option": "--discovery.v5.addr.ipv6",
                            "value": "<DISCOVERY_V5_ADDR_IPV6>",
                            "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-countdown",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN>",
                            "description": "The number of times to carry out boost lookup queries at bootstrap",
                            "default": "100"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-interval",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL>",
                            "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                            "default": "5"
                        },
                        {
                            "option": "--discovery.v5.lookup-interval",
                            "value": "<DISCOVERY_V5_LOOKUP_INTERVAL>",
                            "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                            "default": "60"
                        },
                        {
                            "option": "--discovery.v5.port",
                            "value": "<DISCOVERY_V5_PORT>",
                            "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                            "default": "9200"
                        },
                        {
                            "option": "--discovery.v5.port.ipv6",
                            "value": "<DISCOVERY_V5_PORT_IPV6>",
                            "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                            "default": "9200"
                        },
                        {
                            "option": "--dns-retries",
                            "value": "<DNS_RETRIES>",
                            "description": "Amount of DNS resolution requests retries to perform when peering",
                            "default": "0"
                        },
                        {
                            "option": "--enable-discv5-discovery",
                            "description": "Enable Discv5 discovery"
                        },
                        {
                            "option": "--from",
                            "value": "<FROM>",
                            "description": "The height to start at"
                        },
                        {
                            "option": "--identity",
                            "value": "<IDENTITY>",
                            "description": "Custom node identity",
                            "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                        },
                        {
                            "option": "--instance",
                            "value": "<INSTANCE>",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "value": "<PATH>",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to the log file",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "value": "<COUNT>",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "value": "<SIZE>",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to journald",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to stdout",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to stdout",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--max-inbound-peers",
                            "value": "<MAX_INBOUND_PEERS>",
                            "description": "Maximum number of inbound requests. default: 30"
                        },
                        {
                            "option": "--max-outbound-peers",
                            "value": "<MAX_OUTBOUND_PEERS>",
                            "description": "Maximum number of outbound requests. default: 100"
                        },
                        {
                            "option": "--max-pending-imports",
                            "value": "<COUNT>",
                            "description": "Max number of transactions to import concurrently.",
                            "default": "4096"
                        },
                        {
                            "option": "--max-seen-tx-history",
                            "value": "<COUNT>",
                            "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                            "default": "320"
                        },
                        {
                            "option": "--max-tx-pending-fetch",
                            "value": "<COUNT>",
                            "description": "Max capacity of cache of hashes for transactions pending fetch.",
                            "default": "25600"
                        },
                        {
                            "option": "--max-tx-reqs",
                            "value": "<COUNT>",
                            "description": "Max concurrent `GetPooledTransactions` requests.",
                            "default": "130"
                        },
                        {
                            "option": "--max-tx-reqs-peer",
                            "value": "<COUNT>",
                            "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                            "default": "1"
                        },
                        {
                            "option": "--metrics",
                            "value": "<SOCKET>",
                            "description": "Enable Prometheus metrics. The metrics will be served at the given interface and port."
                        },
                        {
                            "option": "--nat",
                            "value": "<NAT>",
                            "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                            "default": "any"
                        },
                        {
                            "option": "--net-if.experimental",
                            "value": "<IF_NAME>",
                            "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried."
                        },
                        {
                            "option": "--no-persist-peers",
                            "description": "Do not persist peers."
                        },
                        {
                            "option": "--p2p-secret-key",
                            "value": "<PATH>",
                            "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used."
                        },
                        {
                            "option": "--peers-file",
                            "value": "<FILE>",
                            "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with `--no-persist-peers`."
                        },
                        {
                            "option": "--pooled-tx-pack-soft-limit",
                            "value": "<BYTES>",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see `RLPx` specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB.",
                            "default": "131072"
                        },
                        {
                            "option": "--pooled-tx-response-soft-limit",
                            "value": "<BYTES>",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                            "default": "2097152"
                        },
                        {
                            "option": "--port",
                            "value": "<PORT>",
                            "description": "Network listening port",
                            "default": "30303"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "--skip-unwind",
                            "shortcut": "-s",
                            "description": "Normally, running the stage requires unwinding for stages that already have been run, in order to not rewrite to the same database slots. You can optionally skip the unwinding phase if you're syncing a block range that has not been synced before."
                        },
                        {
                            "option": "--to",
                            "shortcut": "-t",
                            "value": "<TO>",
                            "description": "The end of the stage"
                        },
                        {
                            "option": "--trusted-only",
                            "description": "Connect to or accept from trusted peers only"
                        },
                        {
                            "option": "--trusted-peers",
                            "value": "<TRUSTED_PEERS>",
                            "description": "Comma separated enode URLs of trusted peers for P2P connections. --trusted-peers enode://abcd@192.168.0.1:30303"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        },
                        {
                            "option": "--help",
                            "shortcut": "-h",
                            "description": "Print help (see a summary with '-h')"
                        }
                    ],
                    "subcommands": []
                },
                {
                    "name": "reth stage unwind",
                    "description": "Unwinds a certain block range, deleting it from the database",
                    "usage": "Usage: reth stage unwind [OPTIONS] <COMMAND>",
                    "subcommands": [
                        {
                            "name": "reth stage unwind num-blocks",
                            "description": "Unwinds the database from the latest block, until the given number of blocks have been reached",
                            "usage": "Usage: reth stage unwind num-blocks [OPTIONS] <AMOUNT>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always",
                                    "tags": [
                                        "always",
                                        "auto",
                                        "never"
                                    ]
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal",
                                    "tags": [
                                        "json",
                                        "log-fmt",
                                        "terminal"
                                    ]
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity",
                                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                                }
                            ],
                            "subcommands": []
                        },
                        {
                            "name": "reth stage unwind to-block",
                            "description": "Unwinds the database from the latest block, until the given block number or hash has been reached, that block is not included",
                            "usage": "reth stage unwind to-block [OPTIONS] <TARGET>",
                            "options": [
                                {
                                    "option": "--color",
                                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                                    "value": "<COLOR>",
                                    "default": "always"
                                },
                                {
                                    "option": "--instance",
                                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                                    "value": "<INSTANCE>",
                                    "default": "1"
                                },
                                {
                                    "option": "--log.file.directory",
                                    "description": "The path to put log files in",
                                    "value": "<PATH>",
                                    "default": "/home/ahmad/.cache/reth/logs"
                                },
                                {
                                    "option": "--log.file.filter",
                                    "description": "The filter to use for logs written to the log file",
                                    "value": "<FILTER>",
                                    "default": "debug"
                                },
                                {
                                    "option": "--log.file.format",
                                    "description": "The format to use for logs written to the log file",
                                    "value": "<FORMAT>",
                                    "default": "terminal"
                                },
                                {
                                    "option": "--log.file.max-files",
                                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                                    "value": "<COUNT>",
                                    "default": "5"
                                },
                                {
                                    "option": "--log.file.max-size",
                                    "description": "The maximum size (in MB) of one log file",
                                    "value": "<SIZE>",
                                    "default": "200"
                                },
                                {
                                    "option": "--log.journald",
                                    "description": "Write logs to journald"
                                },
                                {
                                    "option": "--log.journald.filter",
                                    "description": "The filter to use for logs written to journald",
                                    "value": "<FILTER>",
                                    "default": "error"
                                },
                                {
                                    "option": "--log.stdout.filter",
                                    "description": "The filter to use for logs written to stdout",
                                    "value": "<FILTER>",
                                    "default": ""
                                },
                                {
                                    "option": "--log.stdout.format",
                                    "description": "The format to use for logs written to stdout",
                                    "value": "<FORMAT>",
                                    "default": "terminal"
                                },
                                {
                                    "option": "-h",
                                    "shortcut": "--help",
                                    "description": "Print help (see a summary with '-h')"
                                },
                                {
                                    "option": "-q",
                                    "shortcut": "--quiet",
                                    "description": "Silence all log output"
                                },
                                {
                                    "option": "-v",
                                    "shortcut": "--verbosity",
                                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                                }
                            ],
                            "subcommands": []
                        }
                    ],
                    "options": [
                        {
                            "option": "--addr",
                            "value": "<ADDR>",
                            "description": "Network listening address",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--bootnodes",
                            "value": "<BOOTNODES>",
                            "description": "Comma separated enode URLs for P2P discovery bootstrap. Will fall back to a network-specific default if not specified."
                        },
                        {
                            "option": "--chain",
                            "value": "<CHAIN_OR_PATH>",
                            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                            "default": "dev"
                        },
                        {
                            "option": "--color",
                            "value": "<COLOR>",
                            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                            "default": "always",
                            "tags": [
                                "always",
                                "auto",
                                "never"
                            ]
                        },
                        {
                            "option": "--config",
                            "value": "<FILE>",
                            "description": "The path to the configuration file to use"
                        },
                        {
                            "option": "--datadir",
                            "value": "<DATA_DIR>",
                            "description": "The path to the data dir for all reth files and subdirectories. Defaults to the OS-specific data directory: - Linux: `$XDG_DATA_HOME/reth/` or `$HOME/.local/share/reth/` - Windows: `{FOLDERID_RoamingAppData}/reth/` - macOS: `$HOME/Library/Application Support/reth/`",
                            "default": "default"
                        },
                        {
                            "option": "--datadir.static-files",
                            "value": "<PATH>",
                            "description": "The absolute path to store static files in."
                        },
                        {
                            "option": "--db.exclusive",
                            "value": "<EXCLUSIVE>",
                            "description": "Open environment in exclusive/monopolistic mode. Makes it possible to open a database on an NFS volume",
                            "tags": [
                                "true",
                                "false"
                            ]
                        },
                        {
                            "option": "--db.growth-step",
                            "value": "<GROWTH_STEP>",
                            "description": "Database growth step (e.g., 4GB, 4KB)"
                        },
                        {
                            "option": "--db.log-level",
                            "value": "<LOG_LEVEL>",
                            "description": "Database logging level. Levels higher than 'notice' require a debug build",
                            "tags": [
                                "fatal",
                                "error",
                                "warn",
                                "notice",
                                "verbose",
                                "debug",
                                "trace",
                                "extra"
                            ]
                        },
                        {
                            "option": "--db.max-size",
                            "value": "<MAX_SIZE>",
                            "description": "Maximum database size (e.g., 4TB, 8MB)"
                        },
                        {
                            "option": "--db.read-transaction-timeout",
                            "value": "<READ_TRANSACTION_TIMEOUT>",
                            "description": "Read transaction timeout in seconds, 0 means no timeout"
                        },
                        {
                            "shortcut": "-d",
                            "option": "--disable-discovery",
                            "description": "Disable the discovery service"
                        },
                        {
                            "option": "--disable-discv4-discovery",
                            "description": "Disable Discv4 discovery"
                        },
                        {
                            "option": "--disable-dns-discovery",
                            "description": "Disable the DNS discovery"
                        },
                        {
                            "option": "--disable-nat",
                            "description": "Disable Nat discovery"
                        },
                        {
                            "option": "--discovery.addr",
                            "value": "<DISCOVERY_ADDR>",
                            "description": "The UDP address to use for devp2p peer discovery version 4",
                            "default": "0.0.0.0"
                        },
                        {
                            "option": "--discovery.port",
                            "value": "<DISCOVERY_PORT>",
                            "description": "The UDP port to use for devp2p peer discovery version 4",
                            "default": "30303"
                        },
                        {
                            "option": "--discovery.v5.addr",
                            "value": "<DISCOVERY_V5_ADDR>",
                            "description": "The UDP IPv4 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv4"
                        },
                        {
                            "option": "--discovery.v5.addr.ipv6",
                            "value": "<DISCOVERY_V5_ADDR_IPV6>",
                            "description": "The UDP IPv6 address to use for devp2p peer discovery version 5. Overwritten by `RLPx` address, if it's also IPv6"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-countdown",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_COUNTDOWN>",
                            "description": "The number of times to carry out boost lookup queries at bootstrap",
                            "default": "100"
                        },
                        {
                            "option": "--discovery.v5.bootstrap.lookup-interval",
                            "value": "<DISCOVERY_V5_BOOTSTRAP_LOOKUP_INTERVAL>",
                            "description": "The interval in seconds at which to carry out boost lookup queries, for a fixed number of times, at bootstrap",
                            "default": "5"
                        },
                        {
                            "option": "--discovery.v5.lookup-interval",
                            "value": "<DISCOVERY_V5_LOOKUP_INTERVAL>",
                            "description": "The interval in seconds at which to carry out periodic lookup queries, for the whole run of the program",
                            "default": "60"
                        },
                        {
                            "option": "--discovery.v5.port",
                            "value": "<DISCOVERY_V5_PORT>",
                            "description": "The UDP IPv4 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv4, or `--discovery.v5.addr` is set",
                            "default": "9200"
                        },
                        {
                            "option": "--discovery.v5.port.ipv6",
                            "value": "<DISCOVERY_V5_PORT_IPV6>",
                            "description": "The UDP IPv6 port to use for devp2p peer discovery version 5. Not used unless `--addr` is IPv6, or `--discovery.addr.ipv6` is set",
                            "default": "9200"
                        },
                        {
                            "option": "--dns-retries",
                            "value": "<DNS_RETRIES>",
                            "description": "Amount of DNS resolution requests retries to perform when peering",
                            "default": "0"
                        },
                        {
                            "option": "--enable-discv5-discovery",
                            "description": "Enable Discv5 discovery"
                        },
                        {
                            "option": "--identity",
                            "value": "<IDENTITY>",
                            "description": "Custom node identity",
                            "default": "reth/v1.1.2-496bf0bf/x86_64-unknown-linux-gnu"
                        },
                        {
                            "option": "--instance",
                            "value": "<INSTANCE>",
                            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                            "default": "1"
                        },
                        {
                            "option": "--log.file.directory",
                            "value": "<PATH>",
                            "description": "The path to put log files in",
                            "default": "/home/ahmad/.cache/reth/logs"
                        },
                        {
                            "option": "--log.file.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to the log file",
                            "default": "debug"
                        },
                        {
                            "option": "--log.file.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to the log file",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--log.file.max-files",
                            "value": "<COUNT>",
                            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                            "default": "5"
                        },
                        {
                            "option": "--log.file.max-size",
                            "value": "<SIZE>",
                            "description": "The maximum size (in MB) of one log file",
                            "default": "200"
                        },
                        {
                            "option": "--log.journald",
                            "description": "Write logs to journald"
                        },
                        {
                            "option": "--log.journald.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to journald",
                            "default": "error"
                        },
                        {
                            "option": "--log.stdout.filter",
                            "value": "<FILTER>",
                            "description": "The filter to use for logs written to stdout",
                            "default": ""
                        },
                        {
                            "option": "--log.stdout.format",
                            "value": "<FORMAT>",
                            "description": "The format to use for logs written to stdout",
                            "default": "terminal",
                            "tags": [
                                "json",
                                "log-fmt",
                                "terminal"
                            ]
                        },
                        {
                            "option": "--max-inbound-peers",
                            "value": "<MAX_INBOUND_PEERS>",
                            "description": "Maximum number of inbound requests. default: 30"
                        },
                        {
                            "option": "--max-outbound-peers",
                            "value": "<MAX_OUTBOUND_PEERS>",
                            "description": "Maximum number of outbound requests. default: 100"
                        },
                        {
                            "option": "--max-pending-imports",
                            "value": "<COUNT>",
                            "description": "Max number of transactions to import concurrently.",
                            "default": "4096"
                        },
                        {
                            "option": "--max-seen-tx-history",
                            "value": "<COUNT>",
                            "description": "Max number of seen transactions to remember per peer. Default is 320 transaction hashes.",
                            "default": "320"
                        },
                        {
                            "option": "--max-tx-pending-fetch",
                            "value": "<COUNT>",
                            "description": "Max capacity of cache of hashes for transactions pending fetch.",
                            "default": "25600"
                        },
                        {
                            "option": "--max-tx-reqs",
                            "value": "<COUNT>",
                            "description": "Max concurrent `GetPooledTransactions` requests.",
                            "default": "130"
                        },
                        {
                            "option": "--max-tx-reqs-peer",
                            "value": "<COUNT>",
                            "description": "Max concurrent `GetPooledTransactions` requests per peer.",
                            "default": "1"
                        },
                        {
                            "option": "--nat",
                            "value": "<NAT>",
                            "description": "NAT resolution method (any|none|upnp|publicip|extip:<IP>)",
                            "default": "any"
                        },
                        {
                            "option": "--net-if.experimental",
                            "value": "<IF_NAME>",
                            "description": "Name of network interface used to communicate with peers. If flag is set, but no value is passed, the default interface for docker `eth0` is tried."
                        },
                        {
                            "option": "--no-persist-peers",
                            "description": "Do not persist peers."
                        },
                        {
                            "option": "--offline",
                            "description": "If this is enabled, then all stages except headers, bodies, and sender recovery will be unwound"
                        },
                        {
                            "shortcut": "-p",
                            "option": "--port",
                            "value": "<PORT>",
                            "description": "Network listening port",
                            "default": "30303"
                        },
                        {
                            "option": "--p2p-secret-key",
                            "value": "<PATH>",
                            "description": "Secret key to use for this node. This will also deterministically set the peer ID. If not specified, it will be set in the data dir for the chain being used."
                        },
                        {
                            "option": "--peers-file",
                            "value": "<FILE>",
                            "description": "The path to the known peers file. Connected peers are dumped to this file on nodes shutdown, and read on startup. Cannot be used with `--no-persist-peers`."
                        },
                        {
                            "option": "--pooled-tx-pack-soft-limit",
                            "value": "<BYTES>",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to request in one request. Since `RLPx` protocol version 68, the byte size of a transaction is shared as metadata in a transaction announcement (see `RLPx` specs). This allows a node to request a specific size response. By default, nodes request only 128 KiB worth of transactions, but should a peer request more, up to 2 MiB, a node will answer with more than 128 KiB.",
                            "default": "131072"
                        },
                        {
                            "option": "--pooled-tx-response-soft-limit",
                            "value": "<BYTES>",
                            "description": "Experimental, for usage in research. Sets the max accumulated byte size of transactions to pack in one response. Spec'd at 2MiB.",
                            "default": "2097152"
                        },
                        {
                            "option": "--quiet",
                            "shortcut": "-q",
                            "description": "Silence all log output"
                        },
                        {
                            "option": "--trusted-only",
                            "description": "Connect to or accept from trusted peers only"
                        },
                        {
                            "option": "--trusted-peers",
                            "value": "<TRUSTED_PEERS>",
                            "description": "Comma separated enode URLs of trusted peers for P2P connections. --trusted-peers enode://abcd@192.168.0.1:30303"
                        },
                        {
                            "option": "--verbosity",
                            "shortcut": "-v",
                            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                        },
                        {
                            "shortcut": "-h",
                            "option": "--help",
                            "description": "Print help (see a summary with '-h')"
                        }
                    ]
                }
            ],
            "options": [
                {
                    "option": "--chain",
                    "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
                    "value": "<CHAIN_OR_PATH>",
                    "default": "dev"
                },
                {
                    "option": "--color",
                    "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting",
                    "value": "<COLOR>",
                    "default": "always",
                    "tags": [
                        "always",
                        "auto",
                        "never"
                    ]
                },
                {
                    "option": "--instance",
                    "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200. It is chosen in a way so that it's not possible to have port numbers that conflict with each other. Changes to the following port numbers: - `DISCOVERY_PORT`: default + `instance` - 1 - `AUTH_PORT`: default + `instance` * 100 - 100 - `HTTP_RPC_PORT`: default - `instance` + 1 - `WS_RPC_PORT`: default + `instance` * 2 - 2",
                    "value": "<INSTANCE>",
                    "default": "1"
                },
                {
                    "option": "--log.file.directory",
                    "description": "The path to put log files in",
                    "value": "<PATH>",
                    "default": "/home/ahmad/.cache/reth/logs"
                },
                {
                    "option": "--log.file.filter",
                    "description": "The filter to use for logs written to the log file",
                    "value": "<FILTER>",
                    "default": "debug"
                },
                {
                    "option": "--log.file.format",
                    "description": "The format to use for logs written to the log file",
                    "value": "<FORMAT>",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "--log.file.max-files",
                    "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
                    "value": "<COUNT>",
                    "default": "5"
                },
                {
                    "option": "--log.file.max-size",
                    "description": "The maximum size (in MB) of one log file",
                    "value": "<SIZE>",
                    "default": "200"
                },
                {
                    "option": "--log.journald",
                    "description": "Write logs to journald"
                },
                {
                    "option": "--log.journald.filter",
                    "description": "The filter to use for logs written to journald",
                    "value": "<FILTER>",
                    "default": "error"
                },
                {
                    "option": "--log.stdout.filter",
                    "description": "The filter to use for logs written to stdout",
                    "value": "<FILTER>",
                    "default": ""
                },
                {
                    "option": "--log.stdout.format",
                    "description": "The format to use for logs written to stdout",
                    "value": "<FORMAT>",
                    "default": "terminal",
                    "tags": [
                        "json",
                        "log-fmt",
                        "terminal"
                    ]
                },
                {
                    "option": "-h",
                    "shortcut": "--help",
                    "description": "Print help (see a summary with '-h')"
                },
                {
                    "option": "-q",
                    "shortcut": "--quiet",
                    "description": "Silence all log output"
                },
                {
                    "option": "-v",
                    "shortcut": "--verbosity",
                    "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
                }
            ]
        }
    ],
    "options": [
        {
            "option": "--chain",
            "description": "The chain this node is running. Possible values are either a built-in chain or the path to a chain specification file. Built-in chains: dev, optimism, optimism_sepolia, optimism-sepolia, base, base_sepolia, base-sepolia",
            "value": "<CHAIN_OR_PATH>",
            "default": "dev"
        },
        {
            "option": "--color",
            "description": "Sets whether or not the formatter emits ANSI terminal escape codes for colors and other text formatting. Possible values: - always: Colors on - auto: Colors on - never: Colors off",
            "value": "<COLOR>",
            "default": "always"
        },
        {
            "option": "--instance",
            "description": "Add a new instance of a node. Configures the ports of the node to avoid conflicts with the defaults. This is useful for running multiple nodes on the same machine. Max number of instances is 200.",
            "value": "<INSTANCE>",
            "default": "1"
        },
        {
            "option": "--log.file.directory",
            "description": "The path to put log files in",
            "value": "<PATH>",
            "default": "/home/ahmad/.cache/reth/logs"
        },
        {
            "option": "--log.file.filter",
            "description": "The filter to use for logs written to the log file",
            "value": "<FILTER>",
            "default": "debug"
        },
        {
            "option": "--log.file.format",
            "description": "The format to use for logs written to the log file. Possible values: - json: Represents JSON formatting for logs. - log-fmt: Represents logfmt (key=value) formatting for logs. - terminal: Represents terminal-friendly formatting for logs",
            "value": "<FORMAT>",
            "default": "terminal"
        },
        {
            "option": "--log.file.max-files",
            "description": "The maximum amount of log files that will be stored. If set to 0, background file logging is disabled",
            "value": "<COUNT>",
            "default": "5"
        },
        {
            "option": "--log.file.max-size",
            "description": "The maximum size (in MB) of one log file",
            "value": "<SIZE>",
            "default": "200"
        },
        {
            "option": "--log.journald",
            "description": "Write logs to journald"
        },
        {
            "option": "--log.journald.filter",
            "description": "The filter to use for logs written to journald",
            "value": "<FILTER>",
            "default": "error"
        },
        {
            "option": "--log.stdout.filter",
            "description": "The filter to use for logs written to stdout",
            "value": "<FILTER>",
            "default": ""
        },
        {
            "option": "--log.stdout.format",
            "description": "The format to use for logs written to stdout. Possible values: - json: Represents JSON formatting for logs. - log-fmt: Represents logfmt (key=value) formatting for logs. - terminal: Represents terminal-friendly formatting for logs",
            "value": "<FORMAT>",
            "default": "terminal"
        },
        {
            "option": "-h",
            "shortcut": "--help",
            "description": "Print help (see a summary with '-h')"
        },
        {
            "option": "-q",
            "shortcut": "--quiet",
            "description": "Silence all log output"
        },
        {
            "option": "-v",
            "shortcut": "--verbosity",
            "description": "Set the minimum log level. -v Errors -vv Warnings -vvv Info -vvvv Debug -vvvvv Traces (warning: very verbose!)"
        },
        {
            "option": "-V",
            "shortcut": "--version",
            "description": "Print version"
        }
    ],
    "version": "1.1.2"
}